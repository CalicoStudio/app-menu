%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (min) ()
%%Title: (_network_simple_pass.eps)
%%CreationDate: 7/18/2012 10:26 AM
%%Canvassize: 16383
%%BoundingBox: 0 -2600 2800 0
%%HiResBoundingBox: 0 -2600 2800 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 0.810574 0.259586 0.221195 0.00235 (R=0 G=148 B=179)
%%+ 0.47245 0.030304 0.131777 0.000031 (R=128 G=202 B=217)
%%+ 0.637751 0.946044 0.345495 0.235782 (R=99 G=41 B=92)
%%+ 0.000031 0.000031 0.000031 0.000031 (White)
%%+ 0.75021 0.679683 0.670222 0.90164 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 1400.5 -1300.5 1400.5 -1300.5
%AI3_TileBox: 1102.3999 -1720.9902 1697.4199 -879.1299
%AI3_DocumentPreview: Header
%AI5_ArtSize: 2800 2600
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -3781.1533 2803.1152 0.125 1842 1077 18 1 0 1435 114 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:1089.8467 -1511.8848
%AI7_GridSettings: 72 1 72 1 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
3 Bn
%AI5_BeginGradient: (Unnamed gradient 13)
(Unnamed gradient 13) 1 2 Bd
[
<
000000010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E2020212223
2425272829292A2B2C2D2E2F303132333435363738393A3B3C3C3D3E3F404142434445464748494A
4B4C4D4E4F505152535454555658595A5B5C5D5E5F606162636465666768696A6A6B6C6D6E6F7071
7273747576777878797A7B7C7D7E7F80818283838585868788898A8B8B8C8D8E8F90909192939495
9596979899999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A7A8A9AAABABACACADAEAEAFB0B0B1B2B3B3B4
B5B5B6B6B7B8B8B9B9BABBBBBCBCBDBDBEBFBFC0C0C1C1C2C2C2C3C3C4C4C5C5C5C6C6C7C7C7C8C8
C9C9CACACACBCBCCCCCCCDCDCECECFCF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000010001000001000101000101010102010101010201020101020102020102010201
02020102020202030302030304030304030404050404050405050405050605060605060607060707
0608070808070808090809090809090A09090A0A0B0A0C0B0B0C0C0D0D0E0D0D0E0E0F0F0E0F0F11
10111110121113121213131414151514161618171919181A191B1B1A1C1B1D1D1E1E1D1F1F202022
212123222424242525272628282829292B2A2A2C2B2D2D2F2E2E3030313133333335343636363737
39393B3B3A3C3C3D3D3D3F3F41414242
>
<
00000000000000010101020102030202030303040404050404040505050605060707070608070809
0809090A0A090B0A0A0B0B0B0B0C0C0C0E0D0D0E0E0E0E100F0F10100F1111111112121213131214
131414151514161515171717161818181919191A1A1A1A1B1B1B1D1C1C1C1D1D1D1F1E1E1F1F1E1E
201F2020212121222121222222232322242423242424242526252726262527272628272727282827
2928282A292A292A2B2A2C2B2B2C2C2C2C2E2D2D2E2E2E2F2F2E2E302F2F30302F31313030313130
32323133323232333332343333333434333535343635353436363537363636363635373636383737
38383737383737383838393938383838
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000010101010101
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFFFEFEFDFDFCFCFCFBFBFAFAFAF9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F2F2F2F1F1F0F0EFEFEF
EEEEEDEDEDECECEBEBEAEAEAE9E9E8E8E8E7E7E6E6E5E5E5E4E4E3E3E2E2E2E1E1E0E0E0DFDFDEDE
DDDDDDDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D0D0D0CFCFCECECDCD
CDCCCCCBCBCBCACAC9C9C8C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0C0BFBFBEBEBEBDBDBC
BCBBBBBBBABAB9B9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAEAEAEADADACACAB
ABABAAAAA9A9A9A8A8A7A7A6A6A6A5A5A4A4A4A3A3A2A2A1A1A1A0A09F9F9E9E9E9D9D9C9C9C9B9B
9A9A9999999898979797969695959494
>
<
FFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFBFAFAFAF9F9F9F8F8F8F8F7F7F7F6F6F6F5F5F5F5F4F4F4F3
F3F3F2F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDEDECECECEBEBEBEAEAEAEAE9E9E9E8E8E8E7
E7E7E7E6E6E6E5E5E5E4E4E4E4E3E3E3E2E2E2E1E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDC
DBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D6D6D6D6D5D5D5D4D4D4D3D3D3D3D2D2D2D1D1D1D1D0D0D0
CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C8C8C8C8C7C7C7C6C6C6C5C5C5C5C4C4C4
C3C3C3C2C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBABABABAB9B9B9B8B8B8
B7B7B7B7B6B6B6B5B5B5B4B4B4B4B3B3
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 2 50 100 %_BS
%_0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 16)
(Unnamed gradient 16) 0 2 Bd
[
<
000000010202020304050505060607070808090A0B0B0C0D0D0E0F10101112121213141515161717
18191A1A1B1C1D1D1E1F1F20212323252627272829292A2B2C2C2D2E2F2F30323233343535363738
38393A3C3C3D3E3E3F404141434445464749494A4C4D4D4E5051515253535456575758595A5A5C5D
5D5E5F60606162646465666667696A6A6B6C6E6D6F70717172737374757676777879797A7C7B7D7E
7F7F818182828384848586878788898A8A8B8C8D8E8F8F9090919293939495959697969799999999
9B9C9B9C9E9D9E9EA1A0A0A1A3A2A3
>
<
00000001020203040505060708090A0B0B0D0E0F10111213141516161819191A1C1D1D1E20212123
242425262728292A2B2C2D2E2F3031333435363738393A3B3C3D3E3F40424344454647484A4B4C4D
4E4F5051525354555657585A5B5C5D5F60616364656668696A6B6C6E6F70717374767778797B7C7D
7F80818284858687898A8C8D8E90919293959697989A9B9D9E9FA1A2A3A4A6A7A8A9ABACADAFB0B1
B2B4B5B6B7B9BABBBDBEC0C1C2C3C4C5C7C8C8CACBCCCDCFD0D1D2D4D5D5D6D8D9DADCDDDEDFE0E1
E3E4E5E6E7E8E9EAEBECEDEEEFF0F1
>
<
000000000001010101020202020304030404050505060707060708080708080908090A0A090A0A0B
0A0B0C0D0E0D0E0E0F0E0F1011101112131213141514151617171617181918191A1B1A1B1B1C1C1C
1D1E1D1E1F20212021222322232425242527272728292928292A2B2A2B2C2D2E2D2E2F302F2F3032
303233343334353634353637383738393A393A3B3C3B3C3C3D3C3D3E3F3E3F404041404142434243
44454444454645464748474849494A494A4B4C4B4C4D4D4C4D4E4E4D4E4F504F4F50515251525353
525354555455555655565757575758
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000010101010102020202020203030303030303040404050506060607070808090A0A0A0B
0C0C0C0D0E0F0F10101111121314151516171818191A1B1B1C1E1F1F202123222325262827292A2C
2B2D2E303031333434363739393A3C
>
<
FFFEFEFDFCFBFBFAF9F8F8F7F6F6F5F4F3F3F2F1F0F0EFEEEEEDECEBEBEAE9E8E8E7E6E5E5E4E3E3
E2E1E0E0DFDEDDDDDCDBDBDAD9D8D8D7D6D5D5D4D3D3D2D1D0D0CFCECDCDCCCBCBCAC9C8C8C7C6C5
C5C4C3C2C2C1C0C0BFBEBDBDBCBBBABAB9B8B8B7B6B5B5B4B3B2B2B1B0B0AFAEADADACABAAAAA9A8
A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9A9A999897979695959493929291908F8F8E8D8D8C8B
8A8A898887878685858483828281807F7F7E7D7D7C7B7A7A797877777675747473727271706F6F6E
6D6C6C6B6A6A696867676665646463
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A29
>
<
FFFEFDFDFCFBFAFAF9F8F7F7F6F5F4F4F3F2F1F1F0EFEEEDEDECEBEAEAE9E8E7E7E6E5E4E4E3E2E1
E1E0DFDEDDDDDCDBDADAD9D8D7D7D6D5D4D4D3D2D1D1D0CFCECDCDCCCBCACAC9C8C7C7C6C5C4C4C3
C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABAAAAA9A8A7A7A6A5A4
A4A3A2A1A1A09F9E9E9D9C9B9A9A999897979695949493929191908F8E8E8D8C8B8A8A8988878786
85848483828181807F7E7E7D7C7B7A7A797877777675747473727171706F6E6E6D6C6B6A6A696867
676665646463626161605F5E5E5D5C
>
4 %_Br
[
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 2 50 100 %_BS
%_0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 5 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 2 Bd
[
<
000000010203040505060708090A0A0C0C0D0E0F101112131415161718191A1B1C1D1E2020212223
24252728292A2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B
4C4D4E4F505152535454555658595A5B5C5D5E5F60616263646566676869696A6B6C6D6E6F707172
73747576777878
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000010000010001000001000101010101010102010101010101010101010102010201010101
02010102010202030202030203030403030403040403040405040505040505060506060506060706
06070708070808
>
<
00000000000100010101020102030203030303040404050404050505050605060707070808070809
0809090A090A0B0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F100F111010111111111212121313131414
141416151516161517181717181818191A191B1A1A1B1B1C1B1D1C1C1E1D1D1D1F1E1E201F1F2020
20202121212122
>
0.000031
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
86858483828180
>
<
FFFFFEFEFDFDFCFCFCFBFBFAFAFAF9F9F8F8F7F7F7F6F6F5F5F4F4F4F3F3F2F2F2F1F1F0F0EFEFEF
EEEEEDEDECECECEBEBEAEAEAE9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E2E2E2E1E1E0E0DFDFDFDEDE
DDDDDDDCDCDBDBDADADAD9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0CFCFCFCECECDCD
CDCCCCCBCBCACA
>
<
FFFFFEFEFEFDFDFDFDFCFCFCFBFBFBFAFAFAFAF9F9F9F8F8F8F7F7F7F7F6F6F6F5F5F5F4F4F4F4F3
F3F3F2F2F2F1F1F1F1F0F0F0EFEFEFEEEEEEEEEDEDEDECECECEBEBEBEAEAEAEAE9E9E9E8E8E8E7E7
E7E7E6E6E6E5E5E5E4E4E4E4E3E3E3E2E2E2E1E1E1E1E0E0E0DFDFDFDEDEDEDEDDDDDDDCDCDCDBDB
DBDBDADADAD9D9
>
4 %_Br
[
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 2 50 100 %_BS
%_0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6701.1533 6979.1152 m
-6521.8091 6979.1152 L
-6521.8091 6943.9429 L
-6701.1533 6943.9429 L
-6701.1533 6979.1152 L
n
u
u
0 O
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
0 R
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
0.5 w-6539.9819 6944.1934 m
-6682.981 6944.1934 L
-6682.981 6946.7627 L
-6539.9819 6946.7627 L
-6539.9819 6944.1934 L
b
-6682.981 6969.5981 m
-6539.9819 6969.5981 L
-6539.9819 6966.8262 L
-6682.981 6966.8262 L
-6682.981 6969.5981 L
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
-6682.981 6946.7627 m
-6682.981 6966.8262 L
-6539.9819 6966.8262 L
-6539.9819 6946.7627 L
-6682.981 6946.7627 L
b
U
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-6561.3511 6978.7349 m
-6522.4077 6978.7349 L
-6524.5825 6976.5137 L
-6556.1509 6976.5137 L
-6561.3511 6978.7349 L
b
-6522.4077 6954.7002 m
-6539.9819 6954.7002 L
-6539.9819 6956.7949 L
-6524.4771 6956.7949 L
-6522.4077 6954.7002 L
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
-6524.4771 6956.7949 m
-6539.9819 6956.7949 L
-6539.9819 6969.5981 L
-6556.1509 6976.5137 L
-6524.5825 6976.5137 L
-6534.7998 6967.2437 L
-6524.4771 6956.7949 L
b
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-6700.5552 6978.7349 m
-6661.6128 6978.7349 L
-6666.812 6976.5137 L
-6698.3818 6976.5137 L
-6700.5552 6978.7349 L
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
-6682.9819 6956.7949 m
-6698.4878 6956.7949 L
-6688.1646 6967.2437 L
-6698.3818 6976.5137 L
-6666.812 6976.5137 L
-6682.9819 6969.5981 L
-6682.9819 6956.7949 L
b
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-6682.9819 6954.7002 m
-6700.5552 6954.7002 L
-6698.4878 6956.7949 L
-6682.9819 6956.7949 L
-6682.9819 6954.7002 L
b
-6661.6128 6978.7349 m
-6682.9819 6969.5981 L
S
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-6561.3511 6969.5981 m
-6561.3511 6976.2988 L
-6545.6802 6969.5981 L
-6561.3511 6969.5981 L
b
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-6561.3511 6976.2988 m
-6561.3511 6978.7349 L
-6539.9819 6969.5981 L
-6545.6802 6969.5981 L
-6561.3511 6976.2988 L
b
-6682.9819 6969.5981 m
-6661.6128 6978.7349 L
-6661.6128 6976.2988 L
-6677.2827 6969.5981 L
-6682.9819 6969.5981 L
b
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-6677.2827 6969.5981 m
-6661.6128 6976.2988 L
-6661.6128 6969.5981 L
-6677.2827 6969.5981 L
b
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 44)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d1 XR
-6696.8198 6979.1152 m
-6701.1533 6979.1152 L
-6701.1533 6975.5142 L
-6696.8198 6975.5142 L
-6696.8198 6979.1152 L
n
u
0 Ap
0 XR
-6700.1235 6978.4517 m
-6697.8496 6978.4517 L
-6697.8496 6976.1777 L
-6700.1235 6976.1777 L
-6700.1235 6978.4517 L
n
1 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
-6697.8496 6977.3145 m
-6697.8496 6977.9419 -6698.3589 6978.4517 -6698.9868 6978.4517 c
-6699.6147 6978.4517 -6700.1235 6977.9419 -6700.1235 6977.3145 c
-6700.1235 6976.687 -6699.6147 6976.1777 -6698.9868 6976.1777 c
-6698.3589 6976.1777 -6697.8496 6976.687 -6697.8496 6977.3145 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 47)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d1 XR
-6694.7598 6979.1152 m
-6701.1533 6979.1152 L
-6701.1533 6975.5142 L
-6694.7598 6975.5142 L
-6694.7598 6979.1152 L
n
u
0 XR
-6699.0938 6978.4517 m
-6696.8198 6978.4517 L
-6696.8198 6976.1777 L
-6699.0938 6976.1777 L
-6699.0938 6978.4517 L
n
1 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
-6696.8198 6977.3145 m
-6696.8198 6977.9419 -6697.3286 6978.4517 -6697.9565 6978.4517 c
-6698.5845 6978.4517 -6699.0938 6977.9419 -6699.0938 6977.3145 c
-6699.0938 6976.687 -6698.5845 6976.1777 -6697.9565 6976.1777 c
-6697.3286 6976.1777 -6696.8198 6976.687 -6696.8198 6977.3145 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 48)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-6701.1533 6979.1152 m
-6693.2998 6979.1152 L
-6693.2998 6970.7109 L
-6701.1533 6970.7109 L
-6701.1533 6979.1152 L
n
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
3.86371 M-6700.3115 6970.7109 m
-6699.8345 6970.6997 -6699.4375 6971.0747 -6699.4258 6971.5527 c
-6699.4126 6972.0293 -6699.7891 6972.4253 -6700.2671 6972.439 c
-6700.7437 6972.4512 -6701.1411 6972.0752 -6701.1528 6971.5977 c
-6701.1655 6971.1206 -6700.7891 6970.7222 -6700.3115 6970.7109 c
f
-6700.2891 6971.5752 m
F
U
u
-6700.3091 6972.9336 m
-6699.8315 6972.9238 -6699.4346 6973.2998 -6699.4219 6973.7773 c
-6699.4097 6974.2534 -6699.7866 6974.6509 -6700.2637 6974.6641 c
-6700.7407 6974.6768 -6701.1382 6974.2998 -6701.1504 6973.8228 c
-6701.1626 6973.3452 -6700.7861 6972.9497 -6700.3091 6972.9336 c
f
-6700.2866 6973.7998 m
F
U
u
-6700.3057 6975.1621 m
-6699.8286 6975.1494 -6699.4316 6975.5254 -6699.4194 6976.0029 c
-6699.4072 6976.479 -6699.7837 6976.8765 -6700.2607 6976.8896 c
-6700.7378 6976.9023 -6701.1348 6976.5254 -6701.147 6976.0479 c
-6701.1602 6975.5708 -6700.7832 6975.1733 -6700.3057 6975.1621 c
f
-6700.2832 6976.0254 m
F
U
u
-6700.3032 6977.3877 m
-6699.8257 6977.374 -6699.4287 6977.751 -6699.416 6978.2285 c
-6699.4033 6978.7046 -6699.7808 6979.1016 -6700.2578 6979.1152 c
-6700.7349 6979.1279 -6701.1318 6978.751 -6701.1445 6978.2734 c
-6701.1563 6977.7969 -6700.7808 6977.3984 -6700.3032 6977.3877 c
f
-6700.2808 6978.251 m
F
U
u
-6698.3071 6971.7817 m
-6697.8296 6971.7686 -6697.4326 6972.1445 -6697.4199 6972.6221 c
-6697.4072 6973.0981 -6697.7842 6973.4956 -6698.2617 6973.5098 c
-6698.7388 6973.5215 -6699.1357 6973.1445 -6699.1479 6972.668 c
-6699.1602 6972.1904 -6698.7837 6971.792 -6698.3071 6971.7817 c
f
-6698.2837 6972.6445 m
F
U
u
-6698.3032 6974.0054 m
-6697.8262 6973.9941 -6697.4297 6974.3701 -6697.4165 6974.8477 c
-6697.4048 6975.3252 -6697.7808 6975.7222 -6698.2588 6975.7344 c
-6698.7358 6975.7471 -6699.1328 6975.3701 -6699.145 6974.8926 c
-6699.1572 6974.416 -6698.7808 6974.0181 -6698.3032 6974.0054 c
f
-6698.2808 6974.8701 m
F
U
u
-6698.3008 6976.231 m
-6697.8232 6976.2197 -6697.4263 6976.5957 -6697.4141 6977.0747 c
-6697.4019 6977.5493 -6697.7788 6977.9478 -6698.2559 6977.96 c
-6698.7324 6977.9727 -6699.1299 6977.5962 -6699.1421 6977.1182 c
-6699.1548 6976.6416 -6698.7778 6976.2432 -6698.3008 6976.231 c
f
-6698.2778 6977.0957 m
F
U
u
-6696.2256 6972.8276 m
-6695.7485 6972.8149 -6695.3521 6973.1934 -6695.3398 6973.6685 c
-6695.3271 6974.146 -6695.7041 6974.5439 -6696.1807 6974.5566 c
-6696.6587 6974.5693 -6697.0552 6974.1909 -6697.0674 6973.7148 c
-6697.0806 6973.2388 -6696.7031 6972.8413 -6696.2256 6972.8276 c
f
-6696.2036 6973.6934 m
F
U
u
-6696.2231 6975.0547 m
-6695.7461 6975.0405 -6695.3486 6975.4165 -6695.3364 6975.894 c
-6695.3237 6976.3726 -6695.7007 6976.7695 -6696.1782 6976.7837 c
-6696.6558 6976.7949 -6697.0527 6976.4165 -6697.0649 6975.9404 c
-6697.0767 6975.4639 -6696.7002 6975.0664 -6696.2231 6975.0547 c
f
-6696.2007 6975.9165 m
F
U
u
-6694.1865 6973.8975 m
-6693.709 6973.8848 -6693.3125 6974.2627 -6693.2998 6974.7407 c
-6693.2866 6975.2168 -6693.6636 6975.6138 -6694.1416 6975.627 c
-6694.6187 6975.6377 -6695.0151 6975.2627 -6695.0278 6974.7837 c
-6695.0396 6974.3062 -6694.6631 6973.9102 -6694.1865 6973.8975 c
f
-6694.1636 6974.7627 m
F
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -
(rnOnPath Brush Tool/ Arrow Brush Circles/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Banner)
(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Arrow Brush Circles)
(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -
(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -
( 1 0 4 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(Black)
Pc
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
(R=99 G=41 B=92)
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 (White) 0 1 Xk
(White)
Pc
0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 (R=0 G=148 B=179) 0 1 Xk
(R=0 G=148 B=179)
Pc
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
(R=128 G=202 B=217)
Pc
Bb
2 (Unnamed gradient 16) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Unnamed gradient 16)
Pc
Bb
0 0 0 0 Bh
2 (Unnamed gradient 13) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Unnamed gradient 13)
Pc
Bb
2 (Unnamed gradient 21) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Unnamed gradient 21)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(bg) Ln
0 A
1 Ap
0 O
0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 (R=0 G=148 B=179) 0 1 Xk
0 J 0 j 1 w 4 M []0 d0 XR
2800 -2600 m
0 -2600 L
0 0 L
2800 0 L
2800 -2600 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(image) Ln
0 A
u
u
u
0 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
1207.2026 -2200.2695 m
1204.3247 -2174.4766 1186.3052 -2162.0059 1167.2686 -2157.2188 C
1191.5923 -2149.2598 1208.5103 -2139.7969 1206.3975 -2116.5859 c
1204.2813 -2093.375 1196.9165 -2038.3574 Y
1300.1152 -2038.3574 L
1276.9751 -1974.543 1197.9263 -1763.5605 1142.7939 -1691.0527 C
521.0366 -1691.0527 L
443.8667 -1902.459 412.6021 -2600 Y
1207.3306 -2600 L
1191.5698 -2292.9258 1188.4551 -2261.9492 v
1187.1108 -2248.5449 1210.7666 -2232.2148 1207.2026 -2200.2695 c
Bb
1 (Unnamed gradient 16) 1038.5708 -805.8486 -97.4187 1161.4905 1 0 0 1 0 0 Bg
-149.97 -1151.7678 -863.3402 112.4142 1455.5454 -860.1421 Xm
-888.1274 -6820.8091 -863.3402 112.4142 2343.6729 5960.667 Bc
-149.97 -1151.7678 -863.3402 112.4142 1455.5454 -860.1421 Bm
-888.1274 -6820.8091 -863.3402 112.4142 1305.5752 -2011.9102 Bc
f
0 BB
u
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
520.7183 -1836.082 m
520.7183 -2129.9902 L
439.561 -2129.9902 373.7651 -2064.1973 373.7651 -1983.0352 c
373.7651 -1901.875 439.561 -1836.082 520.7183 -1836.082 C
f
U
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
520.7183 -2093.2051 m
459.9717 -2093.2051 410.5508 -2043.7832 410.5508 -1983.0352 c
410.5508 -1922.2881 459.9717 -1872.8672 520.7183 -1872.8672 C
520.7183 -1887.7852 L
468.1973 -1887.7852 425.4688 -1930.5137 425.4688 -1983.0352 c
425.4688 -2035.5576 468.1973 -2078.2871 520.7183 -2078.2871 C
520.7183 -2093.2051 L
520.7183 -2093.2051 L
f
520.7183 -2050.7969 m
483.3569 -2050.7969 452.9609 -2020.3994 452.9609 -1983.0352 c
452.9609 -1945.6709 483.3569 -1915.2734 520.7183 -1915.2734 C
520.7183 -1930.1914 L
491.5825 -1930.1914 467.8789 -1953.8975 467.8789 -1983.0352 c
467.8789 -2012.1729 491.5825 -2035.8789 520.7183 -2035.8789 C
520.7183 -2050.7969 L
520.7183 -2050.7969 L
f
U
U
u
0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 (R=0 G=148 B=179) 0 1 Xk
1012.1914 -1784.5859 m
988.605 -1784.6328 969.5283 -1803.7988 969.5767 -1827.3809 c
969.6255 -1850.9668 988.7769 -1870.0508 1012.3633 -1870.002 c
1035.9438 -1869.957 1055.0215 -1850.791 1054.9717 -1827.2051 c
1054.9258 -1803.625 1035.7739 -1784.543 1012.1914 -1784.5859 c
f
U
u
851.7422 -1784.5859 m
828.1563 -1784.6328 809.0791 -1803.7988 809.1274 -1827.3809 c
809.1768 -1850.9668 828.3286 -1870.0508 851.9146 -1870.002 c
875.4946 -1869.957 894.5732 -1850.791 894.5234 -1827.2051 c
894.4775 -1803.625 875.3252 -1784.543 851.7422 -1784.5859 c
f
U
U
1 Ap
1653.9688 -547.2686 m
1706.4697 -884.3262 1475.791 -1200.1245 1138.7344 -1252.625 c
801.6758 -1305.127 485.875 -1074.4482 433.375 -737.3896 c
380.874 -400.3311 611.5537 -84.5313 948.6113 -32.0303 c
1285.6699 20.4697 1601.4688 -210.209 1653.9688 -547.2686 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 1986.9912 -873.8008 0 617.6558 0.988086 -0.153906 0.153906 0.988086 -2033.7832 1212.0272 Bg
610.2967 95.061 95.061 -610.2967 1043.6729 -642.3286 Bm
f
0 BB
/BBAccumRotation (0.154520) XT
u
u
0 Ap
850.5322 -1122.0986 m
818.6104 -1103.3154 777.0913 -1160.917 815.4092 -1178.1201 c
954.0454 -1240.3633 1084.1191 -1294.416 1143.7446 -1316.5508 C
1156.6357 -1289.0039 L
1111.2236 -1262.7578 959.5088 -1186.2188 850.5322 -1122.0986 c
Bb
1 (Unnamed gradient 16) 2556.7471 -1703.6436 -125.2724 93.4334 0.955986 -0.293413 0.293413 0.955986 -3657.1543 2541.6062 Bg
-29.1981 -88.754 -384.3015 126.4266 1193.126 -1184.4829 Xm
-2881.5649 -8759.1543 -384.3015 126.4266 4074.6904 7574.6719 Bc
-29.1981 -88.754 -384.3015 126.4266 1193.126 -1184.4829 Bm
-2881.5649 -8759.1543 -384.3015 126.4266 1163.9277 -1273.2373 Bc
f
0 BB
/BBAccumRotation (0.297795) XT
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1177.0913 -1302.7324 m
1185.063 -1324.6895 L
1185.6558 -1326.3301 1184.7505 -1328.1621 1183.1104 -1328.7617 c
1181.4736 -1329.3555 1179.6045 -1328.5313 1179.0068 -1326.8906 C
1177.7998 -1323.5723 L
1177.7222 -1323.3555 1177.4546 -1323.2539 1177.2358 -1323.334 c
1177.0195 -1323.4121 1176.8823 -1323.6621 1176.9595 -1323.8789 C
1178.7578 -1328.8281 L
1179.3535 -1330.4648 1178.5366 -1332.2676 1176.897 -1332.8633 c
1175.2588 -1333.459 1173.4741 -1332.6035 1172.8779 -1330.9629 C
1171.0796 -1326.0156 L
1170.999 -1325.8008 1170.7319 -1325.6973 1170.5161 -1325.7773 c
1170.3008 -1325.8535 1170.1602 -1326.1055 1170.2383 -1326.3223 C
1171.248 -1329.0957 L
1171.8428 -1330.7363 1171.0249 -1332.5391 1169.3857 -1333.1348 c
1167.7466 -1333.7305 1165.9619 -1332.873 1165.3652 -1331.2344 C
1164.3555 -1328.459 L
1164.2793 -1328.2422 1164.0142 -1328.1406 1163.7964 -1328.2207 c
1163.5796 -1328.2988 1163.438 -1328.5488 1163.5195 -1328.7637 C
1164.2183 -1330.6934 L
1164.814 -1332.332 1163.9985 -1334.1328 1162.3569 -1334.7305 c
1160.7178 -1335.3262 1158.9341 -1334.4668 1158.3389 -1332.8301 C
1152.104 -1315.6738 L
1145.5962 -1312.5918 L
1155.0195 -1292.4531 L
1177.0913 -1302.7324 L
f
1191.7881 -1313.0801 m
1192.5269 -1311.498 1191.8442 -1309.6191 1190.2607 -1308.8828 C
1177.0913 -1302.7324 L
1175.5073 -1301.9941 1173.6294 -1302.6758 1172.8955 -1304.2559 c
1172.1548 -1305.8398 1172.8379 -1307.7168 1174.418 -1308.4551 C
1187.5923 -1314.6055 L
1189.1714 -1315.3418 1191.0518 -1314.6582 1191.7881 -1313.0801 c
f
U
U
u
u
u
u
798.9561 -1061.0156 m
799.5552 -1055.957 793.5664 -1054.3037 791.1553 -1056.4307 C
791.8193 -1053.4404 788.355 -1052.0889 785.6851 -1051.2041 c
783.0176 -1050.3184 778.4648 -1049.3926 Y
781.9443 -1040.29 L
769.7598 -1040.0742 755.4165 -1040.8613 v
741.0771 -1041.6465 728.1729 -1049.7148 721.7939 -1066.3906 c
714.5527 -1085.2988 717.8169 -1094.6436 737.9058 -1107.2227 c
748.8818 -1114.0957 763.0083 -1129.0977 772.2236 -1158.3809 C
850.5322 -1122.0986 L
838.0898 -1096.5918 818.3516 -1073.5869 798.9561 -1061.0156 C
Bb
1 (Unnamed gradient 21) 806.688 -1067.2959 -129.2894 59.8798 1 0 0 1 0 0 Bg
-37.9181 -46.3444 -111.8655 91.5263 861.3579 -1112.0259 Xm
-4759.4619 -5817.1211 -111.8655 91.5263 5620.8193 4705.0952 Bc
-37.9181 -46.3444 -111.8655 91.5263 861.3579 -1112.0259 Bm
-4759.4619 -5817.1211 -111.8655 91.5263 823.4399 -1158.3701 Bc
f
0 BB
1 Ap
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
758.7832 -1048.6689 m
760.9814 -1048.8193 762.6406 -1050.7217 762.4854 -1052.9209 c
762.3335 -1055.1211 760.4258 -1056.7764 758.2271 -1056.623 c
756.0303 -1056.4707 754.374 -1054.5645 754.5269 -1052.3672 c
754.6826 -1050.1709 756.5859 -1048.5137 758.7832 -1048.6689 c
f
755.4976 -1057.25 m
757.6948 -1057.4023 759.3525 -1059.3096 759.1978 -1061.5068 c
759.0444 -1063.7002 757.1406 -1065.3594 754.9424 -1065.207 c
752.7471 -1065.0547 751.0869 -1063.1514 751.2441 -1060.9492 c
751.3945 -1058.7559 753.3027 -1057.0986 755.4976 -1057.25 c
f
U
0 Ap
715.2959 -1090.9648 m
708.4424 -1087.7236 706.4048 -1077.9287 711.0732 -1071.8223 c
715.7393 -1065.7168 716.4873 -1059.041 712.8276 -1058.167 C
720.0112 -1054.3896 728.5435 -1060.002 729.7383 -1067.1826 c
730.9395 -1074.3564 725.084 -1089.3584 723.7769 -1091.9863 C
727.9746 -1092.2002 739.6411 -1103.3389 737.9058 -1107.2227 C
728.9033 -1110.6973 711.5342 -1101.6387 715.2959 -1090.9648 C
f
U
850.5322 -1122.0986 m
974.4185 -1250.9473 1004.748 -1400.2617 Y
962.7324 -1400.2617 840.3677 -1400.2617 798.354 -1400.2617 C
807.626 -1281.7129 772.2354 -1158.3828 V
785.6045 -1152.2207 828.3247 -1132.457 850.5322 -1122.0986 C
Bb
1 (Unnamed gradient 16) 936.4482 -1112.252 -106.0154 120.5968 1 0 0 1 0 0 Bg
-33.2722 -115.9162 -282.8023 81.1747 1077.8486 -1152.8389 Xm
-2098.863 -7312.1694 -282.8023 81.1747 3176.7119 6159.3306 Bc
-33.2722 -115.9162 -282.8023 81.1747 1077.8486 -1152.8389 Bm
-2098.863 -7312.1694 -282.8023 81.1747 1044.5762 -1268.7549 Bc
f
0 BB
/BBAccumRotation (0.525726) XT
u
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
1077.1514 -1677.4473 m
1078.7769 -1680.5684 1087.2905 -1682.5723 1093.5273 -1681.6563 c
1098.6421 -1680.9043 1105.4526 -1686.457 1096.6333 -1689.3887 c
1085.7217 -1693.0176 1074.5283 -1691.6777 1071.1191 -1687.332 C
1071.1206 -1689.0645 1071.1191 -1691.0527 y
1057.4883 -1691.0293 l
1058.9272 -1677.418 l
1077.1514 -1677.4473 L
f
u
965.5146 -1372.1309 m
1047.0391 -1419.2559 1143.1899 -1510.8262 1077.4663 -1670.6504 C
1072.6626 -1670.6504 1077.4673 -1670.5605 1058.7393 -1670.5625 C
1109.0303 -1512.2051 1008.2188 -1462.4414 893.4321 -1413.4883 c
838.4126 -1390.0254 913.9121 -1342.3027 965.5146 -1372.1309 c
f
U
U
u
688.3193 -1674.4258 m
685.3281 -1677.6289 682.2764 -1683.0762 682.1074 -1686.0352 c
681.9238 -1689.2559 690.8364 -1691.5801 693.9141 -1691.582 c
700.5332 -1691.5859 708.9609 -1688.2285 708.5332 -1685.3223 c
708.106 -1682.4141 706.5254 -1673.6582 y
688.3193 -1674.4258 L
f
/BBAccumRotation (0.138848) XT
u
818.8926 -1396.4492 m
813.8228 -1512.582 784.4038 -1572.3965 689.8096 -1668.0703 C
694.6074 -1667.877 689.8037 -1667.9805 708.5186 -1667.2227 C
807.3838 -1585.2734 873.1265 -1535.3691 894.6104 -1406.7754 c
904.4668 -1347.7813 821.4922 -1336.9023 818.8926 -1396.4492 c
f
U
U
U
u
u
830.2446 -1131.502 m
844.5957 -1124.8516 l
857.1719 -1135.2842 l
840.0332 -1144.2383 l
830.2446 -1131.502 l
Bb
1 (Unnamed gradient 21) 848.1299 -1127.5903 -127.3039 28.3352 1 0 0 1 0 0 Bg
-17.1724 -22.5388 -22.0422 16.7941 859.1509 -1135.9873 Xm
-4577.0322 -6007.3545 -22.0422 16.7941 5436.1826 4871.3672 Bc
-17.1724 -22.5388 -22.0422 16.7941 859.1509 -1135.9873 Bm
-4577.0322 -6007.3545 -22.0422 16.7941 841.9785 -1158.5259 Bc
f
0 BB
/BBAccumRotation (1.311124) XT
U
u
843.626 -1142.4541 m
838.6514 -1132.7539 849.4736 -1129.0068 854.1216 -1136.9072 c
875.3652 -1173.0068 889.9561 -1202.0015 903.9063 -1286.6543 C
896.4478 -1296.8262 885.0186 -1312.4238 Y
866.0757 -1298.3965 859.7891 -1292.8184 V
859.6133 -1232.8789 859.7461 -1173.8848 843.626 -1142.4541 c
Bb
1 (Unnamed gradient 21) 904.3096 -1170.8403 -127.3039 25.0219 1 0 0 1 0 0 Bg
-15.1643 -19.9032 -119.1316 90.7669 961.9478 -1214.7549 Xm
-4611.083 -6052.0469 -119.1316 90.7669 5573.0313 4837.292 Bc
-15.1643 -19.9032 -119.1316 90.7669 961.9478 -1214.7549 Bm
-4611.083 -6052.0469 -119.1316 90.7669 946.7832 -1234.6582 Bc
f
0 BB
/BBAccumRotation (0.575201) XT
U
U
U
u
u
u
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
997.7227 -339.8984 m
805.7822 -369.7959 714.1528 -498.7568 743.3887 -686.459 c
772.625 -874.1582 954.6426 -965.168 965.3013 -1033.5918 C
982.9727 -1030.8398 1221.9238 -993.6201 1239.5938 -990.8682 C
1228.937 -922.4434 1374.6484 -780.3838 1345.4121 -592.6855 c
1316.1758 -404.9844 1189.6641 -310.001 997.7227 -339.8984 c
f
/BBAccumRotation (0.154520) XT
u
u
u
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
1147.3906 -1005.0649 m
1099.9058 -700.2153 L
1099.4478 -697.2764 1096.6841 -695.2563 1093.7476 -695.7148 C
1090.854 -677.1523 L
1104.0342 -675.0986 1116.4155 -684.1479 1118.4688 -697.3228 C
1165.9541 -1002.1733 L
1147.3906 -1005.0649 L
1147.3906 -1005.0649 L
f
1039.481 -1021.8735 m
991.9966 -717.021 L
991.0024 -710.6411 992.5527 -704.2554 996.3613 -699.0396 c
1000.1714 -693.8223 1005.7847 -690.4019 1012.167 -689.4087 C
1015.0557 -707.9722 L
1013.6338 -708.1934 1012.3828 -708.9561 1011.5337 -710.1191 c
1010.6841 -711.2822 1010.3384 -712.7065 1010.5596 -714.1289 C
1058.0444 -1018.9819 L
1039.481 -1021.8735 L
1039.481 -1021.8735 L
f
*u
1033.2627 -724.936 m
1018.7378 -724.936 1006.5708 -714.5073 1004.332 -700.1392 c
1003.127 -692.4053 1005.0054 -684.665 1009.6211 -678.3452 c
1014.2373 -672.0244 1021.04 -667.8799 1028.7754 -666.6753 c
1030.2744 -666.4419 1031.7993 -666.3237 1033.3081 -666.3237 c
1047.833 -666.3237 1059.9995 -676.75 1062.2378 -691.1157 c
1064.7241 -707.083 1053.7593 -722.0967 1037.7954 -724.5845 c
1036.2949 -724.8179 1034.7705 -724.936 1033.2627 -724.936 C
1033.2627 -724.936 L
f
1 D
1033.3081 -685.1108 m
1032.7642 -685.1108 1032.2119 -685.1538 1031.666 -685.2388 c
1028.8901 -685.6709 1026.4487 -687.1577 1024.793 -689.4258 c
1023.1367 -691.6934 1022.4629 -694.4712 1022.8955 -697.2471 c
1023.686 -702.3223 1028.1431 -706.1489 1033.2627 -706.1489 c
1033.8071 -706.1489 1034.3594 -706.106 1034.9053 -706.021 c
1040.6323 -705.1284 1044.5669 -699.7388 1043.6743 -694.0068 c
1042.8843 -688.9355 1038.4277 -685.1108 1033.3081 -685.1108 C
1033.3081 -685.1108 L
f
*U
*u
0 D
1072.6025 -718.8066 m
1058.0781 -718.8066 1045.9121 -708.377 1043.6743 -694.0068 c
1042.4697 -686.2744 1044.3496 -678.5347 1048.9673 -672.2139 c
1053.585 -665.894 1060.3862 -661.751 1068.1187 -660.5483 c
1069.6167 -660.3145 1071.144 -660.1958 1072.6553 -660.1958 c
1087.1797 -660.1958 1099.3457 -670.6226 1101.5825 -684.9883 c
1102.7876 -692.7212 1100.9087 -700.4619 1096.2915 -706.7837 c
1091.6738 -713.106 1084.8706 -717.2505 1077.1348 -718.4546 c
1075.6382 -718.688 1074.1123 -718.8066 1072.6025 -718.8066 C
1072.6025 -718.8066 L
f
1 D
1072.6553 -678.9829 m
1072.1099 -678.9829 1071.5562 -679.0264 1071.0098 -679.1113 c
1068.2334 -679.5435 1065.7935 -681.0298 1064.1367 -683.2974 c
1062.48 -685.5649 1061.8057 -688.3418 1062.2378 -691.1157 c
1063.0283 -696.1919 1067.4839 -700.0195 1072.6025 -700.0195 c
1073.146 -700.0195 1073.6982 -699.9766 1074.2432 -699.8916 c
1077.022 -699.459 1079.4634 -697.9717 1081.1206 -695.7026 c
1082.7773 -693.4336 1083.4521 -690.6558 1083.0195 -687.8804 c
1082.2295 -682.8076 1077.7739 -678.9829 1072.6553 -678.9829 C
1072.6553 -678.9829 L
f
*U
U
u
u
u
0 D
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
1039.4707 -1302.2266 m
1060.0205 -1345.7441 1107.3887 -1372.4531 1157.3433 -1364.6738 c
1207.2983 -1356.8906 1244.2886 -1317.043 1250.6318 -1269.3359 C
1039.4707 -1302.2266 L
f
/BBAccumRotation (0.154520) XT
U
U
0.589013 0.854337 0.314061 0.142855 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0.1 1 Xk
1254.0156 -1081.5127 m
1254.0156 -1081.5127 L
979.7227 -1124.2393 L
954.4731 -1128.1709 937.1958 -1151.8271 941.1289 -1177.0771 c
945.0615 -1202.3257 968.7153 -1219.5996 993.9639 -1215.6719 C
993.9639 -1215.6719 L
1268.2593 -1172.9473 L
1293.5039 -1169.0127 1310.7822 -1145.3584 1306.8496 -1120.1094 c
1302.917 -1094.8613 1279.2627 -1077.583 1254.0156 -1081.5127 C
f
/BBAccumRotation (0.154520) XT
0.401526 0.550683 0.214572 0.006134 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0.39 1 Xk
1268.2593 -1172.9473 m
1268.2593 -1172.9473 L
993.9639 -1215.6719 L
968.7153 -1219.5996 951.4375 -1243.2598 955.3687 -1268.5059 c
959.3027 -1293.752 982.9561 -1311.0293 1008.2041 -1307.0957 C
1008.2041 -1307.0957 L
1282.498 -1264.375 L
1307.7441 -1260.4395 1325.0234 -1236.7852 1321.0918 -1211.5405 c
1317.1582 -1186.2939 1293.5039 -1169.0127 1268.2593 -1172.9473 C
f
/BBAccumRotation (0.154520) XT
1239.7749 -990.0879 m
1239.7749 -990.0879 L
965.481 -1032.8125 L
940.2324 -1036.7441 922.9541 -1060.3984 926.8872 -1085.6455 c
930.8193 -1110.8926 954.4731 -1128.1709 979.7227 -1124.2393 C
979.7227 -1124.2393 L
1254.0156 -1081.5127 L
1279.2627 -1077.583 1296.541 -1053.9248 1292.6084 -1028.6787 c
1288.6763 -1003.4336 1265.0215 -986.1553 1239.7749 -990.0879 C
f
/BBAccumRotation (0.154520) XT
U
U
U
U
U
U
u
835.4536 -1165.5264 m
803.5322 -1146.7432 762.0127 -1204.3452 800.3311 -1221.5488 c
938.9678 -1283.791 1069.0405 -1337.8438 1128.667 -1359.9785 C
1141.5581 -1332.4316 L
1096.1455 -1306.1855 944.4307 -1229.6465 835.4536 -1165.5264 c
Bb
1 (Unnamed gradient 16) 2521.1904 -1752.6133 -125.2724 93.433 0.955986 -0.293413 0.293413 0.955986 -3657.1543 2541.6062 Bg
-29.198 -88.7536 -384.3023 126.4268 1173.502 -1241.7295 Xm
-2874.9998 -8739.1982 -384.3023 126.4268 4048.502 7497.4683 Bc
-29.198 -88.7536 -384.3023 126.4268 1173.502 -1241.7295 Bm
-2874.9998 -8739.1982 -384.3023 126.4268 1144.3042 -1330.4834 Bc
f
0 BB
/BBAccumRotation (0.297795) XT
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1162.0137 -1346.1602 m
1169.9844 -1368.1172 L
1170.5781 -1369.7578 1169.6724 -1371.5898 1168.0327 -1372.1895 c
1166.3955 -1372.7832 1164.5269 -1371.959 1163.9282 -1370.3184 C
1162.7217 -1367 L
1162.644 -1366.7832 1162.376 -1366.6836 1162.1577 -1366.7617 c
1161.9409 -1366.8398 1161.8042 -1367.0898 1161.8813 -1367.3066 C
1163.6797 -1372.2559 L
1164.2759 -1373.8926 1163.458 -1375.6953 1161.8188 -1376.291 c
1160.1807 -1376.8867 1158.3955 -1376.0313 1157.7993 -1374.3906 C
1156.0015 -1369.4434 L
1155.9214 -1369.2305 1155.6543 -1369.127 1155.438 -1369.2051 c
1155.2231 -1369.2813 1155.082 -1369.5332 1155.1606 -1369.75 C
1156.1704 -1372.5254 L
1156.7646 -1374.1641 1155.9473 -1375.9668 1154.3076 -1376.5625 c
1152.6689 -1377.1582 1150.8843 -1376.3008 1150.2866 -1374.6621 C
1149.2773 -1371.8867 L
1149.2012 -1371.6699 1148.936 -1371.5664 1148.7183 -1371.6484 c
1148.5015 -1371.7266 1148.3599 -1371.9766 1148.4409 -1372.1914 C
1149.1406 -1374.1211 L
1149.7354 -1375.7598 1148.9204 -1377.5605 1147.2783 -1378.1582 c
1145.6396 -1378.7539 1143.8555 -1377.8965 1143.2607 -1376.2578 C
1137.0259 -1359.1016 L
1130.5176 -1356.0195 L
1139.9409 -1335.8809 L
1162.0137 -1346.1602 L
f
1176.7104 -1356.5078 m
1177.4492 -1354.9258 1176.7661 -1353.0469 1175.1831 -1352.3105 C
1162.0137 -1346.1602 L
1160.4292 -1345.4219 1158.5513 -1346.1035 1157.8174 -1347.6855 c
1157.0767 -1349.2656 1157.7598 -1351.1445 1159.3398 -1351.8828 C
1172.5137 -1358.0332 L
1174.0933 -1358.7695 1175.9731 -1358.0859 1176.7104 -1356.5078 c
f
U
U
U
U
u
u
u
u
2257.5 -1816.5078 m
1635.7422 -1816.5078 L
1580.6104 -1889.0156 1501.5615 -2099.998 1478.4219 -2163.8125 C
1581.6201 -2163.8125 L
1574.2559 -2218.8301 1572.1387 -2242.041 v
1570.0264 -2265.252 1586.9443 -2274.7148 1611.2676 -2282.6738 C
1592.2314 -2287.4609 1574.2119 -2299.9316 1571.334 -2325.7246 c
1567.7695 -2357.6699 1591.4258 -2374 1590.082 -2387.4043 c
1586.9668 -2418.3809 1571.2061 -2600 Y
2365.9346 -2600 L
2334.6699 -2027.9141 2257.5 -1816.5078 V
Bb
1 (Unnamed gradient 21) 1537.4805 -1681.7412 -54.4053 700.8326 1 0 0 1 0 0 Bg
407.9181 -569.8852 -827.867 -592.5788 1951.4141 -1385.4521 Xm
4699.9517 -6566.1045 -827.867 -592.5788 -2748.5374 5180.6523 Bc
407.9181 -569.8852 -827.867 -592.5788 1951.4141 -1385.4521 Bm
4699.9517 -6566.1045 -827.867 -592.5788 2359.332 -1955.3369 Bc
f
0 BB
U
u
u
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
2257.8184 -1961.5371 m
2257.8184 -2255.4453 L
2338.9756 -2255.4453 2404.7715 -2189.6523 2404.7715 -2108.4902 c
2404.7715 -2027.3301 2338.9756 -1961.5371 2257.8184 -1961.5371 C
f
U
0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 (R=0 G=148 B=179) 0 1 Xk
2257.8184 -2218.6602 m
2257.8184 -2203.7422 L
2310.3398 -2203.7422 2353.0684 -2161.0127 2353.0684 -2108.4902 c
2353.0684 -2055.9688 2310.3398 -2013.2402 2257.8184 -2013.2402 C
2257.8184 -1998.3223 L
2318.5654 -1998.3223 2367.9863 -2047.7432 2367.9863 -2108.4902 c
2367.9863 -2169.2383 2318.5654 -2218.6602 2257.8184 -2218.6602 C
2257.8184 -2218.6602 L
f
2257.8184 -2176.252 m
2257.8184 -2161.334 L
2286.9541 -2161.334 2310.6582 -2137.6279 2310.6582 -2108.4902 c
2310.6582 -2079.3525 2286.9541 -2055.6465 2257.8184 -2055.6465 C
2257.8184 -2040.7285 L
2295.1797 -2040.7285 2325.5762 -2071.126 2325.5762 -2108.4902 c
2325.5762 -2145.8545 2295.1797 -2176.252 2257.8184 -2176.252 C
2257.8184 -2176.252 L
f
U
U
u
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
1766.3457 -1910.041 m
1789.9316 -1910.0879 1809.0078 -1929.2539 1808.96 -1952.8359 c
1808.9111 -1976.4219 1789.7598 -1995.5059 1766.1738 -1995.457 c
1742.5928 -1995.4121 1723.5156 -1976.2461 1723.5645 -1952.6602 c
1723.6113 -1929.0801 1742.7627 -1909.998 1766.3457 -1910.041 c
f
U
u
1926.7949 -1910.041 m
1950.3809 -1910.0879 1969.457 -1929.2539 1969.4092 -1952.8359 c
1969.3594 -1976.4219 1950.208 -1995.5059 1926.6221 -1995.457 c
1903.042 -1995.4121 1883.9629 -1976.2461 1884.0137 -1952.6602 c
1884.0586 -1929.0801 1903.2109 -1909.998 1926.7949 -1910.041 c
f
U
U
u
u
1696.6074 -1303.3008 m
1704.2363 -1267.0586 1774.7734 -1275.1875 1761.668 -1315.0938 c
1714.2539 -1459.4746 1562.2109 -1461.8672 1498.6104 -1462.2773 C
1495.916 -1431.9863 L
1547.5654 -1422.8496 1670.5625 -1427.0313 1696.6074 -1303.3008 c
Bb
1 (Unnamed gradient 16) -64.7881 -1068.1362 -130.5437 126.9429 -0.955986 -0.293413 -0.293413 0.955986 17145.8438 2541.6062 Bg
50.5804 -116.4308 304.3604 132.2217 1446.7173 -1347.8447 Xm
2634.0952 -6063.4072 304.3604 132.2217 -1187.3779 4715.5625 Bc
50.5804 -116.4308 304.3604 132.2217 1446.7173 -1347.8447 Bm
2634.0952 -6063.4072 304.3604 132.2217 1497.2979 -1464.2754 Bc
f
0 BB
/BBAccumRotation (0.780291) XT
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1471.998 -1437.8926 m
1451.9785 -1461.793 L
1450.8604 -1463.1309 1451.084 -1465.1621 1452.4219 -1466.2852 c
1453.7559 -1467.4043 1455.7949 -1467.2695 1456.917 -1465.9316 C
1464.207 -1457.2324 L
1464.3535 -1457.0566 1464.6406 -1457.0527 1464.8193 -1457.2012 c
1464.9941 -1457.3496 1465.0391 -1457.6309 1464.8916 -1457.8086 C
1456.4893 -1467.8359 L
1455.3691 -1469.1719 1455.5195 -1471.1445 1456.8574 -1472.2656 c
1458.1924 -1473.3867 1460.1621 -1473.1914 1461.2842 -1471.8555 C
1469.6865 -1461.8262 L
1469.8359 -1461.6543 1470.1221 -1461.6465 1470.2969 -1461.7949 c
1470.4727 -1461.9414 1470.5195 -1462.2266 1470.3721 -1462.4023 C
1463.4531 -1470.6582 L
1462.334 -1471.9941 1462.4863 -1473.9688 1463.8232 -1475.0879 c
1465.1592 -1476.209 1467.1299 -1476.0137 1468.251 -1474.6777 C
1475.1699 -1466.4238 L
1475.3154 -1466.2461 1475.5996 -1466.2402 1475.7764 -1466.3887 c
1475.9531 -1466.5371 1476.001 -1466.8223 1475.8516 -1466.9961 C
1469.5137 -1474.5605 L
1468.3945 -1475.8984 1468.5439 -1477.8691 1469.8828 -1478.9922 c
1471.2188 -1480.1133 1473.1895 -1479.916 1474.3086 -1478.582 C
1491.0547 -1458.5977 L
1498.2246 -1457.9258 L
1496.2559 -1435.7793 L
1471.998 -1437.8926 L
f
1454.6494 -1442.5898 m
1454.4961 -1440.8496 1455.7803 -1439.3184 1457.5205 -1439.166 C
1471.998 -1437.8926 L
1473.7402 -1437.7383 1475.2715 -1439.0234 1475.4219 -1440.7598 c
1475.5752 -1442.5 1474.291 -1444.0313 1472.5547 -1444.1816 C
1458.0723 -1445.457 L
1456.3359 -1445.6094 1454.8027 -1444.3242 1454.6494 -1442.5898 c
f
U
U
u
u
u
u
1686.2207 -1224.0352 m
1682.0791 -1221.0684 1684.8926 -1215.5293 1688.0879 -1215.1816 C
1685.4316 -1213.6582 1686.7666 -1210.1851 1687.9121 -1207.6167 c
1689.0547 -1205.0483 1691.4385 -1201.0601 Y
1682.3691 -1197.4995 L
1690.418 -1188.3486 1700.6631 -1178.2803 v
1710.9043 -1168.2139 1725.5625 -1164.1152 1742.1816 -1170.6367 c
1761.0332 -1178.0264 1765.7383 -1186.7334 1761.498 -1210.0522 c
1759.1826 -1222.7949 1759 -1250.252 1770.5771 -1272.3301 C
1696.6074 -1303.3008 L
1686.1426 -1276.9219 1682.4424 -1246.8359 1686.2207 -1224.0352 C
Bb
1 (Unnamed gradient 21) -5355.7852 -3655.9365 -129.2894 56.5257 -0.673768 0.738943 0.738943 0.673768 1649.7806 -41.7689 Bg
56.4446 -3.02646 7.73867 144.3289 1681.5791 -1304.498 Xm
1351.3677 -72.458 7.73867 144.3289 330.2114 -1232.04 Bc
56.4446 -3.02646 7.73867 144.3289 1681.5791 -1304.498 Bm
1351.3677 -72.458 7.73867 144.3289 1738.0234 -1307.5244 Bc
f
0 BB
/BBAccumRotation (0.831500) XT
1 Ap
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
1704.1641 -1186.0303 m
1702.7949 -1187.7549 1703.082 -1190.2632 1704.8125 -1191.6323 c
1706.54 -1192.9995 1709.0488 -1192.7065 1710.417 -1190.9761 c
1711.7852 -1189.2515 1711.4922 -1186.7432 1709.7646 -1185.375 c
1708.0371 -1184.0117 1705.5293 -1184.2998 1704.1641 -1186.0303 c
f
1712.7188 -1189.3843 m
1711.3516 -1191.1108 1711.6436 -1193.6206 1713.3711 -1194.9858 c
1715.0957 -1196.3511 1717.6055 -1196.0601 1718.9727 -1194.3335 c
1720.3398 -1192.6108 1720.0508 -1190.0991 1718.3193 -1188.7334 c
1716.5957 -1187.3662 1714.0859 -1187.6592 1712.7188 -1189.3843 c
f
U
0 Ap
1764.7188 -1182.3926 m
1766.9414 -1175.1445 1761.0762 -1167.0381 1753.4189 -1166.375 c
1745.7637 -1165.709 1740.3262 -1161.7646 1742.1465 -1158.4707 C
1734.5146 -1161.2334 1732.9141 -1171.3193 1737.4141 -1177.041 c
1741.9063 -1182.7627 1756.9365 -1188.5439 1759.7598 -1189.3472 C
1757.0898 -1192.5933 1757.46 -1208.7202 1761.498 -1210.0522 C
1770.1318 -1205.7417 1775.1406 -1186.8037 1764.7188 -1182.3926 C
f
U
1696.6074 -1303.3008 m
1708.3477 -1481.6582 1752.748 -1557.7754 Y
1805.5371 -1543.2852 1901.3242 -1513.2598 1933.0508 -1497.7676 C
1882 -1435.7793 1821.4492 -1365.4766 1770.5703 -1272.3398 C
1757.0088 -1278.0645 1719.2246 -1293.8711 1696.6074 -1303.3008 C
Bb
1 (Unnamed gradient 16) 1636.7051 -1346.9004 -28.6105 103.5233 1 0 0 1 0 0 Bg
90.8827 -49.5724 -125.994 -230.9891 1699.7021 -1231.4063 Xm
7294.5645 -3978.853 -125.994 -230.9891 -5594.8623 2747.4468 Bc
90.8827 -49.5724 -125.994 -230.9891 1699.7021 -1231.4063 Bm
7294.5645 -3978.853 -125.994 -230.9891 1790.585 -1280.9785 Bc
f
0 BB
/BBAccumRotation (1.357226) XT
u
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
1714.2432 -1802.6914 m
1712.5801 -1805.793 1704.043 -1807.6934 1697.8184 -1806.7051 c
1692.7129 -1805.8906 1685.8359 -1811.3594 1694.6191 -1814.3984 c
1705.4863 -1818.1582 1716.6953 -1816.9512 1720.1563 -1812.6484 C
1720.1348 -1814.3809 1720.1123 -1816.3672 y
1733.7422 -1816.5078 l
1732.4658 -1802.8789 l
1714.2432 -1802.6914 L
f
u
1786.5 -1495.873 m
1704.9746 -1542.998 1650.208 -1635.291 1714.0098 -1795.8906 C
1718.8125 -1795.9492 1714.0098 -1795.8008 1732.7373 -1796.0273 C
1684.3477 -1637.0781 1737.9395 -1582.957 1852.7266 -1534.0059 c
1907.7451 -1510.541 1838.1025 -1466.0449 1786.5 -1495.873 c
f
U
U
u
2118.1211 -1802.7031 m
2119.6191 -1805.8887 2128.043 -1808.2363 2134.3115 -1807.5742 c
2139.4561 -1807.0293 2146.0361 -1812.8516 2137.1035 -1815.4258 c
2126.0547 -1818.6074 2114.9258 -1816.8164 2111.6953 -1812.3359 C
2111.625 -1814.0664 2111.541 -1816.0527 y
2097.9219 -1815.4766 l
2099.916 -1801.9355 l
2118.1211 -1802.7031 L
f
/BBAccumRotation (0.138848) XT
u
1917.9795 -1503.6973 m
1963.7002 -1575.6367 2043.4648 -1678.5117 2116.6309 -1796.3457 C
2111.832 -1796.1543 2116.6367 -1796.2578 2097.9219 -1795.5 C
2013.9336 -1693.002 1945.2363 -1619.1621 1857.4043 -1530.5195 c
1815.3047 -1488.0313 1886.0078 -1453.3945 1917.9795 -1503.6973 c
f
U
U
U
u
1717.2246 -1294.6445 m
1702.6416 -1300.7695 L
1701.877 -1317.0918 L
1720.042 -1310.4609 L
1717.2246 -1294.6445 L
Bb
1 (Unnamed gradient 21) 1704.0186 -1303.4971 -23.1986 24.5228 1 0 0 1 0 0 Bg
22.54 -9.66 -12.0847 -28.1976 1710.0605 -1289.3984 Xm
7730.48 -3313.0627 -12.0847 -28.1976 -6020.4194 2023.6641 Bc
22.54 -9.66 -12.0847 -28.1976 1710.0605 -1289.3984 Bm
7730.48 -3313.0627 -12.0847 -28.1976 1732.6006 -1299.0586 Bc
f
0 BB
1716.3027 -1311.9121 m
1715.4258 -1301.0469 1705.6992 -1306.7832 1705.1318 -1315.9316 c
1703.2988 -1345.4609 1696.3906 -1403.9355 1688.0938 -1489.3281 C
1696.2119 -1498.9844 1708.6514 -1513.7871 Y
1726.6211 -1498.5313 1732.5225 -1492.5508 V
1728.7178 -1432.7324 1719.835 -1355.6563 1716.3027 -1311.9121 c
Bb
1 (Unnamed gradient 21) 1665.6455 -1390.5293 -23.1986 29.2285 1 0 0 1 0 0 Bg
26.8652 -11.5137 -79.6535 -185.8582 1706.5566 -1295.0703 Xm
7689.543 -3295.5183 -79.6535 -185.8582 -5982.9863 2000.4482 Bc
26.8652 -11.5137 -79.6535 -185.8582 1706.5566 -1295.0703 Bm
7689.543 -3295.5183 -79.6535 -185.8582 1733.4219 -1306.584 Bc
f
0 BB
/BBAccumRotation (0.066457) XT
U
U
u
1729.9473 -1317.791 m
1737.5762 -1281.5469 1798.1387 -1300.0645 1785.0332 -1339.9707 c
1737.6182 -1484.3516 1561.5293 -1507.834 1497.9277 -1508.2441 C
1495.2344 -1477.9512 L
1546.8848 -1468.8164 1703.9023 -1441.5215 1729.9473 -1317.791 c
Bb
1 (Unnamed gradient 16) -86.9233 -1119.4697 -139.8254 103.1387 -0.955986 -0.293413 -0.293413 0.955986 17145.8438 2541.6062 Bg
55.8152 -86.731 310.392 199.7509 1448.9048 -1435.7627 Xm
3566.6602 -5542.2168 310.392 199.7509 -2117.7554 4106.4541 Bc
55.8152 -86.731 310.392 199.7509 1448.9048 -1435.7627 Bm
3566.6602 -5542.2168 310.392 199.7509 1504.7197 -1522.4941 Bc
f
0 BB
/BBAccumRotation (0.780291) XT
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1471.3164 -1483.8574 m
1451.2969 -1507.7578 L
1450.1787 -1509.0957 1450.4023 -1511.127 1451.7402 -1512.25 c
1453.0742 -1513.3691 1455.1133 -1513.2344 1456.2354 -1511.8965 C
1463.5254 -1503.1973 L
1463.6719 -1503.0215 1463.959 -1503.0176 1464.1377 -1503.166 c
1464.3125 -1503.3145 1464.3574 -1503.5957 1464.21 -1503.7734 C
1455.8076 -1513.8008 L
1454.6875 -1515.1367 1454.8379 -1517.1094 1456.1758 -1518.2305 c
1457.5107 -1519.3516 1459.4805 -1519.1563 1460.6025 -1517.8203 C
1469.0049 -1507.791 L
1469.1543 -1507.6191 1469.4404 -1507.6113 1469.6152 -1507.7598 c
1469.791 -1507.9063 1469.8379 -1508.1914 1469.6904 -1508.3672 C
1462.7715 -1516.623 L
1461.6523 -1517.959 1461.8047 -1519.9336 1463.1416 -1521.0527 c
1464.4775 -1522.1738 1466.4482 -1521.9785 1467.5693 -1520.6426 C
1474.4883 -1512.3887 L
1474.6338 -1512.2109 1474.918 -1512.2051 1475.0947 -1512.3535 c
1475.2715 -1512.502 1475.3193 -1512.7871 1475.1699 -1512.9609 C
1468.832 -1520.5254 L
1467.7129 -1521.8633 1467.8623 -1523.834 1469.2012 -1524.957 c
1470.5371 -1526.0781 1472.5078 -1525.8809 1473.627 -1524.5469 C
1490.373 -1504.5625 L
1497.543 -1503.8906 L
1495.5742 -1481.7441 L
1471.3164 -1483.8574 L
f
1453.9678 -1488.5547 m
1453.8145 -1486.8145 1455.0986 -1485.2832 1456.8389 -1485.1309 C
1471.3164 -1483.8574 L
1473.0586 -1483.7031 1474.5898 -1484.9883 1474.7402 -1486.7246 c
1474.8936 -1488.4648 1473.6094 -1489.9961 1471.873 -1490.1465 C
1457.3906 -1491.4219 L
1455.6543 -1491.5742 1454.1211 -1490.2891 1453.9678 -1488.5547 c
f
U
U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
