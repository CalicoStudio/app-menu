%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (min) ()
%%Title: (network_simple_cloudcomputing10.eps)
%%CreationDate: 9/19/2012 6:04 AM
%%Canvassize: 16383
%%BoundingBox: 0 -2601 2800 0
%%HiResBoundingBox: 0 -2600.0005 2800 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 0.810574 0.259586 0.221195 0.00235 (R=0 G=148 B=179)
%%+ 0.47245 0.030304 0.131777 0.000031 (R=128 G=202 B=217)
%%+ 0.681208 0.121279 0.183505 0.000031 (R=66 G=174 B=198)
%%+ 0.637751 0.946044 0.345495 0.235782 (R=99 G=41 B=92)
%%+ 0.000031 0.000031 0.000031 0.000031 (White)
%%+ 0.75021 0.679683 0.670222 0.90164 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 1400.5 -1300.5 1400.5 -1300.5
%AI3_TileBox: 1102.3999 -1720.9907 1697.4199 -879.1304
%AI3_DocumentPreview: Header
%AI5_ArtSize: 2800 2600.0005
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -1640.4336 1130.6831 0.25 1842 1077 18 1 0 1435 114 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:942.5664 -1604.3169
%AI7_GridSettings: 72 1 72 1 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
2 Bn
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 0 2 Bd
[
<
000000010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E2020212223
2425272829292A2B2C2D2E2F303132333435363738393A3B3C3C3D3E3F404142434445464748494A
4B4C4D4E4F505152535454555658595A5B5C5D5E5F606162636465666768696A6A6B6C6D6E6F7071
7273747576777878797A7B7C7D7E7F80818283838585868788898A8B8B8C8D8E8F90909192939495
9596979899999A9B9C9D9E9F9FA1A1A2A3A4A5A6A7A7A8A9AAABABACACADAEAEAFB0B0B1B2B3B3B4
B5B5B6B6B7B8B8B9B9BABBBBBCBCBDBDBEBFBFC0C0C1C1C2C2C2C3C3C4C4C5C5C5C6C6C7C7C7C8C8
C9C9CACACACBCBCCCCCCCDCDCECECFCF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000010001000001000101000101010102010101010201020101020102020102010201
02020102020202030302030304030304030404050404050405050405050605060605060607060707
0608070808070808090809090809090A09090A0A0B0A0C0B0B0C0C0D0D0E0D0D0E0E0F0F0E0F0F11
10111110121113121213131414151514161618171919181A191B1B1A1C1B1D1D1E1E1D1F1F202022
212123222424242525272628282829292B2A2A2C2B2D2D2F2E2E3030313133333335343636363737
39393B3B3A3C3C3D3D3D3F3F41414242
>
<
00000000000000010101020102030202030303040404050404040505050605060707070608070809
0809090A0A090B0A0A0B0B0B0B0C0C0C0E0D0D0E0E0E0E100F0F10100F1111111112121213131214
131414151514161515171717161818181919191A1A1A1A1B1B1B1D1C1C1C1D1D1D1F1E1E1F1F1E1E
201F2020212121222121222222232322242423242424242526252726262527272628272727282827
2928282A292A292A2B2A2C2B2B2C2C2C2C2E2D2D2E2E2E2F2F2E2E302F2F30302F31313030313130
32323133323232333332343333333434333535343635353436363537363636363635373636383737
38383737383737383838393938383838
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000010101010101
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFFFEFEFDFDFCFCFCFBFBFAFAFAF9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F2F2F2F1F1F0F0EFEFEF
EEEEEDEDEDECECEBEBEAEAEAE9E9E8E8E8E7E7E6E6E5E5E5E4E4E3E3E2E2E2E1E1E0E0E0DFDFDEDE
DDDDDDDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D0D0D0CFCFCECECDCD
CDCCCCCBCBCBCACAC9C9C8C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0C0BFBFBEBEBEBDBDBC
BCBBBBBBBABAB9B9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAEAEAEADADACACAB
ABABAAAAA9A9A9A8A8A7A7A6A6A6A5A5A4A4A4A3A3A2A2A1A1A1A0A09F9F9E9E9E9D9D9C9C9C9B9B
9A9A9999999898979797969695959494
>
<
FFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFBFAFAFAF9F9F9F8F8F8F8F7F7F7F6F6F6F5F5F5F5F4F4F4F3
F3F3F2F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDEDECECECEBEBEBEAEAEAEAE9E9E9E8E8E8E7
E7E7E7E6E6E6E5E5E5E4E4E4E4E3E3E3E2E2E2E1E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDC
DBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D6D6D6D6D5D5D5D4D4D4D3D3D3D3D2D2D2D1D1D1D1D0D0D0
CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C8C8C8C8C7C7C7C6C6C6C5C5C5C5C4C4C4
C3C3C3C2C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBABABABAB9B9B9B8B8B8
B7B7B7B7B6B6B6B5B5B5B4B4B4B4B3B3
>
4 %_Br
[
0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 2 50 100 %_BS
%_0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 35)
(Unnamed gradient 35) 0 2 Bd
[
<
78797A7B7C7D7E7F80818283848485868788898A8A8B8C8D8E8F909091929394949596979899999A
9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAAAABACACADAEAEAFB0B0B1B2B3B3B4B5B5B6B6B7B8B8
B9B9BABBBBBCBCBDBDBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9C9CACACACBCB
CCCCCCCDCDCECECFCF
>
<
08070808090809090809090A0A090A0A0B0B0C0C0B0D0C0D0D0E0E0D0F0E0F0F0F10101110121111
121213131414131514161618171719181A19191A1A1C1B1D1D1C1E1D1F1F20202021212322222424
2525272626282729292B2A2A2C2B2D2D2D2E2E303031313133333534363636373739393B3B3A3C3C
3D3D3D3F3F41414242
>
<
2222232322222323232424232525242525262527272628272726282827292828282929282A292A2B
2A2B2A2C2B2B2D2C2C2D2E2D2D2F2E2E2F2F2F30302F2F3030303131303031313132323133333232
33333234343335343433353534363535353636353736363736363537363638373738383737383737
383838393938383838
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000010101010101
>
<
807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59
5857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231
302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
080706050403020100
>
<
CACAC9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C2C2C2C1C1C0C0BFBFBFBEBEBDBDBDBCBCBBBBBABABA
B9B9B8B8B7B7B7B6B6B5B5B4B4B4B3B3B2B2B2B1B1B0B0AFAFAFAEAEADADACACACABABAAAAAAA9A9
A8A8A7A7A7A6A6A5A5A4A4A4A3A3A2A2A2A1A1A0A09F9F9F9E9E9D9D9C9C9C9B9B9A9A9999999898
979797969695959494
>
<
D9D9D8D8D8D8D7D7D7D6D6D6D5D5D5D5D4D4D4D3D3D3D2D2D2D2D1D1D1D0D0D0D0CFCFCFCECECECD
CDCDCDCCCCCCCBCBCBCACACACAC9C9C9C8C8C8C7C7C7C7C6C6C6C5C5C5C5C4C4C4C3C3C3C2C2C2C2
C1C1C1C0C0C0BFBFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBABABABAB9B9B9B8B8B8B7B7B7B7B6B6B6
B5B5B5B4B4B4B4B3B3
>
4 %_Br
[
0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 2 50 100 %_BS
%_0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 2 50 100 Bs
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 2 50 0 %_BS
%_0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6848.4336 6886.6831 m
-6669.0894 6886.6831 L
-6669.0894 6851.5107 L
-6848.4336 6851.5107 L
-6848.4336 6886.6831 L
n
u
u
0 O
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
0 R
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
0.5 w-6687.2622 6851.7612 m
-6830.2612 6851.7612 L
-6830.2612 6854.3306 L
-6687.2622 6854.3306 L
-6687.2622 6851.7612 L
b
-6830.2612 6877.166 m
-6687.2622 6877.166 L
-6687.2622 6874.394 L
-6830.2612 6874.394 L
-6830.2612 6877.166 L
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
-6830.2612 6854.3306 m
-6830.2612 6874.394 L
-6687.2622 6874.394 L
-6687.2622 6854.3306 L
-6830.2612 6854.3306 L
b
U
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-6708.6313 6886.3027 m
-6669.688 6886.3027 L
-6671.8628 6884.0815 L
-6703.4312 6884.0815 L
-6708.6313 6886.3027 L
b
-6669.688 6862.2681 m
-6687.2622 6862.2681 L
-6687.2622 6864.3628 L
-6671.7573 6864.3628 L
-6669.688 6862.2681 L
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
-6671.7573 6864.3628 m
-6687.2622 6864.3628 L
-6687.2622 6877.166 L
-6703.4312 6884.0815 L
-6671.8628 6884.0815 L
-6682.0801 6874.8115 L
-6671.7573 6864.3628 L
b
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-6847.8354 6886.3027 m
-6808.8931 6886.3027 L
-6814.0923 6884.0815 L
-6845.6621 6884.0815 L
-6847.8354 6886.3027 L
b
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
-6830.2622 6864.3628 m
-6845.7681 6864.3628 L
-6835.4448 6874.8115 L
-6845.6621 6884.0815 L
-6814.0923 6884.0815 L
-6830.2622 6877.166 L
-6830.2622 6864.3628 L
b
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-6830.2622 6862.2681 m
-6847.8354 6862.2681 L
-6845.7681 6864.3628 L
-6830.2622 6864.3628 L
-6830.2622 6862.2681 L
b
-6808.8931 6886.3027 m
-6830.2622 6877.166 L
S
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-6708.6313 6877.166 m
-6708.6313 6883.8667 L
-6692.9604 6877.166 L
-6708.6313 6877.166 L
b
0.000397 0.462379 0.988952 0.000031 0.972549 0.603922 0.109804 Xa
-6708.6313 6883.8667 m
-6708.6313 6886.3027 L
-6687.2622 6877.166 L
-6692.9604 6877.166 L
-6708.6313 6883.8667 L
b
-6830.2622 6877.166 m
-6808.8931 6886.3027 L
-6808.8931 6883.8667 L
-6824.563 6877.166 L
-6830.2622 6877.166 L
b
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-6824.563 6877.166 m
-6808.8931 6883.8667 L
-6808.8931 6877.166 L
-6824.563 6877.166 L
b
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 1)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6848.4336 6886.6831 m
-6788.4336 6886.6831 L
-6788.4336 6773.5249 L
-6848.4336 6773.5249 L
-6848.4336 6886.6831 L
n
0 R
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 XK
1 J 1 j 60 w-6818.4336 6803.5249 m
-6818.4336 6856.6831 L
S
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 3)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-6848.4336 6886.6831 m
-6818.5859 6886.6831 L
-6818.5859 6835.6851 L
-6848.4336 6835.6851 L
-6848.4336 6886.6831 L
n
1 Ap
0 O
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
-6818.5859 6886.6831 m
-6848.4336 6886.6831 L
-6848.4336 6835.6851 L
-6818.5859 6835.6851 L
-6818.5859 6886.6831 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 44)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d1 XR
-6844.1001 6886.6831 m
-6848.4336 6886.6831 L
-6848.4336 6883.082 L
-6844.1001 6883.082 L
-6844.1001 6886.6831 L
n
u
0 XR
-6847.4038 6886.0195 m
-6845.1299 6886.0195 L
-6845.1299 6883.7456 L
-6847.4038 6883.7456 L
-6847.4038 6886.0195 L
n
1 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
-6845.1299 6884.8823 m
-6845.1299 6885.5098 -6845.6392 6886.0195 -6846.2671 6886.0195 c
-6846.895 6886.0195 -6847.4038 6885.5098 -6847.4038 6884.8823 c
-6847.4038 6884.2549 -6846.895 6883.7456 -6846.2671 6883.7456 c
-6845.6392 6883.7456 -6845.1299 6884.2549 -6845.1299 6884.8823 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 47)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d1 XR
-6842.04 6886.6831 m
-6848.4336 6886.6831 L
-6848.4336 6883.082 L
-6842.04 6883.082 L
-6842.04 6886.6831 L
n
u
0 XR
-6846.374 6886.0195 m
-6844.1001 6886.0195 L
-6844.1001 6883.7456 L
-6846.374 6883.7456 L
-6846.374 6886.0195 L
n
1 Ap
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
-6844.1001 6884.8823 m
-6844.1001 6885.5098 -6844.6089 6886.0195 -6845.2368 6886.0195 c
-6845.8647 6886.0195 -6846.374 6885.5098 -6846.374 6884.8823 c
-6846.374 6884.2549 -6845.8647 6883.7456 -6845.2368 6883.7456 c
-6844.6089 6883.7456 -6844.1001 6884.2549 -6844.1001 6884.8823 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 48)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-6848.4336 6886.6831 m
-6840.5801 6886.6831 L
-6840.5801 6878.2788 L
-6848.4336 6878.2788 L
-6848.4336 6886.6831 L
n
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
3.86371 M-6847.5918 6878.2788 m
-6847.1147 6878.2676 -6846.7178 6878.6426 -6846.7061 6879.1206 c
-6846.6929 6879.5972 -6847.0693 6879.9932 -6847.5474 6880.0068 c
-6848.0239 6880.019 -6848.4214 6879.6431 -6848.4331 6879.1655 c
-6848.4458 6878.6885 -6848.0693 6878.29 -6847.5918 6878.2788 c
f
-6847.5693 6879.1431 m
F
U
u
-6847.5894 6880.5015 m
-6847.1118 6880.4917 -6846.7148 6880.8677 -6846.7021 6881.3452 c
-6846.6899 6881.8213 -6847.0669 6882.2188 -6847.5439 6882.2319 c
-6848.021 6882.2446 -6848.4185 6881.8677 -6848.4307 6881.3906 c
-6848.4429 6880.9131 -6848.0664 6880.5176 -6847.5894 6880.5015 c
f
-6847.5669 6881.3677 m
F
U
u
-6847.5859 6882.73 m
-6847.1089 6882.7173 -6846.7119 6883.0933 -6846.6997 6883.5708 c
-6846.6875 6884.0469 -6847.064 6884.4443 -6847.541 6884.4575 c
-6848.0181 6884.4702 -6848.415 6884.0933 -6848.4272 6883.6157 c
-6848.4404 6883.1387 -6848.0635 6882.7412 -6847.5859 6882.73 c
f
-6847.5635 6883.5933 m
F
U
u
-6847.5835 6884.9556 m
-6847.106 6884.9419 -6846.709 6885.3188 -6846.6963 6885.7964 c
-6846.6836 6886.2725 -6847.061 6886.6694 -6847.5381 6886.6831 c
-6848.0151 6886.6958 -6848.4121 6886.3188 -6848.4248 6885.8413 c
-6848.4365 6885.3647 -6848.061 6884.9663 -6847.5835 6884.9556 c
f
-6847.561 6885.8188 m
F
U
u
-6845.5874 6879.3496 m
-6845.1099 6879.3364 -6844.7129 6879.7124 -6844.7002 6880.1899 c
-6844.6875 6880.666 -6845.0645 6881.0635 -6845.542 6881.0776 c
-6846.019 6881.0894 -6846.416 6880.7124 -6846.4282 6880.2358 c
-6846.4404 6879.7583 -6846.064 6879.3599 -6845.5874 6879.3496 c
f
-6845.564 6880.2124 m
F
U
u
-6845.5835 6881.5732 m
-6845.1064 6881.562 -6844.71 6881.938 -6844.6968 6882.4155 c
-6844.6851 6882.8931 -6845.061 6883.29 -6845.5391 6883.3022 c
-6846.0161 6883.3149 -6846.4131 6882.938 -6846.4253 6882.4604 c
-6846.4375 6881.9839 -6846.061 6881.5859 -6845.5835 6881.5732 c
f
-6845.561 6882.438 m
F
U
u
-6845.5811 6883.7988 m
-6845.1035 6883.7876 -6844.7065 6884.1636 -6844.6943 6884.6426 c
-6844.6821 6885.1172 -6845.0591 6885.5156 -6845.5361 6885.5278 c
-6846.0127 6885.5405 -6846.4102 6885.1641 -6846.4224 6884.686 c
-6846.4351 6884.2095 -6846.0581 6883.811 -6845.5811 6883.7988 c
f
-6845.5581 6884.6636 m
F
U
u
-6843.5059 6880.3955 m
-6843.0288 6880.3828 -6842.6323 6880.7612 -6842.6201 6881.2363 c
-6842.6074 6881.7139 -6842.9844 6882.1118 -6843.4609 6882.1245 c
-6843.939 6882.1372 -6844.3354 6881.7588 -6844.3477 6881.2827 c
-6844.3608 6880.8066 -6843.9834 6880.4092 -6843.5059 6880.3955 c
f
-6843.4839 6881.2612 m
F
U
u
-6843.5034 6882.6226 m
-6843.0264 6882.6084 -6842.6289 6882.9844 -6842.6167 6883.4619 c
-6842.604 6883.9404 -6842.981 6884.3374 -6843.4585 6884.3516 c
-6843.936 6884.3628 -6844.333 6883.9844 -6844.3452 6883.5083 c
-6844.3569 6883.0317 -6843.9805 6882.6343 -6843.5034 6882.6226 c
f
-6843.481 6883.4844 m
F
U
u
-6841.4668 6881.4653 m
-6840.9893 6881.4526 -6840.5928 6881.8306 -6840.5801 6882.3086 c
-6840.5669 6882.7847 -6840.9438 6883.1816 -6841.4219 6883.1948 c
-6841.8989 6883.2056 -6842.2954 6882.8306 -6842.3081 6882.3516 c
-6842.3198 6881.874 -6841.9434 6881.478 -6841.4668 6881.4653 c
f
-6841.4438 6882.3306 m
F
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -
(rnOnPath Brush Tool/ Arrow Brush Circles/ Adobe PatternOnPath ) -
(Brush Tool/ Pattern Brush 1/ Adobe PatternOnPath Brush Tool/ P) -
(attern Brush 2/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Banner)
(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Arrow Brush Circles)
(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -
(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -
( 1 0 4 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Pattern Brush 1)
(1 / Unnamed Brush Pat 1/ / / / / 5 0.388235 0.160784 0.360784 ) -
(/  1 0 1 0.5 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Pattern Brush 2)
(1 / Unnamed Brush Pat 3/ / / / / 5 0.388235 0.160784 0.360784 ) -
(/  1 0 1 1 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
(Black)
Pc
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
(R=99 G=41 B=92)
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 (White) 0 1 Xk
(White)
Pc
0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 (R=0 G=148 B=179) 0 1 Xk
(R=0 G=148 B=179)
Pc
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
(R=128 G=202 B=217)
Pc
0.681208 0.121279 0.183505 0.000031 0.258824 0.682353 0.776471 (R=66 G=174 B=198) 0 1 Xk
(R=66 G=174 B=198)
Pc
Bb
2 (Unnamed gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Unnamed gradient 2)
Pc
Bb
2 (Unnamed gradient 35) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Unnamed gradient 35)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(bg) Ln
0 A
1 Ap
0 O
0.810574 0.259586 0.221195 0.00235 0 0.580392 0.701961 (R=0 G=148 B=179) 0 1 Xk
0 J 0 j 1 w 4 M []0 d0 XR
2800 -2599.9985 m
0 -2599.9985 L
0 0 L
2800 0 L
2800 -2599.9985 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(image) Ln
0 A
q
0 J 0 j 1 w 4 M []0 d0 XR
2800 -2599.9985 m
0 -2599.9985 L
0 0 L
2800 0 L
2800 -2599.9985 L
h
W
n
u
u
u
0 O
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
1826.8066 -1098.9287 m
1816.0488 -1109.6797 1798.5693 -1109.7275 1787.7676 -1098.9287 c
1724.4395 -1035.6006 l
1713.6602 -1024.8213 1713.6602 -1007.3447 1724.4395 -996.5645 c
1724.4424 -996.5615 l
1735.2168 -985.7881 1752.7002 -985.7852 1763.4775 -996.5615 c
1826.8066 -1059.8896 l
1837.5859 -1070.6689 1837.5859 -1088.1475 1826.8066 -1098.9287 c
f
u
1806.6006 -1272.6284 m
1822.2246 -1272.6284 1834.8916 -1259.9604 1834.8916 -1244.3369 C
1834.8916 -1080.0947 L
1834.8906 -1064.4707 1822.2246 -1051.8047 1806.6006 -1051.8047 C
1721.5205 -1051.8047 L
1705.8975 -1051.8047 1693.2324 -1064.4707 1693.2305 -1080.0967 C
1693.2305 -1244.3379 L
1693.2314 -1259.9663 1705.8975 -1272.6284 1721.5205 -1272.6284 C
1806.6006 -1272.6284 L
f
/BBAccumRotation (1.570797) XT
u
1749.125 -1079.4072 m
1749.124 -1094.6553 1736.7656 -1107.0107 1721.5205 -1107.0107 c
1614.4033 -1107.0127 l
1599.166 -1107.0127 1586.7988 -1094.6514 1586.7988 -1079.4082 c
1586.7988 -1064.1631 1599.1572 -1051.8057 1614.4014 -1051.8057 c
1721.5205 -1051.8037 l
1736.7588 -1051.8037 1749.125 -1064.167 1749.125 -1079.4072 c
f
/BBAccumRotation (0.000001) XT
1749.6367 -1107.0068 m
1764.8721 -1107.0068 1777.2422 -1119.3682 1777.2402 -1134.6123 c
1777.2402 -1149.8564 1764.8828 -1162.2139 1749.6387 -1162.2139 c
1693.4023 -1162.2158 l
1678.1572 -1162.2158 1665.7988 -1149.8574 1665.7979 -1134.6123 c
1665.7979 -1134.6064 l
1665.7979 -1119.3701 1678.1602 -1107.0088 1693.3984 -1107.0088 c
1749.6367 -1107.0068 l
f
/BBAccumRotation (0.000001) XT
1777.2432 -1189.8174 m
1777.2422 -1205.0596 1764.8838 -1217.4189 1749.6387 -1217.4189 c
1693.4004 -1217.4189 l
1678.1563 -1217.4189 1665.7969 -1205.0596 1665.7969 -1189.8154 c
1665.7969 -1189.8115 l
1665.7969 -1174.5693 1678.1543 -1162.2119 1693.3965 -1162.2119 c
1749.6387 -1162.2119 l
1764.875 -1162.2119 1777.2432 -1174.5713 1777.2432 -1189.8174 c
f
/BBAccumRotation (0.000001) XT
1749.6396 -1217.4209 m
1764.875 -1217.4209 1777.2441 -1229.7822 1777.2441 -1245.0254 c
1777.2441 -1260.271 1764.8867 -1272.6284 1749.6426 -1272.6284 c
1693.4014 -1272.6304 l
1678.165 -1272.6304 1665.7969 -1260.2671 1665.7979 -1245.0264 c
1665.7979 -1229.7793 1678.1572 -1217.4229 1693.4014 -1217.4229 c
1749.6396 -1217.4209 l
f
/BBAccumRotation (0.000001) XT
U
U
U
2129.7617 -1079.4082 m
2129.7617 -1244.3369 L
1834.8926 -1244.3369 L
1834.8926 -1079.4082 L
2129.7617 -1079.4082 L
Bb
1 (Unnamed gradient 2) 11167.6211 262.644 90 276.4631 0 1 -1 0 15270.3223 -9905.748 Bg
276.4631 0 0 -168.9287 1850.9658 -1077.4082 Xm
18035.1289 0 0 -168.9287 -16184.1641 -1077.4082 Bc
276.4631 0 0 -168.9287 1850.9658 -1077.4082 Bm
18035.1289 0 0 -168.9287 2127.4287 -1077.4082 Bc
f
0 BB
/BBAccumRotation (1.570797) XT
U
u
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
939.5234 -1162.1812 m
950.2813 -1151.4292 967.7607 -1151.3813 978.5625 -1162.1812 c
1041.8896 -1225.5083 l
1047.0664 -1230.6851 1049.9746 -1237.7056 1049.9746 -1245.0269 c
1049.9746 -1252.3472 1047.0664 -1259.3687 1041.8896 -1264.5454 c
1041.8877 -1264.5474 l
1031.1084 -1275.3257 1013.6318 -1275.3257 1002.8525 -1264.5474 c
939.5234 -1201.2183 l
928.7441 -1190.4409 928.7441 -1172.9614 939.5234 -1162.1812 c
f
u
959.7295 -988.4795 m
944.1055 -988.4795 931.4385 -1001.1475 931.4385 -1016.7725 C
931.4385 -1181.0132 L
931.4395 -1196.6382 944.1055 -1209.3042 959.7305 -1209.3042 C
1044.8096 -1209.3042 L
1060.4336 -1209.3042 1073.0977 -1196.6382 1073.0996 -1181.0112 C
1073.0996 -1016.7705 L
1073.0986 -1001.1416 1060.4336 -988.4795 1044.8096 -988.4795 C
959.7295 -988.4795 L
f
u
1017.2051 -1181.7007 m
1017.2051 -1166.4536 1029.5645 -1154.0972 1044.8086 -1154.0972 c
1151.9277 -1154.0972 l
1167.1729 -1154.0972 1179.5313 -1166.4556 1179.5313 -1181.7007 c
1179.5313 -1196.9458 1167.1729 -1209.3042 1151.9277 -1209.3042 c
1044.8086 -1209.3042 l
1029.5703 -1209.3042 1017.2051 -1196.9419 1017.2051 -1181.7007 c
f
1016.6914 -1154.1011 m
1009.3711 -1154.1011 1002.3496 -1151.1929 997.1738 -1146.0161 c
991.9961 -1140.8394 989.0879 -1133.8179 989.0889 -1126.4956 c
989.0898 -1111.2515 1001.4473 -1098.894 1016.6914 -1098.894 c
1072.9277 -1098.894 l
1088.1719 -1098.894 1100.5313 -1111.2515 1100.5313 -1126.4956 c
1100.5313 -1126.5015 l
1100.5313 -1141.7397 1088.1699 -1154.1011 1072.9316 -1154.1011 c
1016.6914 -1154.1011 l
f
989.0869 -1071.29 m
989.0879 -1056.0479 1001.4463 -1043.6885 1016.6914 -1043.6885 c
1072.9297 -1043.6885 l
1088.1758 -1043.6885 1100.5342 -1056.0479 1100.5342 -1071.292 c
1100.5342 -1071.2959 l
1100.5342 -1086.54 1088.1777 -1098.897 1072.9336 -1098.897 c
1016.6914 -1098.897 l
1001.4551 -1098.897 989.0869 -1086.5371 989.0869 -1071.29 c
f
1016.6895 -1043.6865 m
1001.4443 -1043.6865 989.0859 -1031.3281 989.0859 -1016.082 c
989.0859 -1000.8369 1001.4434 -988.4795 1016.6885 -988.4795 c
1072.9287 -988.4795 l
1088.166 -988.4795 1100.5332 -1000.8398 1100.5322 -1016.083 c
1100.5322 -1031.3291 1088.1738 -1043.6865 1072.9287 -1043.6865 c
1016.6895 -1043.6865 l
f
U
U
U
636.5684 -1181.7007 m
636.5684 -1016.7725 L
931.4375 -1016.7725 L
931.4375 -1181.7007 L
636.5684 -1181.7007 L
Bb
1 (Unnamed gradient 35) 946.8604 -1099.2363 180 317.9931 1 0 0 1 0 0 Bg
-317.9931 -0.000028 -0.000015 168.9283 946.8604 -1183.7007 Xm
-7782.8711 -0.00068 -0.000015 168.9283 8729.7314 -1183.7002 Bc
-317.9931 -0.000028 -0.000015 168.9283 946.8604 -1183.7007 Bm
-7782.8711 -0.00068 -0.000015 168.9283 628.8672 -1183.7007 Bc
f
0 BB
U
u
u
u
u
0 Ap
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
851.2568 -1743.7778 m
742.3584 -1696.8228 622.1543 -1704.8804 739.7441 -1825.0024 C
741.3584 -1822.3989 746.0107 -1814.8872 747.959 -1811.7466 C
694.2441 -1734.854 720.9434 -1738.4497 828.25 -1781.5532 c
860.1396 -1794.3638 882.791 -1757.3774 851.2568 -1743.7778 c
f
/BBAccumRotation (3.704371) XT
U
U
743.9688 -1827.9985 m
745.4688 -1830.5142 743.5137 -1839.3091 739.7773 -1841.4438 c
736.0371 -1843.5747 737.0059 -1850.561 743.8965 -1847.0337 c
750.7891 -1843.5063 755.2031 -1832.3735 753.6182 -1828.0552 C
754.8447 -1828.8169 756.2529 -1829.6821 y
762.208 -1820.0142 l
751.9355 -1815.0728 l
743.9688 -1827.9985 L
f
/BBAccumRotation (5.007588) XT
U
u
u
u
832.377 -1771.9243 m
729.8496 -1730.1274 603.1494 -1734.854 709.1875 -1876.5806 C
710.5195 -1873.8228 714.373 -1865.8696 715.9902 -1862.5435 C
666.499 -1755.4673 737.6191 -1787.7173 815.2285 -1814.0649 c
861.0527 -1829.6235 878.3545 -1790.6685 832.377 -1771.9243 c
f
/BBAccumRotation (3.503424) XT
U
U
715.5234 -1879.6978 m
717.167 -1882.1235 715.7344 -1891.022 712.1309 -1893.3696 c
708.5186 -1895.7173 709.9014 -1902.6333 716.5693 -1898.7075 c
723.2383 -1894.7778 726.9922 -1883.4067 725.1572 -1879.1899 C
726.4258 -1879.8735 727.8838 -1880.6567 y
733.2607 -1870.6567 l
722.71 -1866.3247 l
715.5234 -1879.6978 L
f
/BBAccumRotation (3.608999) XT
U
U
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
679.853 -1859.9409 m
678.7813 -1859.5464 L
543.3628 -1809.7632 429.7222 -1725.2661 350.1445 -1615.188 c
312.9126 -1563.686 284.1152 -1507.9272 264.5513 -1449.4585 c
245.1836 -1391.5776 235.3638 -1332.564 235.3638 -1274.0581 C
238.1753 -1274.0581 L
238.1753 -1525.2437 415.1455 -1759.1782 678.6787 -1856.5122 C
703.0215 -1817.311 754.4771 -1718.5825 761.2085 -1705.6323 C
651.4248 -1663.7085 567.2788 -1603.6577 511.0903 -1527.1323 c
457.9531 -1454.7622 431.0103 -1369.6157 431.0103 -1274.0581 C
433.8218 -1274.0581 L
433.8218 -1470.2817 550.9688 -1622.8169 763.6826 -1703.5659 C
765.1582 -1704.1265 L
764.4316 -1705.5269 L
763.8521 -1706.646 706.1738 -1817.8472 680.4585 -1858.9722 C
679.853 -1859.9409 L
679.853 -1859.9409 L
f
2441.0283 -772.6909 m
2437.3643 -739.8462 2409.5098 -714.3057 2375.6855 -714.3057 c
2367.4502 -714.3057 2359.5713 -715.8242 2352.3057 -718.5889 C
2337.7852 -691.5869 2309.2705 -673.229 2276.4639 -673.229 c
2232.2354 -673.229 2195.8066 -706.5933 2190.958 -749.5269 C
2151.3799 -752.9341 2120.3193 -786.1333 2120.3193 -826.5908 c
2120.3193 -869.3149 2154.9541 -903.9512 2197.6787 -903.9512 C
2428.2061 -903.9512 L
2464.7959 -903.9512 2494.458 -874.2886 2494.458 -837.6982 c
2494.458 -805.4961 2471.4814 -778.6636 2441.0283 -772.6909 C
Bb
1 (Unnamed gradient 2) 2307.3887 -674.4917 -90 347.9818 1 0 0 1 0 0 Bg
-0.000015 -347.9818 -378.1387 0.000017 2496.458 -674.4917 Xm
-0.0004 -9160.085 -378.1387 0.000017 2496.458 8485.5938 Bc
-0.000015 -347.9818 -378.1387 0.000017 2496.458 -674.4917 Bm
-0.0004 -9160.085 -378.1387 0.000017 2496.458 -1022.4736 Bc
f
0 BB
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
2753.7969 -944.3657 m
2725.5908 -745.9775 2458.5313 -697.1543 2362.7246 -875.1001 C
2283.7119 -838.5259 2190.166 -885.7266 2173.5791 -972.001 C
2117.5322 -943.6777 2049.8281 -984.1206 2049.8281 -1048.1836 c
2049.8281 -1049.2197 2049.8711 -1050.2441 2049.9043 -1051.2705 C
2000.1777 -1063.1006 1963.1826 -1107.7759 1963.1826 -1161.1191 c
1963.1826 -1223.4917 2013.748 -1274.0581 2076.1172 -1274.0581 C
2753.1826 -1274.0581 L
2844.2305 -1274.0581 2918.0391 -1200.251 2918.0391 -1109.2061 c
2918.0391 -1018.3657 2844.5596 -944.6982 2753.7969 -944.3657 C
f
0.681208 0.121279 0.183505 0.000031 0.258824 0.682353 0.776471 (R=66 G=174 B=198) 0 1 Xk
339.2471 -456.9761 m
337.0234 -437.0229 320.0996 -421.5054 299.5508 -421.5054 c
294.5469 -421.5054 289.7598 -422.4272 285.3457 -424.1079 C
276.5244 -407.7026 259.2012 -396.5503 239.2686 -396.5503 c
212.3994 -396.5503 190.2666 -416.8198 187.3223 -442.9028 C
163.2764 -444.9741 144.4072 -465.1431 144.4072 -489.7222 c
144.4072 -515.6792 165.4463 -536.7212 191.4043 -536.7212 C
331.459 -536.7212 L
353.6885 -536.7212 371.71 -518.7017 371.71 -496.4712 c
371.71 -476.9077 357.75 -460.605 339.2471 -456.9761 C
f
767.7031 -705.8862 m
763.8203 -671.085 734.3184 -644.0264 698.4854 -644.0264 c
689.7588 -644.0264 681.417 -645.647 673.7207 -648.5713 C
658.3369 -619.96 628.125 -600.5063 593.3652 -600.5063 c
546.501 -600.5063 507.9053 -635.8623 502.7754 -681.356 C
460.8496 -684.9653 427.9404 -720.1191 427.9404 -762.9844 c
427.9404 -808.2461 464.6357 -844.9385 509.8975 -844.9385 C
754.125 -844.9385 L
792.8916 -844.9385 824.3154 -813.5146 824.3154 -774.75 c
824.3154 -740.6318 799.9639 -712.21 767.7031 -705.8862 C
Bb
1 (Unnamed gradient 2) 763.436 -623.231 -133.7812 398.8185 1 0 0 1 0 0 Bg
-275.9449 -287.942 -256.5676 245.8777 891.6699 -746.1221 Xm
-5245.0522 -5473.0879 -256.5676 245.8777 6136.7227 4726.9658 Bc
-275.9449 -287.942 -256.5676 245.8777 891.6699 -746.1221 Bm
-5245.0522 -5473.0879 -256.5676 245.8777 615.7251 -1034.064 Bc
f
0 BB
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
685.4609 -1000.0996 m
721.2285 -954.1523 678.8799 -887.415 621.3633 -901.8018 C
621.373 -901.1807 621.3896 -900.5645 621.3896 -899.9419 c
621.3896 -801.0171 541.1914 -720.8208 442.2666 -720.8208 c
373.6553 -720.8208 314.0693 -759.4063 283.9844 -816.0513 C
211.4072 -766.4131 109.9141 -798.4077 80.1816 -882.7969 C
13.2725 -845.771 -58.8984 -923.7061 -17.3438 -987.5586 C
-86.2705 -998.3438 -139.0088 -1057.978 -139.0088 -1129.937 c
-139.0088 -1209.5356 -74.4814 -1274.0581 5.11621 -1274.0581 C
635.2813 -1274.0581 L
713.4648 -1274.0581 776.8408 -1210.6792 776.8408 -1132.4985 c
776.8408 -1071.9902 738.8652 -1020.3496 685.4609 -1000.0996 C
f
679.2578 -1867.6011 m
677.5605 -1867.6011 675.8423 -1867.1401 674.2974 -1866.1743 c
669.9082 -1863.4302 668.5752 -1857.647 671.3193 -1853.2573 c
696.8037 -1812.5015 754.2842 -1701.6821 754.8618 -1700.5679 c
757.2441 -1695.9712 762.9014 -1694.1802 767.4961 -1696.5581 c
772.0923 -1698.9399 773.8872 -1704.5972 771.5054 -1709.1929 c
769.1328 -1713.771 713.0991 -1821.7983 687.2139 -1863.1968 c
685.4355 -1866.0405 682.3813 -1867.6011 679.2578 -1867.6011 C
679.2578 -1867.6011 L
f
u
2046.5127 -1905.0933 m
2045.9072 -1904.1245 L
2020.1924 -1862.9995 1962.5137 -1751.7974 1961.9346 -1750.6782 C
1961.208 -1749.2778 L
1962.6836 -1748.7173 L
2197.1973 -1659.6948 2288.5664 -1526.6128 2288.5664 -1274.0581 C
2291.3789 -1274.0581 L
2291.3789 -1406.6978 2266.5693 -1503.6001 2213.3037 -1579.0171 c
2162.4434 -1651.0269 2083.5635 -1705.6333 1965.1582 -1750.7847 C
1971.8896 -1763.7339 2023.3457 -1862.4634 2047.6875 -1901.6646 C
2321.0635 -1800.7173 2484.2119 -1566.1851 2484.2119 -1274.0581 C
2487.0244 -1274.0581 L
2487.0244 -1414.3345 2448.0303 -1546.0591 2374.2568 -1654.9907 c
2336.6641 -1710.4995 2290.334 -1759.7212 2236.5537 -1801.2886 c
2180.9824 -1844.2397 2117.4043 -1879.0317 2047.585 -1904.6987 C
2046.5127 -1905.0933 L
2046.5127 -1905.0933 L
f
2047.1084 -1912.7534 m
2043.9844 -1912.7534 2040.9307 -1911.1929 2039.1523 -1908.3491 c
2013.2666 -1866.9507 1957.2334 -1758.9224 1954.8604 -1754.3442 c
1952.4795 -1749.7485 1954.2744 -1744.0913 1958.8701 -1741.7095 c
1963.4639 -1739.3276 1969.1221 -1741.1226 1971.5049 -1745.7192 c
1972.082 -1746.8335 2029.5625 -1857.6538 2055.0469 -1898.4097 c
2057.791 -1902.7993 2056.458 -1908.5825 2052.0693 -1911.3267 c
2050.5244 -1912.2925 2048.8057 -1912.7534 2047.1084 -1912.7534 C
2047.1084 -1912.7534 L
f
U
u
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1223.7979 -1789.0669 m
1217.0498 -1788.7974 1210.5361 -1786.2778 1208.209 -1784.3267 c
1205.877 -1782.3755 1208.543 -1779.8384 1211.4131 -1780.8442 c
1214.4229 -1781.9009 1217.1787 -1782.5122 y
1213.6455 -1768.2603 1207.6377 -1764.5571 v
1203.8232 -1762.2036 1204.4375 -1758.6177 1207.5537 -1759.6997 c
1217.8164 -1763.2583 1221.3506 -1771.0024 1229.3857 -1776.9146 c
1234.748 -1780.8521 1229.6143 -1790.8306 1223.7979 -1789.0669 C
f
/BBAccumRotation (2.818543) XT
u
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
1433.752 -1871.1821 m
1468.0977 -1880.3989 1470.8926 -1834.8599 1436.8496 -1829.8716 c
1368.7568 -1819.8989 1309.0557 -1812.8481 1229.3857 -1776.9146 C
1223.7979 -1789.0669 L
1297.1475 -1833.6255 1353.9717 -1849.77 1433.752 -1871.1821 c
f
U
U
u
1872.127 -1907.3345 m
1874.4297 -1905.5239 1883.4063 -1906.3247 1886 -1909.7544 c
1888.5977 -1913.1919 1895.4004 -1911.3267 1891.0137 -1904.9517 c
1886.623 -1898.5747 1875.0176 -1895.6313 1870.9375 -1897.7603 C
1871.5303 -1896.4458 1872.21 -1894.936 y
1861.8584 -1890.2759 l
1858.2803 -1901.1079 l
1872.127 -1907.3345 L
f
/BBAccumRotation (5.236895) XT
u
1615.2412 -1930.8325 m
1684.6768 -1944.5942 1808.3877 -1935.0962 1870.0332 -1912.604 C
1867.1895 -1911.4673 1858.9863 -1908.1841 1855.5537 -1906.8071 C
1785.4219 -1924.1782 1701.8291 -1905.8442 1629.084 -1886.6978 c
1582.2852 -1874.3833 1566.5381 -1921.1782 1615.2412 -1930.8325 c
f
/BBAccumRotation (4.980583) XT
U
U
u
1874.6113 -1939.5825 m
1877.1641 -1938.147 1885.9072 -1940.3286 1887.9453 -1944.1177 c
1889.9814 -1947.9106 1896.9883 -1947.1216 1893.6387 -1940.1431 c
1890.2881 -1933.1606 1879.2734 -1928.4634 1874.9141 -1929.9399 C
1875.7061 -1928.7329 1876.6084 -1927.3481 y
1867.0967 -1921.147 l
1861.8945 -1931.2896 l
1874.6113 -1939.5825 L
f
u
1598.999 -1959.729 m
1695.2295 -1982.1724 1779.585 -1977.9536 1871.9326 -1945.0649 C
1869.2471 -1943.5864 1861.5088 -1939.3208 1858.2725 -1937.5356 C
1776.7734 -1950.8267 1698.9775 -1943.4263 1611.668 -1914.0981 c
1579.0908 -1903.1548 1565.5547 -1951.9302 1598.999 -1959.729 c
f
/BBAccumRotation (5.286171) XT
U
U
u
u
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1421.75 -1804.4399 m
1421.1035 -1796.5063 1414.2432 -1782.27 1401.6553 -1781.8267 c
1390.5566 -1781.436 1383.332 -1784.2603 1379.3994 -1792.2759 c
1375.4668 -1800.2974 1372.623 -1807.3306 Y
1378.6943 -1807.5415 L
1378.7783 -1810.7329 1379.0391 -1812.0942 V
1378.2168 -1812.7603 1378.4619 -1815.4614 1380.0615 -1816.104 C
1378.582 -1817.522 1379.7764 -1819.6509 1381.1455 -1820.0474 C
1385.3076 -1836.4048 1402.1035 -1856.6685 1422.6318 -1865.8032 C
1443.3018 -1825.106 L
1438.167 -1823.3013 1422.4463 -1812.9829 1421.75 -1804.4399 c
f
/BBAccumRotation (10.510178) XT
U
u
1 Ap
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
1383.0566 -1796.0962 m
1382.6035 -1797.3931 1383.29 -1798.8091 1384.5908 -1799.2524 c
1385.8945 -1799.7017 1387.2988 -1799.0103 1387.7432 -1797.7114 c
1388.1904 -1796.4146 1387.499 -1795.0083 1386.1943 -1794.5591 c
1384.9102 -1794.1157 1383.4941 -1794.8013 1383.0566 -1796.0962 c
f
/BBAccumRotation (13.339254) XT
1388.7715 -1796.2974 m
1388.3203 -1797.5962 1389.0049 -1799.0142 1390.3027 -1799.4575 c
1391.5977 -1799.8989 1393.0049 -1799.2153 1393.4512 -1797.9146 c
1393.9014 -1796.6216 1393.2129 -1795.2056 1391.9092 -1794.7603 c
1390.624 -1794.313 1389.2109 -1795.0024 1388.7715 -1796.2974 c
f
/BBAccumRotation (13.339254) XT
0 Ap
1417.4609 -1784.8755 m
1417.2744 -1779.4263 1411.3848 -1775.2915 1406.0215 -1776.6313 c
1400.6563 -1777.9692 1396.04 -1776.561 1396.5068 -1773.897 C
1391.9648 -1777.5669 1393.2344 -1784.7974 1397.6387 -1787.6333 c
1402.0342 -1790.4751 1413.6055 -1790.8813 1415.7158 -1790.7661 C
1414.665 -1793.6021 1418.6943 -1804.481 1421.75 -1804.4399 C
1426.6182 -1799.4849 1425.5762 -1785.4341 1417.4609 -1784.8755 C
f
/BBAccumRotation (10.493726) XT
U
U
u
1443.3018 -1825.106 m
1435.2266 -1841.0044 1429.9063 -1851.481 1422.6318 -1865.8032 C
1455.4404 -1914.0942 1534.5068 -1955.8677 1601.1875 -1968.5044 C
1615.3984 -1933.1978 1622.8203 -1908.1216 1631.708 -1877.7583 C
1556.1865 -1863.7778 1501.3965 -1846.6274 1443.3018 -1825.106 C
f
/BBAccumRotation (6.504889) XT
U
U
u
0.000031 0.000031 0.000031 0.000031 0 0.580392 0.701961 (R=0 G=148 B=179) 1 1 Xk
1430.2441 -1850.8169 m
1426.9883 -1857.2192 l
1433.8486 -1865.5161 l
1440.5146 -1855.7349 l
1430.2441 -1850.8169 l
f
/BBAccumRotation (7.610393) XT
1438.1729 -1859.1743 m
1437.5742 -1860.0454 1436.5869 -1861.5005 1435.9785 -1862.3931 C
1452.7705 -1889.6938 1502.7842 -1903.1001 1561.7383 -1876.1938 C
1564.6875 -1870.8521 1569.5918 -1856.0962 y
1547.3994 -1849.5435 l
1509.585 -1880.7563 1458.5166 -1882.1333 1438.1729 -1859.1743 C
f
/BBAccumRotation (7.044775) XT
U
u
u
u
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
1453.9902 -1870.2778 m
1482.0459 -1870.4087 1477.874 -1829.8384 1449.0039 -1831.397 c
1381.0527 -1835.0552 1304.1064 -1840.0981 1223.2207 -1814.4087 C
1224.7969 -1828.8071 L
1308.3965 -1862.3481 1380.9375 -1869.9302 1453.9902 -1870.2778 c
f
U
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1223.2207 -1814.4087 m
1224.7969 -1828.8071 l
1219.0859 -1831.7974 1209.3643 -1825.7935 y
1211.5205 -1809.4165 l
1215.3096 -1811.1255 1219.4473 -1812.5942 1223.2207 -1814.4087 c
f
/BBAccumRotation (2.442114) XT
1223.2207 -1814.4087 m
1220.9883 -1812.0415 1216.4053 -1807.604 1214.2578 -1805.772 c
1212.1211 -1803.9399 1209.584 -1805.5356 1211.6133 -1808.1255 c
1213.6377 -1810.7075 1217.3604 -1814.8696 1218.3506 -1816.0083 c
1219.3457 -1817.145 1225.4395 -1816.7485 1223.2207 -1814.4087 c
f
/BBAccumRotation (2.442114) XT
U
1211.375 -1813.5894 m
1211.0269 -1813.5894 1210.6733 -1813.5044 1210.3467 -1813.3247 c
1207.0913 -1811.5405 1203.4258 -1809.9321 1201.4321 -1809.4146 c
1200.2861 -1809.1177 1199.5986 -1807.9468 1199.8965 -1806.8013 c
1200.1943 -1805.6567 1201.3638 -1804.9683 1202.5093 -1805.2661 c
1204.8433 -1805.8716 1208.8208 -1807.6001 1212.4072 -1809.5669 c
1213.4453 -1810.1353 1213.8252 -1811.438 1213.2563 -1812.4761 c
1212.8667 -1813.187 1212.1323 -1813.5894 1211.375 -1813.5894 C
1211.375 -1813.5894 L
f
1211.1875 -1818.1304 m
1210.8394 -1818.1304 1210.4858 -1818.0454 1210.1592 -1817.8657 c
1206.8408 -1816.0474 1201.5278 -1814.4526 1199.1714 -1814.2954 c
1197.9902 -1814.2163 1197.0972 -1813.1948 1197.1758 -1812.0142 c
1197.2549 -1810.8335 1198.2651 -1809.937 1199.4575 -1810.0181 c
1202.6753 -1810.2339 1208.6392 -1812.144 1212.2197 -1814.1079 c
1213.2578 -1814.6763 1213.6377 -1815.979 1213.0688 -1817.0171 c
1212.6792 -1817.728 1211.9448 -1818.1304 1211.1875 -1818.1304 C
1211.1875 -1818.1304 L
f
1210.9775 -1821.9917 m
1210.6299 -1821.9917 1210.2769 -1821.9067 1209.9502 -1821.728 c
1206.8535 -1820.0337 1203.4243 -1819.3364 1200.7725 -1819.8735 c
1199.6128 -1820.104 1198.4824 -1819.355 1198.2485 -1818.1948 c
1198.0146 -1817.0347 1198.7661 -1815.9048 1199.9268 -1815.6704 c
1203.5903 -1814.937 1207.9937 -1815.77 1212.0088 -1817.9683 c
1213.0469 -1818.5366 1213.4277 -1819.8394 1212.8594 -1820.8774 c
1212.4697 -1821.5894 1211.7354 -1821.9917 1210.9775 -1821.9917 C
1210.9775 -1821.9917 L
f
1210.3975 -1826.0581 m
1210.0498 -1826.0581 1209.6973 -1825.9731 1209.3706 -1825.7944 c
1206.0293 -1823.9663 1204.7256 -1824.1831 1203.8169 -1824.6899 c
1202.7832 -1825.2661 1201.478 -1824.894 1200.9019 -1823.8589 c
1200.3262 -1822.8247 1200.6978 -1821.52 1201.7319 -1820.9438 c
1205.0981 -1819.0718 1208.5215 -1820.4448 1211.4282 -1822.0347 c
1212.4663 -1822.6021 1212.8477 -1823.9048 1212.2798 -1824.9429 c
1211.8901 -1825.6548 1211.1558 -1826.0581 1210.3975 -1826.0581 C
1210.3975 -1826.0581 L
f
U
U
u
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
851.2568 -1743.7778 m
781.5234 -1713.7104 707.1572 -1706.2017 693.5586 -1736.229 C
722.7842 -1754.5181 L
730.6826 -1744.7798 765.8184 -1756.4751 828.25 -1781.5532 c
860.1396 -1794.3638 882.791 -1757.3774 851.2568 -1743.7778 c
f
U
u
832.377 -1771.9243 m
765.3242 -1744.5884 687.9375 -1737.1548 672.0703 -1774.9263 C
703.1123 -1795.561 L
716.2539 -1776.981 764.3457 -1796.7915 815.2285 -1814.0649 c
861.0527 -1829.6235 878.3545 -1790.6685 832.377 -1771.9243 c
f
U
u
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1214.2676 -1934.8091 m
1220.9746 -1935.6118 1227.2666 -1938.6372 1229.4346 -1940.7681 c
1231.6055 -1942.8931 1228.7461 -1945.2114 1225.9639 -1943.9829 c
1223.0488 -1942.6919 1220.3496 -1941.8657 y
1222.75 -1956.3521 1228.4434 -1960.5181 v
1232.0635 -1963.1626 1231.165 -1966.6919 1228.1455 -1965.3696 c
1218.1953 -1961.0083 1215.2842 -1953.0103 1207.7402 -1946.4829 c
1202.7041 -1942.1333 1208.6074 -1932.5942 1214.2676 -1934.8091 C
f
/BBAccumRotation (2.709235) XT
u
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
997.627 -1836.8911 m
962.6455 -1830.4868 963.5537 -1876.104 997.8877 -1878.3149 c
1066.5693 -1882.731 1131.1514 -1904.3774 1207.7402 -1946.4829 C
1214.2676 -1934.8091 L
1144.6611 -1884.6021 1078.8809 -1851.7583 997.627 -1836.8911 c
f
U
U
u
u
u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
992.834 -1925.4106 m
991.2676 -1933.2134 993.9355 -1948.7915 1005.9092 -1952.6899 c
1016.4717 -1956.1274 1024.1953 -1955.4067 1030.1846 -1948.7837 c
1036.1787 -1942.1567 1040.8535 -1936.186 Y
1035.0742 -1934.3032 L
1035.8721 -1931.2134 1035.9971 -1929.8345 V
1036.9756 -1929.4185 1037.4834 -1926.7544 1036.124 -1925.6978 C
1037.9365 -1924.7427 1037.377 -1922.3677 1036.1699 -1921.6079 C
1036.6787 -1904.7388 1031.9922 -1885.2622 1015.7832 -1869.7017 C
982.5264 -1900.9653 L
986.7451 -1904.4048 994.5205 -1917.0044 992.834 -1925.4106 c
f
/BBAccumRotation (10.200368) XT
U
u
1 Ap
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
1027.7256 -1944.104 m
1028.5156 -1942.9829 1028.249 -1941.4321 1027.1221 -1940.647 c
1025.9922 -1939.854 1024.4512 -1940.1353 1023.665 -1941.2583 c
1022.877 -1942.3794 1023.1533 -1943.9263 1024.2861 -1944.7134 c
1025.3945 -1945.4966 1026.9463 -1945.229 1027.7256 -1944.104 c
f
/BBAccumRotation (13.029446) XT
1022.2871 -1942.3325 m
1023.0801 -1941.2114 1022.8105 -1939.6606 1021.6846 -1938.8755 c
1020.5635 -1938.0903 1019.0254 -1938.3618 1018.2354 -1939.4907 c
1017.4453 -1940.6079 1017.7168 -1942.1548 1018.8447 -1942.9458 c
1019.9609 -1943.7329 1021.5068 -1943.4556 1022.2871 -1942.3325 c
f
/BBAccumRotation (13.029446) XT
0 Ap
991.5596 -1945.3989 m
990.2334 -1950.6899 994.7568 -1956.2896 1000.2842 -1956.479 c
1005.8057 -1956.6724 1009.8564 -1959.2993 1008.6748 -1961.731 C
1014.0508 -1959.4556 1014.8232 -1952.1548 1011.3711 -1948.2153 c
1007.9336 -1944.272 996.9238 -1940.688 994.8613 -1940.2192 C
996.6543 -1937.7817 995.7822 -1926.2134 992.834 -1925.4106 C
986.7861 -1928.8325 983.915 -1942.6255 991.5596 -1945.3989 C
f
/BBAccumRotation (10.183917) XT
U
U
u
982.5264 -1900.9653 m
995.5186 -1888.7544 1004.0801 -1880.7036 1015.7832 -1869.7017 C
1001.3164 -1813.1411 915.208 -1752.9653 849.8047 -1734.854 C
832.7188 -1768.8618 823.2441 -1793.2368 811.873 -1822.7603 C
885.9785 -1842.9458 935.1885 -1861.0024 982.5264 -1900.9653 C
f
/BBAccumRotation (6.128220) XT
U
U
u
0.000031 0.000031 0.000031 0.000031 0 0.580392 0.701961 (R=0 G=148 B=179) 1 1 Xk
1003.5391 -1881.2153 m
1008.7715 -1876.2954 l
1005.1357 -1866.1646 l
995.5469 -1873.1021 l
1003.5391 -1881.2153 l
f
/BBAccumRotation (7.233724) XT
998.9141 -1870.6626 m
999.7734 -1870.0435 1001.1982 -1869.0122 1002.0723 -1868.3813 C
995.5459 -1836.9966 960.1924 -1818.147 900.1963 -1793.6548 C
894.2852 -1795.1665 880.1777 -1801.7095 y
890.6143 -1822.3618 l
939.2598 -1828.5083 987.5732 -1842.1606 998.9141 -1870.6626 C
f
/BBAccumRotation (5.935241) XT
U
u
u
u
0.637751 0.946044 0.345495 0.235782 0.388235 0.160784 0.360784 (R=99 G=41 B=92) 0 1 Xk
987.8076 -1854.8481 m
961.4619 -1845.2017 951.6143 -1884.7778 979.2988 -1893.1118 c
1044.457 -1912.7349 1113.8525 -1963.1665 1170.9053 -2025.9946 C
1176.7725 -2012.7505 L
1121.3145 -1941.7681 1056.4033 -1879.9712 987.8076 -1854.8481 c
f
U
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1170.9053 -2025.9946 m
1176.7725 -2012.7505 l
1183.2119 -2013.0317 1188.6045 -2023.104 y
1178.5186 -2036.1841 l
1176.0986 -2032.8032 1173.2568 -2029.4595 1170.9053 -2025.9946 c
f
/BBAccumRotation (1.885754) XT
1170.9053 -2025.9946 m
1171.6475 -2029.1646 1173.3838 -2035.3032 1174.3184 -2037.9653 c
1175.25 -2040.6216 1178.2451 -2040.5142 1177.7891 -2037.2563 c
1177.334 -2034.0063 1176.2041 -2028.5376 1175.9209 -2027.0571 c
1175.6318 -2025.5728 1170.1611 -2022.856 1170.9053 -2025.9946 c
f
/BBAccumRotation (1.885754) XT
U
1185.7314 -2044.9214 m
1185.186 -2044.9214 1184.6406 -2044.7144 1184.2227 -2044.3003 c
1182.5151 -2042.6069 1179.9443 -2039.1167 1177.8262 -2035.6138 c
1177.2139 -2034.6001 1177.5381 -2033.2827 1178.5513 -2032.6704 c
1179.5625 -2032.0571 1180.8809 -2032.3813 1181.4941 -2033.395 c
1183.418 -2036.5767 1185.7808 -2039.8091 1187.2402 -2041.2554 c
1188.0811 -2042.0894 1188.0869 -2043.4458 1187.2534 -2044.2866 c
1186.8345 -2044.7095 1186.2832 -2044.9214 1185.7314 -2044.9214 C
1185.7314 -2044.9214 L
f
1190.4463 -2042.0874 m
1190.0347 -2042.0874 1189.6187 -2041.9692 1189.2515 -2041.7222 c
1186.5771 -2039.9214 1182.3784 -2035.2739 1180.2666 -2031.7759 c
1179.6548 -2030.7632 1179.9805 -2029.4458 1180.9937 -2028.8335 c
1182.0078 -2028.2222 1183.3242 -2028.5474 1183.9365 -2029.561 c
1185.8931 -2032.8022 1189.687 -2036.8481 1191.645 -2038.1655 c
1192.627 -2038.8267 1192.8872 -2040.1587 1192.2261 -2041.1401 c
1191.8125 -2041.7554 1191.1357 -2042.0874 1190.4463 -2042.0874 C
1190.4463 -2042.0874 L
f
1192.373 -2036.7124 m
1192.1455 -2036.7124 1191.9141 -2036.6763 1191.686 -2036.5991 c
1188.1992 -2035.4194 1184.7231 -2032.4077 1182.3882 -2028.5425 c
1181.7759 -2027.5288 1182.1011 -2026.2114 1183.1143 -2025.5991 c
1184.127 -2024.9888 1185.4443 -2025.313 1186.0571 -2026.3257 c
1187.8848 -2029.3511 1190.5024 -2031.6733 1193.0601 -2032.5386 c
1194.1812 -2032.9185 1194.7827 -2034.1343 1194.4033 -2035.2554 c
1194.1011 -2036.1489 1193.2671 -2036.7124 1192.373 -2036.7124 C
1192.373 -2036.7124 L
f
1192.8105 -2031.1304 m
1192.7979 -2031.1304 1192.7852 -2031.1304 1192.7725 -2031.1294 c
1188.9185 -2031.063 1186.6465 -2028.1528 1184.9321 -2025.3159 c
1184.3198 -2024.3022 1184.645 -2022.9849 1185.6582 -2022.3735 c
1186.6709 -2021.7593 1187.9893 -2022.0864 1188.6011 -2023.0991 c
1190.5708 -2026.3599 1191.8057 -2026.8257 1192.8467 -2026.8442 c
1194.0303 -2026.8647 1194.9731 -2027.8403 1194.9526 -2029.0239 c
1194.9321 -2030.1948 1193.9766 -2031.1304 1192.8105 -2031.1304 C
1192.8105 -2031.1304 L
f
U
U
u
u
*u
2241.4453 -411.1665 m
2238.2275 -411.1665 L
2234.6738 -411.1665 2231.793 -408.2856 2231.793 -404.7314 c
2231.793 -401.1772 2234.6738 -398.2964 2238.2275 -398.2964 C
2241.4453 -398.2964 L
2244.999 -398.2964 2247.8809 -401.1772 2247.8809 -404.7314 c
2247.8809 -408.2856 2244.999 -411.1665 2241.4453 -411.1665 C
2241.4453 -411.1665 L
f
2215.7051 -411.1665 m
2212.4873 -411.1665 L
2208.9336 -411.1665 2206.0527 -408.2856 2206.0527 -404.7314 c
2206.0527 -401.1772 2208.9336 -398.2964 2212.4873 -398.2964 C
2215.7051 -398.2964 L
2219.2588 -398.2964 2222.1406 -401.1772 2222.1406 -404.7314 c
2222.1406 -408.2856 2219.2588 -411.1665 2215.7051 -411.1665 C
2215.7051 -411.1665 L
f
2189.9648 -411.1665 m
2186.7471 -411.1665 L
2183.1934 -411.1665 2180.3125 -408.2856 2180.3125 -404.7314 c
2180.3125 -401.1772 2183.1934 -398.2964 2186.7471 -398.2964 C
2189.9648 -398.2964 L
2193.5186 -398.2964 2196.4004 -401.1772 2196.4004 -404.7314 c
2196.4004 -408.2856 2193.5186 -411.1665 2189.9648 -411.1665 C
2189.9648 -411.1665 L
f
2164.2246 -411.1665 m
2161.0068 -411.1665 L
2157.4531 -411.1665 2154.5723 -408.2856 2154.5723 -404.7314 c
2154.5723 -401.1772 2157.4531 -398.2964 2161.0068 -398.2964 C
2164.2246 -398.2964 L
2167.7783 -398.2964 2170.6602 -401.1772 2170.6602 -404.7314 c
2170.6602 -408.2856 2167.7783 -411.1665 2164.2246 -411.1665 C
2164.2246 -411.1665 L
f
2138.4844 -411.1665 m
2135.2666 -411.1665 L
2131.7129 -411.1665 2128.832 -408.2856 2128.832 -404.7314 c
2128.832 -401.1772 2131.7129 -398.2964 2135.2666 -398.2964 C
2138.4844 -398.2964 L
2142.0381 -398.2964 2144.9189 -401.1772 2144.9189 -404.7314 c
2144.9189 -408.2856 2142.0381 -411.1665 2138.4844 -411.1665 C
2138.4844 -411.1665 L
f
2112.7441 -411.1665 m
2109.5273 -411.1665 L
2105.9736 -411.1665 2103.0928 -408.2856 2103.0928 -404.7314 c
2103.0928 -401.1772 2105.9736 -398.2964 2109.5273 -398.2964 C
2112.7441 -398.2964 L
2116.2979 -398.2964 2119.1787 -401.1772 2119.1787 -404.7314 c
2119.1787 -408.2856 2116.2979 -411.1665 2112.7441 -411.1665 C
2112.7441 -411.1665 L
f
2087.0039 -411.1665 m
2083.7871 -411.1665 L
2080.2334 -411.1665 2077.3516 -408.2856 2077.3516 -404.7314 c
2077.3516 -401.1772 2080.2334 -398.2964 2083.7871 -398.2964 C
2087.0039 -398.2964 L
2090.5576 -398.2964 2093.4385 -401.1772 2093.4385 -404.7314 c
2093.4385 -408.2856 2090.5576 -411.1665 2087.0039 -411.1665 C
2087.0039 -411.1665 L
f
2061.2637 -411.1665 m
2058.0469 -411.1665 L
2054.4932 -411.1665 2051.6113 -408.2856 2051.6113 -404.7314 c
2051.6113 -401.1772 2054.4932 -398.2964 2058.0469 -398.2964 C
2061.2637 -398.2964 L
2064.8174 -398.2964 2067.6982 -401.1772 2067.6982 -404.7314 c
2067.6982 -408.2856 2064.8174 -411.1665 2061.2637 -411.1665 C
2061.2637 -411.1665 L
f
2035.5244 -411.1665 m
2032.3066 -411.1665 L
2028.7529 -411.1665 2025.8711 -408.2856 2025.8711 -404.7314 c
2025.8711 -401.1772 2028.7529 -398.2964 2032.3066 -398.2964 C
2035.5244 -398.2964 L
2039.0781 -398.2964 2041.959 -401.1772 2041.959 -404.7314 c
2041.959 -408.2856 2039.0781 -411.1665 2035.5244 -411.1665 C
2035.5244 -411.1665 L
f
2009.7842 -411.1665 m
2006.5664 -411.1665 L
2003.0127 -411.1665 2000.1309 -408.2856 2000.1309 -404.7314 c
2000.1309 -401.1772 2003.0127 -398.2964 2006.5664 -398.2964 C
2009.7842 -398.2964 L
2013.3379 -398.2964 2016.2188 -401.1772 2016.2188 -404.7314 c
2016.2188 -408.2856 2013.3379 -411.1665 2009.7842 -411.1665 C
2009.7842 -411.1665 L
f
1984.0439 -411.1665 m
1980.8262 -411.1665 L
1977.2725 -411.1665 1974.3916 -408.2856 1974.3916 -404.7314 c
1974.3916 -401.1772 1977.2725 -398.2964 1980.8262 -398.2964 C
1984.0439 -398.2964 L
1987.5977 -398.2964 1990.4795 -401.1772 1990.4795 -404.7314 c
1990.4795 -408.2856 1987.5977 -411.1665 1984.0439 -411.1665 C
1984.0439 -411.1665 L
f
1958.3037 -411.1665 m
1955.0859 -411.1665 L
1951.5322 -411.1665 1948.6514 -408.2856 1948.6514 -404.7314 c
1948.6514 -401.1772 1951.5322 -398.2964 1955.0859 -398.2964 C
1958.3037 -398.2964 L
1961.8574 -398.2964 1964.7393 -401.1772 1964.7393 -404.7314 c
1964.7393 -408.2856 1961.8574 -411.1665 1958.3037 -411.1665 C
1958.3037 -411.1665 L
f
1932.5635 -411.1665 m
1929.3457 -411.1665 L
1925.792 -411.1665 1922.9111 -408.2856 1922.9111 -404.7314 c
1922.9111 -401.1772 1925.792 -398.2964 1929.3457 -398.2964 C
1932.5635 -398.2964 L
1936.1172 -398.2964 1938.999 -401.1772 1938.999 -404.7314 c
1938.999 -408.2856 1936.1172 -411.1665 1932.5635 -411.1665 C
1932.5635 -411.1665 L
f
1906.8232 -411.1665 m
1903.6055 -411.1665 L
1900.0518 -411.1665 1897.1709 -408.2856 1897.1709 -404.7314 c
1897.1709 -401.1772 1900.0518 -398.2964 1903.6055 -398.2964 C
1906.8232 -398.2964 L
1910.377 -398.2964 1913.2578 -401.1772 1913.2578 -404.7314 c
1913.2578 -408.2856 1910.377 -411.1665 1906.8232 -411.1665 C
1906.8232 -411.1665 L
f
1881.083 -411.1665 m
1877.8652 -411.1665 L
1874.3115 -411.1665 1871.4297 -408.2856 1871.4297 -404.7314 c
1871.4297 -401.1772 1874.3115 -398.2964 1877.8652 -398.2964 C
1881.083 -398.2964 L
1884.6367 -398.2964 1887.5176 -401.1772 1887.5176 -404.7314 c
1887.5176 -408.2856 1884.6367 -411.1665 1881.083 -411.1665 C
1881.083 -411.1665 L
f
1855.3428 -411.1665 m
1852.125 -411.1665 L
1848.5713 -411.1665 1845.6895 -408.2856 1845.6895 -404.7314 c
1845.6895 -401.1772 1848.5713 -398.2964 1852.125 -398.2964 C
1855.3428 -398.2964 L
1858.8965 -398.2964 1861.7773 -401.1772 1861.7773 -404.7314 c
1861.7773 -408.2856 1858.8965 -411.1665 1855.3428 -411.1665 C
1855.3428 -411.1665 L
f
1829.6025 -411.1665 m
1826.3857 -411.1665 L
1822.832 -411.1665 1819.9502 -408.2856 1819.9502 -404.7314 c
1819.9502 -401.1772 1822.832 -398.2964 1826.3857 -398.2964 C
1829.6025 -398.2964 L
1833.1563 -398.2964 1836.0371 -401.1772 1836.0371 -404.7314 c
1836.0371 -408.2856 1833.1563 -411.1665 1829.6025 -411.1665 C
1829.6025 -411.1665 L
f
1803.8623 -411.1665 m
1800.6455 -411.1665 L
1797.0918 -411.1665 1794.21 -408.2856 1794.21 -404.7314 c
1794.21 -401.1772 1797.0918 -398.2964 1800.6455 -398.2964 C
1803.8623 -398.2964 L
1807.416 -398.2964 1810.2969 -401.1772 1810.2969 -404.7314 c
1810.2969 -408.2856 1807.416 -411.1665 1803.8623 -411.1665 C
1803.8623 -411.1665 L
f
1778.123 -411.1665 m
1774.9053 -411.1665 L
1771.3516 -411.1665 1768.4697 -408.2856 1768.4697 -404.7314 c
1768.4697 -401.1772 1771.3516 -398.2964 1774.9053 -398.2964 C
1778.123 -398.2964 L
1781.6768 -398.2964 1784.5576 -401.1772 1784.5576 -404.7314 c
1784.5576 -408.2856 1781.6768 -411.1665 1778.123 -411.1665 C
1778.123 -411.1665 L
f
1752.3828 -411.1665 m
1749.165 -411.1665 L
1745.6113 -411.1665 1742.7305 -408.2856 1742.7305 -404.7314 c
1742.7305 -401.1772 1745.6113 -398.2964 1749.165 -398.2964 C
1752.3828 -398.2964 L
1755.9365 -398.2964 1758.8184 -401.1772 1758.8184 -404.7314 c
1758.8184 -408.2856 1755.9365 -411.1665 1752.3828 -411.1665 C
1752.3828 -411.1665 L
f
1726.6426 -411.1665 m
1723.4248 -411.1665 L
1719.8711 -411.1665 1716.9902 -408.2856 1716.9902 -404.7314 c
1716.9902 -401.1772 1719.8711 -398.2964 1723.4248 -398.2964 C
1726.6426 -398.2964 L
1730.1963 -398.2964 1733.0781 -401.1772 1733.0781 -404.7314 c
1733.0781 -408.2856 1730.1963 -411.1665 1726.6426 -411.1665 C
1726.6426 -411.1665 L
f
1700.9023 -411.1665 m
1697.6846 -411.1665 L
1694.1309 -411.1665 1691.25 -408.2856 1691.25 -404.7314 c
1691.25 -401.1772 1694.1309 -398.2964 1697.6846 -398.2964 C
1700.9023 -398.2964 L
1704.4561 -398.2964 1707.3379 -401.1772 1707.3379 -404.7314 c
1707.3379 -408.2856 1704.4561 -411.1665 1700.9023 -411.1665 C
1700.9023 -411.1665 L
f
1675.1621 -411.1665 m
1671.9443 -411.1665 L
1668.3906 -411.1665 1665.5098 -408.2856 1665.5098 -404.7314 c
1665.5098 -401.1772 1668.3906 -398.2964 1671.9443 -398.2964 C
1675.1621 -398.2964 L
1678.7158 -398.2964 1681.5977 -401.1772 1681.5977 -404.7314 c
1681.5977 -408.2856 1678.7158 -411.1665 1675.1621 -411.1665 C
1675.1621 -411.1665 L
f
1649.4219 -411.1665 m
1646.2041 -411.1665 L
1642.6504 -411.1665 1639.7695 -408.2856 1639.7695 -404.7314 c
1639.7695 -401.1772 1642.6504 -398.2964 1646.2041 -398.2964 C
1649.4219 -398.2964 L
1652.9756 -398.2964 1655.8564 -401.1772 1655.8564 -404.7314 c
1655.8564 -408.2856 1652.9756 -411.1665 1649.4219 -411.1665 C
1649.4219 -411.1665 L
f
1623.6816 -411.1665 m
1620.4648 -411.1665 L
1616.9111 -411.1665 1614.0303 -408.2856 1614.0303 -404.7314 c
1614.0303 -401.1772 1616.9111 -398.2964 1620.4648 -398.2964 C
1623.6816 -398.2964 L
1627.2354 -398.2964 1630.1162 -401.1772 1630.1162 -404.7314 c
1630.1162 -408.2856 1627.2354 -411.1665 1623.6816 -411.1665 C
1623.6816 -411.1665 L
f
1597.9414 -411.1665 m
1594.7246 -411.1665 L
1591.1709 -411.1665 1588.2891 -408.2856 1588.2891 -404.7314 c
1588.2891 -401.1772 1591.1709 -398.2964 1594.7246 -398.2964 C
1597.9414 -398.2964 L
1601.4951 -398.2964 1604.376 -401.1772 1604.376 -404.7314 c
1604.376 -408.2856 1601.4951 -411.1665 1597.9414 -411.1665 C
1597.9414 -411.1665 L
f
1572.2021 -411.1665 m
1568.9844 -411.1665 L
1565.4307 -411.1665 1562.5488 -408.2856 1562.5488 -404.7314 c
1562.5488 -401.1772 1565.4307 -398.2964 1568.9844 -398.2964 C
1572.2021 -398.2964 L
1575.7559 -398.2964 1578.6367 -401.1772 1578.6367 -404.7314 c
1578.6367 -408.2856 1575.7559 -411.1665 1572.2021 -411.1665 C
1572.2021 -411.1665 L
f
1546.4619 -411.1665 m
1543.2441 -411.1665 L
1539.6904 -411.1665 1536.8086 -408.2856 1536.8086 -404.7314 c
1536.8086 -401.1772 1539.6904 -398.2964 1543.2441 -398.2964 C
1546.4619 -398.2964 L
1550.0156 -398.2964 1552.8965 -401.1772 1552.8965 -404.7314 c
1552.8965 -408.2856 1550.0156 -411.1665 1546.4619 -411.1665 C
1546.4619 -411.1665 L
f
1520.7217 -411.1665 m
1517.5039 -411.1665 L
1513.9502 -411.1665 1511.0684 -408.2856 1511.0684 -404.7314 c
1511.0684 -401.1772 1513.9502 -398.2964 1517.5039 -398.2964 C
1520.7217 -398.2964 L
1524.2754 -398.2964 1527.1563 -401.1772 1527.1563 -404.7314 c
1527.1563 -408.2856 1524.2754 -411.1665 1520.7217 -411.1665 C
1520.7217 -411.1665 L
f
1494.9814 -411.1665 m
1491.7637 -411.1665 L
1488.21 -411.1665 1485.3291 -408.2856 1485.3291 -404.7314 c
1485.3291 -401.1772 1488.21 -398.2964 1491.7637 -398.2964 C
1494.9814 -398.2964 L
1498.5352 -398.2964 1501.417 -401.1772 1501.417 -404.7314 c
1501.417 -408.2856 1498.5352 -411.1665 1494.9814 -411.1665 C
1494.9814 -411.1665 L
f
1469.2412 -411.1665 m
1466.0234 -411.1665 L
1462.4697 -411.1665 1459.5889 -408.2856 1459.5889 -404.7314 c
1459.5889 -401.1772 1462.4697 -398.2964 1466.0234 -398.2964 C
1469.2412 -398.2964 L
1472.7949 -398.2964 1475.6768 -401.1772 1475.6768 -404.7314 c
1475.6768 -408.2856 1472.7949 -411.1665 1469.2412 -411.1665 C
1469.2412 -411.1665 L
f
1443.501 -411.1665 m
1440.2832 -411.1665 L
1436.7295 -411.1665 1433.8486 -408.2856 1433.8486 -404.7314 c
1433.8486 -401.1772 1436.7295 -398.2964 1440.2832 -398.2964 C
1443.501 -398.2964 L
1447.0547 -398.2964 1449.9365 -401.1772 1449.9365 -404.7314 c
1449.9365 -408.2856 1447.0547 -411.1665 1443.501 -411.1665 C
1443.501 -411.1665 L
f
1417.7607 -411.1665 m
1414.5439 -411.1665 L
1410.9902 -411.1665 1408.1094 -408.2856 1408.1094 -404.7314 c
1408.1094 -401.1772 1410.9902 -398.2964 1414.5439 -398.2964 C
1417.7607 -398.2964 L
1421.3145 -398.2964 1424.1953 -401.1772 1424.1953 -404.7314 c
1424.1953 -408.2856 1421.3145 -411.1665 1417.7607 -411.1665 C
1417.7607 -411.1665 L
f
1392.0205 -411.1665 m
1388.8037 -411.1665 L
1385.25 -411.1665 1382.3691 -408.2856 1382.3691 -404.7314 c
1382.3691 -401.1772 1385.25 -398.2964 1388.8037 -398.2964 C
1392.0205 -398.2964 L
1395.5742 -398.2964 1398.4551 -401.1772 1398.4551 -404.7314 c
1398.4551 -408.2856 1395.5742 -411.1665 1392.0205 -411.1665 C
1392.0205 -411.1665 L
f
1366.2813 -411.1665 m
1363.0635 -411.1665 L
1359.5098 -411.1665 1356.6289 -408.2856 1356.6289 -404.7314 c
1356.6289 -401.1772 1359.5098 -398.2964 1363.0635 -398.2964 C
1366.2813 -398.2964 L
1369.835 -398.2964 1372.7158 -401.1772 1372.7158 -404.7314 c
1372.7158 -408.2856 1369.835 -411.1665 1366.2813 -411.1665 C
1366.2813 -411.1665 L
f
1340.5405 -411.1665 m
1337.3232 -411.1665 L
1333.7695 -411.1665 1330.8882 -408.2856 1330.8882 -404.7314 c
1330.8882 -401.1772 1333.7695 -398.2964 1337.3232 -398.2964 C
1340.5405 -398.2964 L
1344.0947 -398.2964 1346.9756 -401.1772 1346.9756 -404.7314 c
1346.9756 -408.2856 1344.0947 -411.1665 1340.5405 -411.1665 C
1340.5405 -411.1665 L
f
1314.8003 -411.1665 m
1311.583 -411.1665 L
1308.0288 -411.1665 1305.1479 -408.2856 1305.1479 -404.7314 c
1305.1479 -401.1772 1308.0288 -398.2964 1311.583 -398.2964 C
1314.8003 -398.2964 L
1318.3545 -398.2964 1321.2354 -401.1772 1321.2354 -404.7314 c
1321.2354 -408.2856 1318.3545 -411.1665 1314.8003 -411.1665 C
1314.8003 -411.1665 L
f
*U
1300.2002 -427.0947 m
1261.4668 -404.7314 L
1300.2002 -382.3691 L
1300.2002 -427.0947 L
f
/BBAccumRotation (1.570796) XT
U
u
*u
326.7305 -636.9897 m
323.5132 -636.9897 L
319.959 -636.9897 317.0781 -634.1089 317.0781 -630.5547 c
317.0781 -627.0005 319.959 -624.1196 323.5132 -624.1196 C
326.7305 -624.1196 L
330.2847 -624.1196 333.1655 -627.0005 333.1655 -630.5547 c
333.1655 -634.1089 330.2847 -636.9897 326.7305 -636.9897 C
326.7305 -636.9897 L
f
300.9902 -636.9897 m
297.7729 -636.9897 L
294.2188 -636.9897 291.3379 -634.1089 291.3379 -630.5547 c
291.3379 -627.0005 294.2188 -624.1196 297.7729 -624.1196 C
300.9902 -624.1196 L
304.5444 -624.1196 307.4253 -627.0005 307.4253 -630.5547 c
307.4253 -634.1089 304.5444 -636.9897 300.9902 -636.9897 C
300.9902 -636.9897 L
f
275.25 -636.9897 m
272.0327 -636.9897 L
268.4785 -636.9897 265.5977 -634.1089 265.5977 -630.5547 c
265.5977 -627.0005 268.4785 -624.1196 272.0327 -624.1196 C
275.25 -624.1196 L
278.8042 -624.1196 281.6851 -627.0005 281.6851 -630.5547 c
281.6851 -634.1089 278.8042 -636.9897 275.25 -636.9897 C
275.25 -636.9897 L
f
249.5103 -636.9897 m
246.2925 -636.9897 L
242.7383 -636.9897 239.8574 -634.1089 239.8574 -630.5547 c
239.8574 -627.0005 242.7383 -624.1196 246.2925 -624.1196 C
249.5103 -624.1196 L
253.0645 -624.1196 255.9453 -627.0005 255.9453 -630.5547 c
255.9453 -634.1089 253.0645 -636.9897 249.5103 -636.9897 C
249.5103 -636.9897 L
f
223.77 -636.9897 m
220.5522 -636.9897 L
216.998 -636.9897 214.1172 -634.1089 214.1172 -630.5547 c
214.1172 -627.0005 216.998 -624.1196 220.5522 -624.1196 C
223.77 -624.1196 L
227.3242 -624.1196 230.2051 -627.0005 230.2051 -630.5547 c
230.2051 -634.1089 227.3242 -636.9897 223.77 -636.9897 C
223.77 -636.9897 L
f
198.0298 -636.9897 m
194.8125 -636.9897 L
191.2583 -636.9897 188.3774 -634.1089 188.3774 -630.5547 c
188.3774 -627.0005 191.2583 -624.1196 194.8125 -624.1196 C
198.0298 -624.1196 L
201.584 -624.1196 204.4648 -627.0005 204.4648 -630.5547 c
204.4648 -634.1089 201.584 -636.9897 198.0298 -636.9897 C
198.0298 -636.9897 L
f
172.2896 -636.9897 m
169.0723 -636.9897 L
165.5181 -636.9897 162.6372 -634.1089 162.6372 -630.5547 c
162.6372 -627.0005 165.5181 -624.1196 169.0723 -624.1196 C
172.2896 -624.1196 L
175.8438 -624.1196 178.7246 -627.0005 178.7246 -630.5547 c
178.7246 -634.1089 175.8438 -636.9897 172.2896 -636.9897 C
172.2896 -636.9897 L
f
146.5498 -636.9897 m
143.332 -636.9897 L
139.7778 -636.9897 136.897 -634.1089 136.897 -630.5547 c
136.897 -627.0005 139.7778 -624.1196 143.332 -624.1196 C
146.5498 -624.1196 L
150.104 -624.1196 152.9849 -627.0005 152.9849 -630.5547 c
152.9849 -634.1089 150.104 -636.9897 146.5498 -636.9897 C
146.5498 -636.9897 L
f
120.8096 -636.9897 m
117.5918 -636.9897 L
114.0376 -636.9897 111.1567 -634.1089 111.1567 -630.5547 c
111.1567 -627.0005 114.0376 -624.1196 117.5918 -624.1196 C
120.8096 -624.1196 L
124.3638 -624.1196 127.2446 -627.0005 127.2446 -630.5547 c
127.2446 -634.1089 124.3638 -636.9897 120.8096 -636.9897 C
120.8096 -636.9897 L
f
95.0693 -636.9897 m
91.8521 -636.9897 L
88.2979 -636.9897 85.417 -634.1089 85.417 -630.5547 c
85.417 -627.0005 88.2979 -624.1196 91.8521 -624.1196 C
95.0693 -624.1196 L
98.6235 -624.1196 101.5044 -627.0005 101.5044 -630.5547 c
101.5044 -634.1089 98.6235 -636.9897 95.0693 -636.9897 C
95.0693 -636.9897 L
f
69.3291 -636.9897 m
66.1118 -636.9897 L
62.5576 -636.9897 59.6768 -634.1089 59.6768 -630.5547 c
59.6768 -627.0005 62.5576 -624.1196 66.1118 -624.1196 C
69.3291 -624.1196 L
72.8833 -624.1196 75.7642 -627.0005 75.7642 -630.5547 c
75.7642 -634.1089 72.8833 -636.9897 69.3291 -636.9897 C
69.3291 -636.9897 L
f
43.5894 -636.9897 m
40.3716 -636.9897 L
36.8174 -636.9897 33.9365 -634.1089 33.9365 -630.5547 c
33.9365 -627.0005 36.8174 -624.1196 40.3716 -624.1196 C
43.5894 -624.1196 L
47.1436 -624.1196 50.0244 -627.0005 50.0244 -630.5547 c
50.0244 -634.1089 47.1436 -636.9897 43.5894 -636.9897 C
43.5894 -636.9897 L
f
17.8491 -636.9897 m
16.4453 -636.9897 L
12.8911 -636.9897 10.0103 -634.1089 10.0103 -630.5547 c
10.0103 -627.0005 12.8911 -624.1196 16.4453 -624.1196 C
17.8491 -624.1196 L
21.4033 -624.1196 24.2842 -627.0005 24.2842 -630.5547 c
24.2842 -634.1089 21.4033 -636.9897 17.8491 -636.9897 C
17.8491 -636.9897 L
f
*U
338.1133 -652.918 m
376.8467 -630.5547 L
338.1133 -608.1924 L
338.1133 -652.918 L
f
/BBAccumRotation (1.570796) XT
U
u
*u
626.1279 -2019.188 m
622.6543 -2019.188 L
618.8174 -2019.188 615.707 -2016.0776 615.707 -2012.2407 c
615.707 -2008.4038 618.8174 -2005.2935 622.6543 -2005.2935 C
626.1279 -2005.2935 L
629.9648 -2005.2935 633.0752 -2008.4038 633.0752 -2012.2407 c
633.0752 -2016.0776 629.9648 -2019.188 626.1279 -2019.188 C
626.1279 -2019.188 L
f
598.3398 -2019.188 m
594.8662 -2019.188 L
591.0293 -2019.188 587.9189 -2016.0776 587.9189 -2012.2407 c
587.9189 -2008.4038 591.0293 -2005.2935 594.8662 -2005.2935 C
598.3398 -2005.2935 L
602.1768 -2005.2935 605.2871 -2008.4038 605.2871 -2012.2407 c
605.2871 -2016.0776 602.1768 -2019.188 598.3398 -2019.188 C
598.3398 -2019.188 L
f
570.5513 -2019.188 m
567.0781 -2019.188 L
563.2412 -2019.188 560.1309 -2016.0776 560.1309 -2012.2407 c
560.1309 -2008.4038 563.2412 -2005.2935 567.0781 -2005.2935 C
570.5513 -2005.2935 L
574.3882 -2005.2935 577.4985 -2008.4038 577.4985 -2012.2407 c
577.4985 -2016.0776 574.3882 -2019.188 570.5513 -2019.188 C
570.5513 -2019.188 L
f
542.7632 -2019.188 m
539.2896 -2019.188 L
535.4526 -2019.188 532.3423 -2016.0776 532.3423 -2012.2407 c
532.3423 -2008.4038 535.4526 -2005.2935 539.2896 -2005.2935 C
542.7632 -2005.2935 L
546.6001 -2005.2935 549.7104 -2008.4038 549.7104 -2012.2407 c
549.7104 -2016.0776 546.6001 -2019.188 542.7632 -2019.188 C
542.7632 -2019.188 L
f
514.9751 -2019.188 m
511.5015 -2019.188 L
507.6646 -2019.188 504.5542 -2016.0776 504.5542 -2012.2407 c
504.5542 -2008.4038 507.6646 -2005.2935 511.5015 -2005.2935 C
514.9751 -2005.2935 L
518.812 -2005.2935 521.9224 -2008.4038 521.9224 -2012.2407 c
521.9224 -2016.0776 518.812 -2019.188 514.9751 -2019.188 C
514.9751 -2019.188 L
f
487.187 -2019.188 m
483.7134 -2019.188 L
479.8765 -2019.188 476.7661 -2016.0776 476.7661 -2012.2407 c
476.7661 -2008.4038 479.8765 -2005.2935 483.7134 -2005.2935 C
487.187 -2005.2935 L
491.0239 -2005.2935 494.1343 -2008.4038 494.1343 -2012.2407 c
494.1343 -2016.0776 491.0239 -2019.188 487.187 -2019.188 C
487.187 -2019.188 L
f
459.3984 -2019.188 m
455.9248 -2019.188 L
452.0879 -2019.188 448.9775 -2016.0776 448.9775 -2012.2407 c
448.9775 -2008.4038 452.0879 -2005.2935 455.9248 -2005.2935 C
459.3984 -2005.2935 L
463.2354 -2005.2935 466.3457 -2008.4038 466.3457 -2012.2407 c
466.3457 -2016.0776 463.2354 -2019.188 459.3984 -2019.188 C
459.3984 -2019.188 L
f
431.6104 -2019.188 m
428.1367 -2019.188 L
424.2998 -2019.188 421.1895 -2016.0776 421.1895 -2012.2407 c
421.1895 -2008.4038 424.2998 -2005.2935 428.1367 -2005.2935 C
431.6104 -2005.2935 L
435.4473 -2005.2935 438.5576 -2008.4038 438.5576 -2012.2407 c
438.5576 -2016.0776 435.4473 -2019.188 431.6104 -2019.188 C
431.6104 -2019.188 L
f
403.8223 -2019.188 m
400.3486 -2019.188 L
396.5117 -2019.188 393.4014 -2016.0776 393.4014 -2012.2407 c
393.4014 -2008.4038 396.5117 -2005.2935 400.3486 -2005.2935 C
403.8223 -2005.2935 L
407.6592 -2005.2935 410.7695 -2008.4038 410.7695 -2012.2407 c
410.7695 -2016.0776 407.6592 -2019.188 403.8223 -2019.188 C
403.8223 -2019.188 L
f
376.0337 -2019.188 m
372.5605 -2019.188 L
368.7236 -2019.188 365.6133 -2016.0776 365.6133 -2012.2407 c
365.6133 -2008.4038 368.7236 -2005.2935 372.5605 -2005.2935 C
376.0337 -2005.2935 L
379.8706 -2005.2935 382.981 -2008.4038 382.981 -2012.2407 c
382.981 -2016.0776 379.8706 -2019.188 376.0337 -2019.188 C
376.0337 -2019.188 L
f
348.2456 -2019.188 m
344.772 -2019.188 L
340.9351 -2019.188 337.8247 -2016.0776 337.8247 -2012.2407 c
337.8247 -2008.4038 340.9351 -2005.2935 344.772 -2005.2935 C
348.2456 -2005.2935 L
352.0825 -2005.2935 355.1929 -2008.4038 355.1929 -2012.2407 c
355.1929 -2016.0776 352.0825 -2019.188 348.2456 -2019.188 C
348.2456 -2019.188 L
f
320.4575 -2019.188 m
316.9839 -2019.188 L
313.147 -2019.188 310.0366 -2016.0776 310.0366 -2012.2407 c
310.0366 -2008.4038 313.147 -2005.2935 316.9839 -2005.2935 C
320.4575 -2005.2935 L
324.2944 -2005.2935 327.4048 -2008.4038 327.4048 -2012.2407 c
327.4048 -2016.0776 324.2944 -2019.188 320.4575 -2019.188 C
320.4575 -2019.188 L
f
292.6689 -2019.188 m
289.1958 -2019.188 L
285.3589 -2019.188 282.2485 -2016.0776 282.2485 -2012.2407 c
282.2485 -2008.4038 285.3589 -2005.2935 289.1958 -2005.2935 C
292.6689 -2005.2935 L
296.5059 -2005.2935 299.6162 -2008.4038 299.6162 -2012.2407 c
299.6162 -2016.0776 296.5059 -2019.188 292.6689 -2019.188 C
292.6689 -2019.188 L
f
264.8809 -2019.188 m
261.4072 -2019.188 L
257.5703 -2019.188 254.46 -2016.0776 254.46 -2012.2407 c
254.46 -2008.4038 257.5703 -2005.2935 261.4072 -2005.2935 C
264.8809 -2005.2935 L
268.7178 -2005.2935 271.8281 -2008.4038 271.8281 -2012.2407 c
271.8281 -2016.0776 268.7178 -2019.188 264.8809 -2019.188 C
264.8809 -2019.188 L
f
237.0928 -2019.188 m
233.6191 -2019.188 L
229.7822 -2019.188 226.6719 -2016.0776 226.6719 -2012.2407 c
226.6719 -2008.4038 229.7822 -2005.2935 233.6191 -2005.2935 C
237.0928 -2005.2935 L
240.9297 -2005.2935 244.04 -2008.4038 244.04 -2012.2407 c
244.04 -2016.0776 240.9297 -2019.188 237.0928 -2019.188 C
237.0928 -2019.188 L
f
209.3047 -2019.188 m
205.8311 -2019.188 L
201.9941 -2019.188 198.8838 -2016.0776 198.8838 -2012.2407 c
198.8838 -2008.4038 201.9941 -2005.2935 205.8311 -2005.2935 C
209.3047 -2005.2935 L
213.1416 -2005.2935 216.252 -2008.4038 216.252 -2012.2407 c
216.252 -2016.0776 213.1416 -2019.188 209.3047 -2019.188 C
209.3047 -2019.188 L
f
181.5161 -2019.188 m
178.043 -2019.188 L
174.2061 -2019.188 171.0957 -2016.0776 171.0957 -2012.2407 c
171.0957 -2008.4038 174.2061 -2005.2935 178.043 -2005.2935 C
181.5161 -2005.2935 L
185.353 -2005.2935 188.4634 -2008.4038 188.4634 -2012.2407 c
188.4634 -2016.0776 185.353 -2019.188 181.5161 -2019.188 C
181.5161 -2019.188 L
f
153.728 -2019.188 m
150.2544 -2019.188 L
146.4175 -2019.188 143.3071 -2016.0776 143.3071 -2012.2407 c
143.3071 -2008.4038 146.4175 -2005.2935 150.2544 -2005.2935 C
153.728 -2005.2935 L
157.5649 -2005.2935 160.6753 -2008.4038 160.6753 -2012.2407 c
160.6753 -2016.0776 157.5649 -2019.188 153.728 -2019.188 C
153.728 -2019.188 L
f
125.9399 -2019.188 m
122.4663 -2019.188 L
118.6294 -2019.188 115.519 -2016.0776 115.519 -2012.2407 c
115.519 -2008.4038 118.6294 -2005.2935 122.4663 -2005.2935 C
125.9399 -2005.2935 L
129.7769 -2005.2935 132.8872 -2008.4038 132.8872 -2012.2407 c
132.8872 -2016.0776 129.7769 -2019.188 125.9399 -2019.188 C
125.9399 -2019.188 L
f
98.1514 -2019.188 m
94.6782 -2019.188 L
90.8413 -2019.188 87.731 -2016.0776 87.731 -2012.2407 c
87.731 -2008.4038 90.8413 -2005.2935 94.6782 -2005.2935 C
98.1514 -2005.2935 L
101.9883 -2005.2935 105.0986 -2008.4038 105.0986 -2012.2407 c
105.0986 -2016.0776 101.9883 -2019.188 98.1514 -2019.188 C
98.1514 -2019.188 L
f
70.3633 -2019.188 m
66.8896 -2019.188 L
63.0527 -2019.188 59.9424 -2016.0776 59.9424 -2012.2407 c
59.9424 -2008.4038 63.0527 -2005.2935 66.8896 -2005.2935 C
70.3633 -2005.2935 L
74.2002 -2005.2935 77.3105 -2008.4038 77.3105 -2012.2407 c
77.3105 -2016.0776 74.2002 -2019.188 70.3633 -2019.188 C
70.3633 -2019.188 L
f
42.5752 -2019.188 m
39.1016 -2019.188 L
35.2646 -2019.188 32.1543 -2016.0776 32.1543 -2012.2407 c
32.1543 -2008.4038 35.2646 -2005.2935 39.1016 -2005.2935 C
42.5752 -2005.2935 L
46.4121 -2005.2935 49.5225 -2008.4038 49.5225 -2012.2407 c
49.5225 -2016.0776 46.4121 -2019.188 42.5752 -2019.188 C
42.5752 -2019.188 L
f
*U
637.5107 -2034.604 m
676.2441 -2012.2407 L
637.5107 -1989.8794 L
637.5107 -2034.604 L
f
/BBAccumRotation (1.570796) XT
U
u
*u
0.681208 0.121279 0.183505 0.000031 0.258824 0.682353 0.776471 (R=66 G=174 B=198) 0 1 Xk
1466.8164 -522.3965 m
1460.5869 -522.3965 L
1453.7051 -522.3965 1448.127 -516.8179 1448.127 -509.9365 c
1448.127 -503.0552 1453.7051 -497.4766 1460.5869 -497.4766 C
1466.8164 -497.4766 L
1473.6982 -497.4766 1479.2764 -503.0552 1479.2764 -509.9365 c
1479.2764 -516.8179 1473.6982 -522.3965 1466.8164 -522.3965 C
1466.8164 -522.3965 L
f
1416.9766 -522.3965 m
1410.7461 -522.3965 L
1403.8643 -522.3965 1398.2861 -516.8179 1398.2861 -509.9365 c
1398.2861 -503.0552 1403.8643 -497.4766 1410.7461 -497.4766 C
1416.9766 -497.4766 L
1423.8584 -497.4766 1429.4365 -503.0552 1429.4365 -509.9365 c
1429.4365 -516.8179 1423.8584 -522.3965 1416.9766 -522.3965 C
1416.9766 -522.3965 L
f
1367.1367 -522.3965 m
1360.9063 -522.3965 L
1354.0244 -522.3965 1348.4463 -516.8179 1348.4463 -509.9365 c
1348.4463 -503.0552 1354.0244 -497.4766 1360.9063 -497.4766 C
1367.1367 -497.4766 L
1374.0186 -497.4766 1379.5967 -503.0552 1379.5967 -509.9365 c
1379.5967 -516.8179 1374.0186 -522.3965 1367.1367 -522.3965 C
1367.1367 -522.3965 L
f
1317.2969 -522.3965 m
1311.0669 -522.3965 L
1304.1855 -522.3965 1298.6069 -516.8179 1298.6069 -509.9365 c
1298.6069 -503.0552 1304.1855 -497.4766 1311.0669 -497.4766 C
1317.2969 -497.4766 L
1324.1782 -497.4766 1329.7568 -503.0552 1329.7568 -509.9365 c
1329.7568 -516.8179 1324.1782 -522.3965 1317.2969 -522.3965 C
1317.2969 -522.3965 L
f
1267.457 -522.3965 m
1261.2271 -522.3965 L
1254.3457 -522.3965 1248.7671 -516.8179 1248.7671 -509.9365 c
1248.7671 -503.0552 1254.3457 -497.4766 1261.2271 -497.4766 C
1267.457 -497.4766 L
1274.3384 -497.4766 1279.917 -503.0552 1279.917 -509.9365 c
1279.917 -516.8179 1274.3384 -522.3965 1267.457 -522.3965 C
1267.457 -522.3965 L
f
1217.6172 -522.3965 m
1211.3872 -522.3965 L
1204.5059 -522.3965 1198.9272 -516.8179 1198.9272 -509.9365 c
1198.9272 -503.0552 1204.5059 -497.4766 1211.3872 -497.4766 C
1217.6172 -497.4766 L
1224.4985 -497.4766 1230.0771 -503.0552 1230.0771 -509.9365 c
1230.0771 -516.8179 1224.4985 -522.3965 1217.6172 -522.3965 C
1217.6172 -522.3965 L
f
1167.7773 -522.3965 m
1161.5474 -522.3965 L
1154.666 -522.3965 1149.0874 -516.8179 1149.0874 -509.9365 c
1149.0874 -503.0552 1154.666 -497.4766 1161.5474 -497.4766 C
1167.7773 -497.4766 L
1174.6587 -497.4766 1180.2373 -503.0552 1180.2373 -509.9365 c
1180.2373 -516.8179 1174.6587 -522.3965 1167.7773 -522.3965 C
1167.7773 -522.3965 L
f
1117.9375 -522.3965 m
1111.707 -522.3965 L
1104.8257 -522.3965 1099.2471 -516.8179 1099.2471 -509.9365 c
1099.2471 -503.0552 1104.8257 -497.4766 1111.707 -497.4766 C
1117.9375 -497.4766 L
1124.8188 -497.4766 1130.3975 -503.0552 1130.3975 -509.9365 c
1130.3975 -516.8179 1124.8188 -522.3965 1117.9375 -522.3965 C
1117.9375 -522.3965 L
f
1068.0972 -522.3965 m
1061.8672 -522.3965 L
1054.9858 -522.3965 1049.4072 -516.8179 1049.4072 -509.9365 c
1049.4072 -503.0552 1054.9858 -497.4766 1061.8672 -497.4766 C
1068.0972 -497.4766 L
1074.9785 -497.4766 1080.5571 -503.0552 1080.5571 -509.9365 c
1080.5571 -516.8179 1074.9785 -522.3965 1068.0972 -522.3965 C
1068.0972 -522.3965 L
f
1018.2573 -522.3965 m
1012.0273 -522.3965 L
1005.146 -522.3965 999.5674 -516.8179 999.5674 -509.9365 c
999.5674 -503.0552 1005.146 -497.4766 1012.0273 -497.4766 C
1018.2573 -497.4766 L
1025.1387 -497.4766 1030.7173 -503.0552 1030.7173 -509.9365 c
1030.7173 -516.8179 1025.1387 -522.3965 1018.2573 -522.3965 C
1018.2573 -522.3965 L
f
968.4175 -522.3965 m
962.1875 -522.3965 L
955.3062 -522.3965 949.7275 -516.8179 949.7275 -509.9365 c
949.7275 -503.0552 955.3062 -497.4766 962.1875 -497.4766 C
968.4175 -497.4766 L
975.2988 -497.4766 980.8774 -503.0552 980.8774 -509.9365 c
980.8774 -516.8179 975.2988 -522.3965 968.4175 -522.3965 C
968.4175 -522.3965 L
f
918.5776 -522.3965 m
912.3477 -522.3965 L
905.4663 -522.3965 899.8877 -516.8179 899.8877 -509.9365 c
899.8877 -503.0552 905.4663 -497.4766 912.3477 -497.4766 C
918.5776 -497.4766 L
925.459 -497.4766 931.0376 -503.0552 931.0376 -509.9365 c
931.0376 -516.8179 925.459 -522.3965 918.5776 -522.3965 C
918.5776 -522.3965 L
f
*U
1488.8555 -553.2373 m
1563.8555 -509.9365 L
1488.8555 -466.6357 L
1488.8555 -553.2373 L
f
/BBAccumRotation (1.570796) XT
U
u
*u
1611.4668 -2343.687 m
1605.2363 -2343.687 L
1598.3545 -2343.687 1592.7764 -2338.1089 1592.7764 -2331.2271 c
1592.7764 -2324.3452 1598.3545 -2318.7671 1605.2363 -2318.7671 C
1611.4668 -2318.7671 L
1618.3486 -2318.7671 1623.9268 -2324.3452 1623.9268 -2331.2271 c
1623.9268 -2338.1089 1618.3486 -2343.687 1611.4668 -2343.687 C
1611.4668 -2343.687 L
f
1561.627 -2343.687 m
1555.3965 -2343.687 L
1548.5146 -2343.687 1542.9365 -2338.1089 1542.9365 -2331.2271 c
1542.9365 -2324.3452 1548.5146 -2318.7671 1555.3965 -2318.7671 C
1561.627 -2318.7671 L
1568.5088 -2318.7671 1574.0869 -2324.3452 1574.0869 -2331.2271 c
1574.0869 -2338.1089 1568.5088 -2343.687 1561.627 -2343.687 C
1561.627 -2343.687 L
f
1511.7871 -2343.687 m
1505.5566 -2343.687 L
1498.6748 -2343.687 1493.0967 -2338.1089 1493.0967 -2331.2271 c
1493.0967 -2324.3452 1498.6748 -2318.7671 1505.5566 -2318.7671 C
1511.7871 -2318.7671 L
1518.6689 -2318.7671 1524.2471 -2324.3452 1524.2471 -2331.2271 c
1524.2471 -2338.1089 1518.6689 -2343.687 1511.7871 -2343.687 C
1511.7871 -2343.687 L
f
1461.9473 -2343.687 m
1455.7168 -2343.687 L
1448.835 -2343.687 1443.2568 -2338.1089 1443.2568 -2331.2271 c
1443.2568 -2324.3452 1448.835 -2318.7671 1455.7168 -2318.7671 C
1461.9473 -2318.7671 L
1468.8291 -2318.7671 1474.4072 -2324.3452 1474.4072 -2331.2271 c
1474.4072 -2338.1089 1468.8291 -2343.687 1461.9473 -2343.687 C
1461.9473 -2343.687 L
f
1412.1074 -2343.687 m
1405.877 -2343.687 L
1398.9951 -2343.687 1393.417 -2338.1089 1393.417 -2331.2271 c
1393.417 -2324.3452 1398.9951 -2318.7671 1405.877 -2318.7671 C
1412.1074 -2318.7671 L
1418.9893 -2318.7671 1424.5674 -2324.3452 1424.5674 -2331.2271 c
1424.5674 -2338.1089 1418.9893 -2343.687 1412.1074 -2343.687 C
1412.1074 -2343.687 L
f
1362.2676 -2343.687 m
1356.0371 -2343.687 L
1349.1553 -2343.687 1343.5771 -2338.1089 1343.5771 -2331.2271 c
1343.5771 -2324.3452 1349.1553 -2318.7671 1356.0371 -2318.7671 C
1362.2676 -2318.7671 L
1369.1494 -2318.7671 1374.7275 -2324.3452 1374.7275 -2331.2271 c
1374.7275 -2338.1089 1369.1494 -2343.687 1362.2676 -2343.687 C
1362.2676 -2343.687 L
f
1312.4272 -2343.687 m
1306.1973 -2343.687 L
1299.3159 -2343.687 1293.7373 -2338.1089 1293.7373 -2331.2271 c
1293.7373 -2324.3452 1299.3159 -2318.7671 1306.1973 -2318.7671 C
1312.4272 -2318.7671 L
1319.3086 -2318.7671 1324.8872 -2324.3452 1324.8872 -2331.2271 c
1324.8872 -2338.1089 1319.3086 -2343.687 1312.4272 -2343.687 C
1312.4272 -2343.687 L
f
1262.5874 -2343.687 m
1256.3574 -2343.687 L
1249.4761 -2343.687 1243.8975 -2338.1089 1243.8975 -2331.2271 c
1243.8975 -2324.3452 1249.4761 -2318.7671 1256.3574 -2318.7671 C
1262.5874 -2318.7671 L
1269.4688 -2318.7671 1275.0474 -2324.3452 1275.0474 -2331.2271 c
1275.0474 -2338.1089 1269.4688 -2343.687 1262.5874 -2343.687 C
1262.5874 -2343.687 L
f
*U
1233.3193 -2374.5278 m
1158.3193 -2331.2271 L
1233.3193 -2287.9263 L
1233.3193 -2374.5278 L
f
/BBAccumRotation (1.570796) XT
U
u
*u
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1123.085 -1459.9536 m
1115.7544 -1459.9536 L
1107.6572 -1459.9536 1101.0938 -1453.3892 1101.0938 -1445.2925 c
1101.0938 -1437.1958 1107.6572 -1430.6313 1115.7544 -1430.6313 C
1123.085 -1430.6313 L
1131.1821 -1430.6313 1137.7456 -1437.1958 1137.7456 -1445.2925 c
1137.7456 -1453.3892 1131.1821 -1459.9536 1123.085 -1459.9536 C
1123.085 -1459.9536 L
f
1064.4419 -1459.9536 m
1057.1113 -1459.9536 L
1049.0142 -1459.9536 1042.4507 -1453.3892 1042.4507 -1445.2925 c
1042.4507 -1437.1958 1049.0142 -1430.6313 1057.1113 -1430.6313 C
1064.4419 -1430.6313 L
1072.5391 -1430.6313 1079.1025 -1437.1958 1079.1025 -1445.2925 c
1079.1025 -1453.3892 1072.5391 -1459.9536 1064.4419 -1459.9536 C
1064.4419 -1459.9536 L
f
1005.7983 -1459.9536 m
998.4678 -1459.9536 L
990.3706 -1459.9536 983.8071 -1453.3892 983.8071 -1445.2925 c
983.8071 -1437.1958 990.3706 -1430.6313 998.4678 -1430.6313 C
1005.7983 -1430.6313 L
1013.8955 -1430.6313 1020.459 -1437.1958 1020.459 -1445.2925 c
1020.459 -1453.3892 1013.8955 -1459.9536 1005.7983 -1459.9536 C
1005.7983 -1459.9536 L
f
947.1553 -1459.9536 m
939.8247 -1459.9536 L
931.7275 -1459.9536 925.1641 -1453.3892 925.1641 -1445.2925 c
925.1641 -1437.1958 931.7275 -1430.6313 939.8247 -1430.6313 C
947.1553 -1430.6313 L
955.2524 -1430.6313 961.8159 -1437.1958 961.8159 -1445.2925 c
961.8159 -1453.3892 955.2524 -1459.9536 947.1553 -1459.9536 C
947.1553 -1459.9536 L
f
888.5117 -1459.9536 m
881.1812 -1459.9536 L
873.084 -1459.9536 866.5205 -1453.3892 866.5205 -1445.2925 c
866.5205 -1437.1958 873.084 -1430.6313 881.1812 -1430.6313 C
888.5117 -1430.6313 L
896.6089 -1430.6313 903.1724 -1437.1958 903.1724 -1445.2925 c
903.1724 -1453.3892 896.6089 -1459.9536 888.5117 -1459.9536 C
888.5117 -1459.9536 L
f
829.8687 -1459.9536 m
822.5381 -1459.9536 L
814.4409 -1459.9536 807.8774 -1453.3892 807.8774 -1445.2925 c
807.8774 -1437.1958 814.4409 -1430.6313 822.5381 -1430.6313 C
829.8687 -1430.6313 L
837.9653 -1430.6313 844.5293 -1437.1958 844.5293 -1445.2925 c
844.5293 -1453.3892 837.9653 -1459.9536 829.8687 -1459.9536 C
829.8687 -1459.9536 L
f
771.2251 -1459.9536 m
763.8945 -1459.9536 L
755.7974 -1459.9536 749.2339 -1453.3892 749.2339 -1445.2925 c
749.2339 -1437.1958 755.7974 -1430.6313 763.8945 -1430.6313 C
771.2251 -1430.6313 L
779.3223 -1430.6313 785.8857 -1437.1958 785.8857 -1445.2925 c
785.8857 -1453.3892 779.3223 -1459.9536 771.2251 -1459.9536 C
771.2251 -1459.9536 L
f
*U
1156.0146 -1496.2427 m
1244.2637 -1445.2925 L
1156.0146 -1394.3452 L
1156.0146 -1496.2427 L
f
/BBAccumRotation (1.570796) XT
U
u
*u
2764.7451 -1545.9575 m
2759.2803 -1545.9575 L
2753.2441 -1545.9575 2748.3516 -1541.0649 2748.3516 -1535.0288 c
2748.3516 -1528.9927 2753.2441 -1524.1001 2759.2803 -1524.1001 C
2764.7451 -1524.1001 L
2770.7813 -1524.1001 2775.6738 -1528.9927 2775.6738 -1535.0288 c
2775.6738 -1541.0649 2770.7813 -1545.9575 2764.7451 -1545.9575 C
2764.7451 -1545.9575 L
f
2721.0303 -1545.9575 m
2715.5654 -1545.9575 L
2709.5293 -1545.9575 2704.6367 -1541.0649 2704.6367 -1535.0288 c
2704.6367 -1528.9927 2709.5293 -1524.1001 2715.5654 -1524.1001 C
2721.0303 -1524.1001 L
2727.0664 -1524.1001 2731.959 -1528.9927 2731.959 -1535.0288 c
2731.959 -1541.0649 2727.0664 -1545.9575 2721.0303 -1545.9575 C
2721.0303 -1545.9575 L
f
2677.3154 -1545.9575 m
2671.8516 -1545.9575 L
2665.8154 -1545.9575 2660.9229 -1541.0649 2660.9229 -1535.0288 c
2660.9229 -1528.9927 2665.8154 -1524.1001 2671.8516 -1524.1001 C
2677.3154 -1524.1001 L
2683.3516 -1524.1001 2688.2441 -1528.9927 2688.2441 -1535.0288 c
2688.2441 -1541.0649 2683.3516 -1545.9575 2677.3154 -1545.9575 C
2677.3154 -1545.9575 L
f
2633.6006 -1545.9575 m
2628.1367 -1545.9575 L
2622.1006 -1545.9575 2617.208 -1541.0649 2617.208 -1535.0288 c
2617.208 -1528.9927 2622.1006 -1524.1001 2628.1367 -1524.1001 C
2633.6006 -1524.1001 L
2639.6367 -1524.1001 2644.5293 -1528.9927 2644.5293 -1535.0288 c
2644.5293 -1541.0649 2639.6367 -1545.9575 2633.6006 -1545.9575 C
2633.6006 -1545.9575 L
f
2589.8857 -1545.9575 m
2584.4219 -1545.9575 L
2578.3857 -1545.9575 2573.4932 -1541.0649 2573.4932 -1535.0288 c
2573.4932 -1528.9927 2578.3857 -1524.1001 2584.4219 -1524.1001 C
2589.8857 -1524.1001 L
2595.9219 -1524.1001 2600.8145 -1528.9927 2600.8145 -1535.0288 c
2600.8145 -1541.0649 2595.9219 -1545.9575 2589.8857 -1545.9575 C
2589.8857 -1545.9575 L
f
2546.1709 -1545.9575 m
2540.707 -1545.9575 L
2534.6709 -1545.9575 2529.7783 -1541.0649 2529.7783 -1535.0288 c
2529.7783 -1528.9927 2534.6709 -1524.1001 2540.707 -1524.1001 C
2546.1709 -1524.1001 L
2552.207 -1524.1001 2557.0996 -1528.9927 2557.0996 -1535.0288 c
2557.0996 -1541.0649 2552.207 -1545.9575 2546.1709 -1545.9575 C
2546.1709 -1545.9575 L
f
2502.4561 -1545.9575 m
2496.9922 -1545.9575 L
2490.9561 -1545.9575 2486.0635 -1541.0649 2486.0635 -1535.0288 c
2486.0635 -1528.9927 2490.9561 -1524.1001 2496.9922 -1524.1001 C
2502.4561 -1524.1001 L
2508.4922 -1524.1001 2513.3848 -1528.9927 2513.3848 -1535.0288 c
2513.3848 -1541.0649 2508.4922 -1545.9575 2502.4561 -1545.9575 C
2502.4561 -1545.9575 L
f
2458.7422 -1545.9575 m
2453.2773 -1545.9575 L
2447.2412 -1545.9575 2442.3486 -1541.0649 2442.3486 -1535.0288 c
2442.3486 -1528.9927 2447.2412 -1524.1001 2453.2773 -1524.1001 C
2458.7422 -1524.1001 L
2464.7783 -1524.1001 2469.6709 -1528.9927 2469.6709 -1535.0288 c
2469.6709 -1541.0649 2464.7783 -1545.9575 2458.7422 -1545.9575 C
2458.7422 -1545.9575 L
f
2415.0273 -1545.9575 m
2409.5625 -1545.9575 L
2403.5264 -1545.9575 2398.6338 -1541.0649 2398.6338 -1535.0288 c
2398.6338 -1528.9927 2403.5264 -1524.1001 2409.5625 -1524.1001 C
2415.0273 -1524.1001 L
2421.0635 -1524.1001 2425.9561 -1528.9927 2425.9561 -1535.0288 c
2425.9561 -1541.0649 2421.0635 -1545.9575 2415.0273 -1545.9575 C
2415.0273 -1545.9575 L
f
2371.3125 -1545.9575 m
2365.8477 -1545.9575 L
2359.8115 -1545.9575 2354.9189 -1541.0649 2354.9189 -1535.0288 c
2354.9189 -1528.9927 2359.8115 -1524.1001 2365.8477 -1524.1001 C
2371.3125 -1524.1001 L
2377.3486 -1524.1001 2382.2412 -1528.9927 2382.2412 -1535.0288 c
2382.2412 -1541.0649 2377.3486 -1545.9575 2371.3125 -1545.9575 C
2371.3125 -1545.9575 L
f
2327.5977 -1545.9575 m
2322.1328 -1545.9575 L
2316.0967 -1545.9575 2311.2041 -1541.0649 2311.2041 -1535.0288 c
2311.2041 -1528.9927 2316.0967 -1524.1001 2322.1328 -1524.1001 C
2327.5977 -1524.1001 L
2333.6338 -1524.1001 2338.5264 -1528.9927 2338.5264 -1535.0288 c
2338.5264 -1541.0649 2333.6338 -1545.9575 2327.5977 -1545.9575 C
2327.5977 -1545.9575 L
f
2283.8828 -1545.9575 m
2278.418 -1545.9575 L
2272.3818 -1545.9575 2267.4893 -1541.0649 2267.4893 -1535.0288 c
2267.4893 -1528.9927 2272.3818 -1524.1001 2278.418 -1524.1001 C
2283.8828 -1524.1001 L
2289.9189 -1524.1001 2294.8115 -1528.9927 2294.8115 -1535.0288 c
2294.8115 -1541.0649 2289.9189 -1545.9575 2283.8828 -1545.9575 C
2283.8828 -1545.9575 L
f
2240.168 -1545.9575 m
2234.7041 -1545.9575 L
2228.668 -1545.9575 2223.7754 -1541.0649 2223.7754 -1535.0288 c
2223.7754 -1528.9927 2228.668 -1524.1001 2234.7041 -1524.1001 C
2240.168 -1524.1001 L
2246.2041 -1524.1001 2251.0967 -1528.9927 2251.0967 -1535.0288 c
2251.0967 -1541.0649 2246.2041 -1545.9575 2240.168 -1545.9575 C
2240.168 -1545.9575 L
f
2196.4531 -1545.9575 m
2190.9893 -1545.9575 L
2184.9531 -1545.9575 2180.0605 -1541.0649 2180.0605 -1535.0288 c
2180.0605 -1528.9927 2184.9531 -1524.1001 2190.9893 -1524.1001 C
2196.4531 -1524.1001 L
2202.4893 -1524.1001 2207.3818 -1528.9927 2207.3818 -1535.0288 c
2207.3818 -1541.0649 2202.4893 -1545.9575 2196.4531 -1545.9575 C
2196.4531 -1545.9575 L
f
2152.7383 -1545.9575 m
2147.2744 -1545.9575 L
2141.2383 -1545.9575 2136.3457 -1541.0649 2136.3457 -1535.0288 c
2136.3457 -1528.9927 2141.2383 -1524.1001 2147.2744 -1524.1001 C
2152.7383 -1524.1001 L
2158.7744 -1524.1001 2163.667 -1528.9927 2163.667 -1535.0288 c
2163.667 -1541.0649 2158.7744 -1545.9575 2152.7383 -1545.9575 C
2152.7383 -1545.9575 L
f
2109.0234 -1545.9575 m
2103.5596 -1545.9575 L
2097.5234 -1545.9575 2092.6309 -1541.0649 2092.6309 -1535.0288 c
2092.6309 -1528.9927 2097.5234 -1524.1001 2103.5596 -1524.1001 C
2109.0234 -1524.1001 L
2115.0596 -1524.1001 2119.9521 -1528.9927 2119.9521 -1535.0288 c
2119.9521 -1541.0649 2115.0596 -1545.9575 2109.0234 -1545.9575 C
2109.0234 -1545.9575 L
f
2065.3086 -1545.9575 m
2059.8447 -1545.9575 L
2053.8086 -1545.9575 2048.916 -1541.0649 2048.916 -1535.0288 c
2048.916 -1528.9927 2053.8086 -1524.1001 2059.8447 -1524.1001 C
2065.3086 -1524.1001 L
2071.3447 -1524.1001 2076.2373 -1528.9927 2076.2373 -1535.0288 c
2076.2373 -1541.0649 2071.3447 -1545.9575 2065.3086 -1545.9575 C
2065.3086 -1545.9575 L
f
*U
2037.3486 -1578.3286 m
1962.3486 -1535.0288 L
2037.3486 -1491.7271 L
2037.3486 -1578.3286 L
f
/BBAccumRotation (1.570796) XT
U
u
*u
2497.6465 -2086.2466 m
2494.1729 -2086.2466 L
2490.3359 -2086.2466 2487.2256 -2083.1362 2487.2256 -2079.2993 c
2487.2256 -2075.4624 2490.3359 -2072.3521 2494.1729 -2072.3521 C
2497.6465 -2072.3521 L
2501.4834 -2072.3521 2504.5938 -2075.4624 2504.5938 -2079.2993 c
2504.5938 -2083.1362 2501.4834 -2086.2466 2497.6465 -2086.2466 C
2497.6465 -2086.2466 L
f
2469.8584 -2086.2466 m
2466.3848 -2086.2466 L
2462.5479 -2086.2466 2459.4375 -2083.1362 2459.4375 -2079.2993 c
2459.4375 -2075.4624 2462.5479 -2072.3521 2466.3848 -2072.3521 C
2469.8584 -2072.3521 L
2473.6953 -2072.3521 2476.8057 -2075.4624 2476.8057 -2079.2993 c
2476.8057 -2083.1362 2473.6953 -2086.2466 2469.8584 -2086.2466 C
2469.8584 -2086.2466 L
f
2442.0703 -2086.2466 m
2438.5967 -2086.2466 L
2434.7598 -2086.2466 2431.6494 -2083.1362 2431.6494 -2079.2993 c
2431.6494 -2075.4624 2434.7598 -2072.3521 2438.5967 -2072.3521 C
2442.0703 -2072.3521 L
2445.9072 -2072.3521 2449.0176 -2075.4624 2449.0176 -2079.2993 c
2449.0176 -2083.1362 2445.9072 -2086.2466 2442.0703 -2086.2466 C
2442.0703 -2086.2466 L
f
2414.2822 -2086.2466 m
2410.8086 -2086.2466 L
2406.9717 -2086.2466 2403.8613 -2083.1362 2403.8613 -2079.2993 c
2403.8613 -2075.4624 2406.9717 -2072.3521 2410.8086 -2072.3521 C
2414.2822 -2072.3521 L
2418.1191 -2072.3521 2421.2295 -2075.4624 2421.2295 -2079.2993 c
2421.2295 -2083.1362 2418.1191 -2086.2466 2414.2822 -2086.2466 C
2414.2822 -2086.2466 L
f
2386.4932 -2086.2466 m
2383.0205 -2086.2466 L
2379.1836 -2086.2466 2376.0732 -2083.1362 2376.0732 -2079.2993 c
2376.0732 -2075.4624 2379.1836 -2072.3521 2383.0205 -2072.3521 C
2386.4932 -2072.3521 L
2390.3301 -2072.3521 2393.4404 -2075.4624 2393.4404 -2079.2993 c
2393.4404 -2083.1362 2390.3301 -2086.2466 2386.4932 -2086.2466 C
2386.4932 -2086.2466 L
f
2358.7051 -2086.2466 m
2355.2314 -2086.2466 L
2351.3945 -2086.2466 2348.2842 -2083.1362 2348.2842 -2079.2993 c
2348.2842 -2075.4624 2351.3945 -2072.3521 2355.2314 -2072.3521 C
2358.7051 -2072.3521 L
2362.542 -2072.3521 2365.6523 -2075.4624 2365.6523 -2079.2993 c
2365.6523 -2083.1362 2362.542 -2086.2466 2358.7051 -2086.2466 C
2358.7051 -2086.2466 L
f
2330.917 -2086.2466 m
2327.4434 -2086.2466 L
2323.6064 -2086.2466 2320.4961 -2083.1362 2320.4961 -2079.2993 c
2320.4961 -2075.4624 2323.6064 -2072.3521 2327.4434 -2072.3521 C
2330.917 -2072.3521 L
2334.7539 -2072.3521 2337.8643 -2075.4624 2337.8643 -2079.2993 c
2337.8643 -2083.1362 2334.7539 -2086.2466 2330.917 -2086.2466 C
2330.917 -2086.2466 L
f
2303.1289 -2086.2466 m
2299.6553 -2086.2466 L
2295.8184 -2086.2466 2292.708 -2083.1362 2292.708 -2079.2993 c
2292.708 -2075.4624 2295.8184 -2072.3521 2299.6553 -2072.3521 C
2303.1289 -2072.3521 L
2306.9658 -2072.3521 2310.0762 -2075.4624 2310.0762 -2079.2993 c
2310.0762 -2083.1362 2306.9658 -2086.2466 2303.1289 -2086.2466 C
2303.1289 -2086.2466 L
f
2275.3408 -2086.2466 m
2271.8672 -2086.2466 L
2268.0303 -2086.2466 2264.9199 -2083.1362 2264.9199 -2079.2993 c
2264.9199 -2075.4624 2268.0303 -2072.3521 2271.8672 -2072.3521 C
2275.3408 -2072.3521 L
2279.1777 -2072.3521 2282.2881 -2075.4624 2282.2881 -2079.2993 c
2282.2881 -2083.1362 2279.1777 -2086.2466 2275.3408 -2086.2466 C
2275.3408 -2086.2466 L
f
2247.5527 -2086.2466 m
2244.0791 -2086.2466 L
2240.2422 -2086.2466 2237.1318 -2083.1362 2237.1318 -2079.2993 c
2237.1318 -2075.4624 2240.2422 -2072.3521 2244.0791 -2072.3521 C
2247.5527 -2072.3521 L
2251.3896 -2072.3521 2254.5 -2075.4624 2254.5 -2079.2993 c
2254.5 -2083.1362 2251.3896 -2086.2466 2247.5527 -2086.2466 C
2247.5527 -2086.2466 L
f
2219.7646 -2086.2466 m
2216.291 -2086.2466 L
2212.4541 -2086.2466 2209.3438 -2083.1362 2209.3438 -2079.2993 c
2209.3438 -2075.4624 2212.4541 -2072.3521 2216.291 -2072.3521 C
2219.7646 -2072.3521 L
2223.6016 -2072.3521 2226.7119 -2075.4624 2226.7119 -2079.2993 c
2226.7119 -2083.1362 2223.6016 -2086.2466 2219.7646 -2086.2466 C
2219.7646 -2086.2466 L
f
2191.9756 -2086.2466 m
2188.5029 -2086.2466 L
2184.666 -2086.2466 2181.5557 -2083.1362 2181.5557 -2079.2993 c
2181.5557 -2075.4624 2184.666 -2072.3521 2188.5029 -2072.3521 C
2191.9756 -2072.3521 L
2195.8125 -2072.3521 2198.9229 -2075.4624 2198.9229 -2079.2993 c
2198.9229 -2083.1362 2195.8125 -2086.2466 2191.9756 -2086.2466 C
2191.9756 -2086.2466 L
f
2164.1875 -2086.2466 m
2160.7139 -2086.2466 L
2156.877 -2086.2466 2153.7666 -2083.1362 2153.7666 -2079.2993 c
2153.7666 -2075.4624 2156.877 -2072.3521 2160.7139 -2072.3521 C
2164.1875 -2072.3521 L
2168.0244 -2072.3521 2171.1348 -2075.4624 2171.1348 -2079.2993 c
2171.1348 -2083.1362 2168.0244 -2086.2466 2164.1875 -2086.2466 C
2164.1875 -2086.2466 L
f
2136.3994 -2086.2466 m
2132.9258 -2086.2466 L
2129.0889 -2086.2466 2125.9785 -2083.1362 2125.9785 -2079.2993 c
2125.9785 -2075.4624 2129.0889 -2072.3521 2132.9258 -2072.3521 C
2136.3994 -2072.3521 L
2140.2363 -2072.3521 2143.3467 -2075.4624 2143.3467 -2079.2993 c
2143.3467 -2083.1362 2140.2363 -2086.2466 2136.3994 -2086.2466 C
2136.3994 -2086.2466 L
f
2108.6113 -2086.2466 m
2105.1377 -2086.2466 L
2101.3008 -2086.2466 2098.1904 -2083.1362 2098.1904 -2079.2993 c
2098.1904 -2075.4624 2101.3008 -2072.3521 2105.1377 -2072.3521 C
2108.6113 -2072.3521 L
2112.4482 -2072.3521 2115.5586 -2075.4624 2115.5586 -2079.2993 c
2115.5586 -2083.1362 2112.4482 -2086.2466 2108.6113 -2086.2466 C
2108.6113 -2086.2466 L
f
2080.8232 -2086.2466 m
2077.3496 -2086.2466 L
2073.5127 -2086.2466 2070.4023 -2083.1362 2070.4023 -2079.2993 c
2070.4023 -2075.4624 2073.5127 -2072.3521 2077.3496 -2072.3521 C
2080.8232 -2072.3521 L
2084.6602 -2072.3521 2087.7705 -2075.4624 2087.7705 -2079.2993 c
2087.7705 -2083.1362 2084.6602 -2086.2466 2080.8232 -2086.2466 C
2080.8232 -2086.2466 L
f
2053.0352 -2086.2466 m
2049.5615 -2086.2466 L
2045.7246 -2086.2466 2042.6143 -2083.1362 2042.6143 -2079.2993 c
2042.6143 -2075.4624 2045.7246 -2072.3521 2049.5615 -2072.3521 C
2053.0352 -2072.3521 L
2056.8721 -2072.3521 2059.9824 -2075.4624 2059.9824 -2079.2993 c
2059.9824 -2083.1362 2056.8721 -2086.2466 2053.0352 -2086.2466 C
2053.0352 -2086.2466 L
f
2025.2461 -2086.2466 m
2021.7734 -2086.2466 L
2017.9365 -2086.2466 2014.8262 -2083.1362 2014.8262 -2079.2993 c
2014.8262 -2075.4624 2017.9365 -2072.3521 2021.7734 -2072.3521 C
2025.2461 -2072.3521 L
2029.083 -2072.3521 2032.1934 -2075.4624 2032.1934 -2079.2993 c
2032.1934 -2083.1362 2029.083 -2086.2466 2025.2461 -2086.2466 C
2025.2461 -2086.2466 L
f
1997.458 -2086.2466 m
1993.9844 -2086.2466 L
1990.1475 -2086.2466 1987.0371 -2083.1362 1987.0371 -2079.2993 c
1987.0371 -2075.4624 1990.1475 -2072.3521 1993.9844 -2072.3521 C
1997.458 -2072.3521 L
2001.2949 -2072.3521 2004.4053 -2075.4624 2004.4053 -2079.2993 c
2004.4053 -2083.1362 2001.2949 -2086.2466 1997.458 -2086.2466 C
1997.458 -2086.2466 L
f
1969.6699 -2086.2466 m
1966.1963 -2086.2466 L
1962.3594 -2086.2466 1959.249 -2083.1362 1959.249 -2079.2993 c
1959.249 -2075.4624 1962.3594 -2072.3521 1966.1963 -2072.3521 C
1969.6699 -2072.3521 L
1973.5068 -2072.3521 1976.6172 -2075.4624 1976.6172 -2079.2993 c
1976.6172 -2083.1362 1973.5068 -2086.2466 1969.6699 -2086.2466 C
1969.6699 -2086.2466 L
f
1941.8818 -2086.2466 m
1938.4082 -2086.2466 L
1934.5713 -2086.2466 1931.4609 -2083.1362 1931.4609 -2079.2993 c
1931.4609 -2075.4624 1934.5713 -2072.3521 1938.4082 -2072.3521 C
1941.8818 -2072.3521 L
1945.7188 -2072.3521 1948.8291 -2075.4624 1948.8291 -2079.2993 c
1948.8291 -2083.1362 1945.7188 -2086.2466 1941.8818 -2086.2466 C
1941.8818 -2086.2466 L
f
*U
1922.4238 -2103.6646 m
1880.2227 -2079.2993 L
1922.4238 -2054.9341 L
1922.4238 -2103.6646 L
f
/BBAccumRotation (1.570796) XT
U
U
u
*u
1 D
2605.6016 -865.5557 m
2608.0557 -854.9995 L
2602.6035 -852.1724 L
2595.4443 -860.1948 L
2593.2598 -859.1865 2591.0527 -858.2656 2588.8213 -857.416 C
2589.4053 -846.6172 L
2583.5449 -844.7783 L
2577.8896 -853.9146 L
2575.5703 -853.3081 2573.2305 -852.7866 2570.8848 -852.3394 C
2569.5801 -841.5942 L
2563.4893 -840.8018 L
2559.5088 -850.7998 L
2557.1182 -850.6064 2554.7295 -850.4971 2552.3408 -850.4624 C
2549.1924 -840.0981 L
2543.0508 -840.3735 L
2540.8604 -850.9258 L
2538.4805 -851.1475 2536.1094 -851.4448 2533.75 -851.8301 C
2528.8438 -842.1606 L
2522.8477 -843.5005 L
2522.5215 -854.2666 L
2520.2188 -854.896 2517.9307 -855.6055 2515.6719 -856.3877 C
2509.1641 -847.7261 L
2503.4961 -850.0854 L
2505.04 -860.7236 L
2502.8799 -861.7432 2500.752 -862.8457 2498.6523 -864.0146 C
2490.7549 -856.626 L
2485.5801 -859.9326 L
2488.9443 -870.1309 L
2487 -871.5122 2485.0957 -872.9673 2483.2324 -874.4912 C
2474.166 -868.584 L
2469.6445 -872.7412 L
2474.7441 -882.2178 L
2473.0703 -883.9082 2471.4551 -885.6709 2469.8838 -887.4971 C
2459.9111 -883.2451 L
2456.1787 -888.1221 L
2462.8477 -896.5762 L
2461.4775 -898.5581 2460.1875 -900.5684 2458.9688 -902.6064 C
2448.416 -900.1553 L
2445.5869 -905.6123 L
2453.6113 -912.7661 L
2452.6064 -914.9507 2451.6777 -917.1582 2450.832 -919.3872 C
2440.0303 -918.8037 L
2438.1904 -924.667 L
2447.3262 -930.3169 L
2446.7236 -932.6396 2446.1973 -934.9795 2445.7539 -937.3271 C
2435.0137 -938.6284 L
2434.2188 -944.7202 L
2444.2148 -948.7061 L
2444.0225 -951.0908 2443.9082 -953.48 2443.877 -955.8696 C
2433.5137 -959.0225 L
2433.7871 -965.1602 L
2444.3398 -967.3506 L
2444.5635 -969.731 2444.8643 -972.1006 2445.2461 -974.46 C
2435.5742 -979.3672 L
2436.9141 -985.3628 L
2447.6807 -985.6875 L
2448.3096 -987.9912 2449.0195 -990.2759 2449.8018 -992.5366 C
2441.1436 -999.0439 L
2443.502 -1004.7178 L
2454.1387 -1003.1689 L
2455.1592 -1005.3281 2456.2588 -1007.46 2457.4287 -1009.5537 C
2450.04 -1017.458 L
2453.3477 -1022.6299 L
2463.5449 -1019.2637 L
2464.9258 -1021.2109 2466.3828 -1023.1157 2467.9082 -1024.9775 C
2461.999 -1034.0425 L
2466.1572 -1038.5664 L
2475.6309 -1033.4683 L
2477.3242 -1035.1367 2479.0869 -1036.7539 2480.9082 -1038.3252 C
2476.6543 -1048.3008 L
2481.5371 -1052.0327 L
2489.9922 -1045.3579 L
2491.9707 -1046.7314 2493.9824 -1048.022 2496.0225 -1049.2393 C
2493.5703 -1059.7959 L
2499.0234 -1062.624 L
2506.1787 -1054.6006 L
2508.3623 -1055.6045 2510.5723 -1056.5298 2512.8037 -1057.3809 C
2512.2197 -1068.1797 L
2518.0801 -1070.019 L
2523.7334 -1060.8823 L
2526.0537 -1061.4849 2528.3955 -1062.0078 2530.7422 -1062.457 C
2532.0449 -1073.1997 L
2538.1338 -1073.9922 L
2542.1162 -1063.9976 L
2544.5068 -1064.1895 2546.8975 -1064.3018 2549.2861 -1064.332 C
2552.4365 -1074.6982 L
2558.5723 -1074.4209 L
2560.7656 -1063.8701 L
2563.1416 -1063.6479 2565.5176 -1063.3467 2567.875 -1062.9648 C
2572.7832 -1072.6372 L
2578.7764 -1071.2949 L
2579.1035 -1060.5303 L
2581.4092 -1059.8989 2583.6895 -1059.1904 2585.9521 -1058.4087 C
2592.46 -1067.0679 L
2598.1318 -1064.7085 L
2596.5859 -1054.0713 L
2598.7441 -1053.0508 2600.873 -1051.9526 2602.9727 -1050.7798 C
2610.8662 -1058.1689 L
2616.0488 -1054.8633 L
2612.6768 -1044.6631 L
2614.624 -1043.2832 2616.5283 -1041.8247 2618.3926 -1040.3057 C
2627.4561 -1046.2119 L
2631.9814 -1042.0537 L
2626.8809 -1032.5776 L
2628.5537 -1030.8857 2630.166 -1029.124 2631.7422 -1027.3008 C
2641.7148 -1031.5518 L
2645.4463 -1026.6738 L
2638.7793 -1018.2139 L
2640.1475 -1016.2368 2641.4365 -1014.2246 2642.6553 -1012.188 C
2653.209 -1014.6406 L
2656.0381 -1009.1846 L
2648.0137 -1002.0293 L
2649.0215 -999.8457 2649.9434 -997.6348 2650.7939 -995.4063 C
2661.5947 -995.9912 L
2663.4316 -990.1279 L
2654.2939 -984.478 L
2654.9043 -982.1553 2655.4277 -979.8149 2655.8711 -977.4673 C
2666.6133 -976.168 L
2667.4053 -970.0732 L
2657.4121 -966.0913 L
2657.6064 -963.7041 2657.7148 -961.3145 2657.749 -958.9253 C
2668.1113 -955.7734 L
2667.8359 -949.6367 L
2657.2852 -947.4463 L
2657.0605 -945.0645 2656.7607 -942.6943 2656.3818 -940.333 C
2666.0488 -935.4277 L
2664.708 -929.4312 L
2653.9414 -929.1084 L
2653.3135 -926.8047 2652.6074 -924.519 2651.8213 -922.2583 C
2660.4814 -915.7524 L
2658.124 -910.0781 L
2647.4873 -911.626 L
2646.4658 -909.4644 2645.3691 -907.3359 2644.1953 -905.2422 C
2651.585 -897.3398 L
2648.2773 -892.1631 L
2638.0781 -895.5317 L
2636.6953 -893.585 2635.2402 -891.6816 2633.7197 -889.8179 C
2639.627 -880.7549 L
2635.4697 -876.2305 L
2625.9941 -881.3257 L
2624.2988 -879.6572 2622.5361 -878.0396 2620.7168 -876.4688 C
2624.9668 -866.4961 L
2620.0879 -862.7627 L
2611.6328 -869.4341 L
2609.6523 -868.064 2607.6387 -866.7739 2605.6016 -865.5557 C
f
/BBAccumRotation (2.223696) XT
0 D
2605.5176 -885.8662 m
2645.0254 -916.082 2652.5586 -972.5972 2622.3428 -1012.1021 c
2592.1279 -1051.6104 2535.6123 -1059.1426 2496.1064 -1028.9243 c
2456.6006 -998.7139 2449.0664 -942.1973 2479.2832 -902.6904 c
2509.4961 -863.1865 2566.0127 -855.6543 2605.5176 -885.8662 c
f
/BBAccumRotation (2.223696) XT
*U
/BBAccumRotation (2.223696) XT
*u
1 D
2396.5176 -1100.187 m
2394.0098 -1099.1084 2391.457 -1098.2173 2388.8799 -1097.5059 C
2388.4912 -1086.896 L
2382.7998 -1085.8271 L
2378.5625 -1095.6353 L
2375.8574 -1095.3911 2373.1533 -1095.3315 2370.4648 -1095.4595 C
2366.8164 -1085.4878 L
2361.0723 -1086.2314 L
2360.0703 -1096.8813 L
2357.4385 -1097.481 2354.8467 -1098.2573 2352.3203 -1099.2095 C
2345.7617 -1090.8457 L
2340.5303 -1093.3281 L
2342.8682 -1103.7563 L
2340.5576 -1105.1333 2338.3301 -1106.6685 2336.207 -1108.3647 C
2327.3945 -1102.4478 L
2323.1855 -1106.4229 L
2328.6338 -1115.6177 L
2326.876 -1117.6284 2325.2373 -1119.7798 2323.7344 -1122.0659 C
2313.5186 -1119.1553 L
2310.7422 -1124.2378 L
2318.7666 -1131.3076 L
2317.6904 -1133.8198 2316.792 -1136.3701 2316.084 -1138.9458 C
2305.4766 -1139.3384 L
2304.4092 -1145.0298 L
2314.2148 -1149.2632 L
2313.9707 -1151.9678 2313.9141 -1154.6777 2314.0381 -1157.3638 C
2304.0674 -1161.0142 L
2304.8096 -1166.7573 L
2315.46 -1167.7563 L
2316.0625 -1170.3911 2316.8398 -1172.979 2317.7891 -1175.5073 C
2309.4248 -1182.0674 L
2311.9082 -1187.2983 L
2322.3379 -1184.9575 L
2323.7168 -1187.272 2325.252 -1189.5 2326.9443 -1191.6191 C
2321.0283 -1200.4287 L
2325.0039 -1204.6406 L
2334.2002 -1199.1953 L
2336.2109 -1200.9526 2338.3623 -1202.5913 2340.6475 -1204.0908 C
2337.7373 -1214.312 L
2342.8203 -1217.0859 L
2349.8877 -1209.0601 L
2352.4004 -1210.1382 2354.9502 -1211.0327 2357.5273 -1211.7437 C
2357.917 -1222.3501 L
2363.6084 -1223.417 L
2367.8457 -1213.6084 L
2370.5498 -1213.8569 2373.2559 -1213.915 2375.9424 -1213.7876 C
2379.5938 -1223.7593 L
2385.3379 -1223.019 L
2386.3389 -1212.3652 L
2388.9707 -1211.7642 2391.5615 -1210.9897 2394.0869 -1210.0376 C
2400.6465 -1218.4028 L
2405.876 -1215.9204 L
2403.5391 -1205.4893 L
2405.8496 -1204.1138 2408.0791 -1202.5767 2410.2012 -1200.8823 C
2419.0088 -1206.7988 L
2423.2217 -1202.8237 L
2417.7734 -1193.6294 L
2419.5332 -1191.6182 2421.1719 -1189.4653 2422.6729 -1187.1821 C
2432.8926 -1190.0908 L
2435.667 -1185.0093 L
2427.6416 -1177.9414 L
2428.7178 -1175.4297 2429.6143 -1172.8774 2430.3223 -1170.3003 C
2440.9307 -1169.9102 L
2441.999 -1164.2188 L
2432.1934 -1159.9839 L
2432.4365 -1157.2788 2432.4951 -1154.5713 2432.3691 -1151.8843 C
2442.3398 -1148.2319 L
2441.5977 -1142.4907 L
2430.9463 -1141.4917 L
2430.3467 -1138.8574 2429.5713 -1136.2681 2428.6191 -1133.7417 C
2436.9795 -1127.1812 L
2434.5029 -1121.9487 L
2424.0684 -1124.2866 L
2422.6934 -1121.9775 2421.1563 -1119.748 2419.4639 -1117.6284 C
2425.3809 -1108.8149 L
2421.4043 -1104.6079 L
2412.2119 -1110.0571 L
2410.1973 -1108.2959 2408.0469 -1106.6567 2405.7598 -1105.1567 C
2408.6738 -1094.936 L
2403.5889 -1092.1611 L
2396.5176 -1100.187 L
f
/BBAccumRotation (2.070471) XT
0 D
2394.5313 -1115.5562 m
2416.1094 -1127.334 2424.0547 -1154.3726 2412.2725 -1175.9507 c
2400.4961 -1197.5269 2373.4541 -1205.4722 2351.876 -1193.6938 c
2330.2969 -1181.9141 2322.3604 -1154.8735 2334.1338 -1133.2964 c
2345.915 -1111.7173 2372.9531 -1103.7769 2394.5313 -1115.5562 c
f
/BBAccumRotation (2.070471) XT
*U
/BBAccumRotation (2.070471) XT
*u
1 D
2557.6299 -930.4014 m
2555.0664 -929.7524 2552.4629 -929.4893 2549.8867 -929.5781 C
2543.415 -918.6733 L
2536.0879 -920.8252 L
2536.5439 -933.4971 L
2534.3281 -934.8159 2532.2783 -936.4473 2530.4766 -938.3779 C
2518.1992 -935.2461 L
2514.5391 -941.9473 L
2523.8145 -950.5801 L
2523.1641 -953.1421 2522.9033 -955.7476 2522.9902 -958.3213 C
2512.085 -964.792 L
2514.2373 -972.1216 L
2526.9102 -971.6675 L
2528.2314 -973.8823 2529.8613 -975.9302 2531.792 -977.7344 C
2528.6582 -990.0098 L
2535.3643 -993.6709 L
2543.9941 -984.3936 L
2546.5566 -985.0439 2549.1602 -985.3062 2551.7373 -985.2178 C
2558.207 -996.123 L
2565.5371 -993.9712 L
2565.0811 -981.2969 L
2567.2949 -979.978 2569.3418 -978.3486 2571.1445 -976.417 C
2583.4248 -979.5498 L
2587.0811 -972.8467 L
2577.8076 -964.2153 L
2578.457 -961.6528 2578.7217 -959.0474 2578.6328 -956.4727 C
2589.5381 -950.002 L
2587.3838 -942.6743 L
2574.7109 -943.1284 L
2573.3936 -940.9136 2571.7627 -938.8667 2569.832 -937.0625 C
2572.9639 -924.7852 L
2566.2598 -921.1299 L
2557.6299 -930.4014 L
f
/BBAccumRotation (2.070471) XT
0 D
2536.1494 -949.3936 m
2540.5713 -941.2988 2550.7188 -938.3174 2558.8145 -942.7363 c
2566.9092 -947.1563 2569.8906 -957.3027 2565.4717 -965.3999 c
2561.0498 -973.4961 2550.9053 -976.4775 2542.8086 -972.0562 c
2534.7129 -967.6396 2531.7305 -957.4922 2536.1494 -949.3936 c
f
/BBAccumRotation (2.070471) XT
*U
/BBAccumRotation (2.070471) XT
*u
2373.1094 -1236.021 m
2359.5957 -1236.021 2346.1445 -1232.5781 2334.208 -1226.0615 c
2294.8184 -1204.5581 2280.2637 -1155.0166 2301.7676 -1115.6265 c
2303.2422 -1112.9253 2432.6631 -905.9492 2438.79 -896.1504 c
2461.2002 -855.1631 2504.1602 -829.7021 2550.9229 -829.7021 c
2572.1338 -829.7021 2593.249 -835.1069 2611.9824 -845.334 c
2641.9189 -861.6748 2663.6982 -888.6943 2673.3096 -921.4131 c
2682.9219 -954.1318 2679.2168 -988.6353 2662.876 -1018.5674 c
2653.0059 -1036.6494 2638.7822 -1052.21 2621.7402 -1063.5742 C
2427.7158 -1215.0747 L
2427.624 -1215.144 L
2412.6504 -1228.6099 2393.3027 -1236.021 2373.1094 -1236.021 C
2373.1094 -1236.021 L
f
1 D
2425.2275 -1209.8516 m
2425.3525 -1209.8818 L
2618.4072 -1059.1377 L
2618.5781 -1059.0151 L
2634.9131 -1048.1416 2648.5488 -1033.2358 2658.0059 -1015.9087 c
2690.2705 -956.8057 2668.4307 -882.4702 2609.3242 -850.2031 c
2591.4033 -840.4209 2571.207 -835.252 2550.9229 -835.252 c
2506.1611 -835.252 2465.0449 -859.6323 2443.6201 -898.8818 C
2443.5371 -899.0234 L
2396.9238 -973.5713 2308.3164 -1115.3398 2306.6367 -1118.2847 c
2286.6006 -1154.9897 2300.1631 -1201.1538 2336.8652 -1221.1914 c
2347.9893 -1227.2632 2360.5225 -1230.4731 2373.1094 -1230.4731 c
2392.0273 -1230.4731 2410.1445 -1223.4956 2424.126 -1210.8276 C
2425.2275 -1209.8516 L
2425.2275 -1209.8516 L
f
*U
U
u
*u
579.3838 -1158.5288 m
579.3838 -1144.7974 L
557.3125 -1139.1626 L
556.1289 -1134.564 554.3018 -1130.2251 551.9424 -1126.2363 C
563.5742 -1106.6304 L
553.8672 -1096.9224 L
534.2607 -1108.5542 L
530.2734 -1106.1963 525.9316 -1104.3667 521.333 -1103.1841 C
515.6982 -1081.1133 L
501.9697 -1081.1133 L
496.335 -1103.1841 L
491.7354 -1104.3667 487.3975 -1106.1963 483.4072 -1108.5542 C
463.8008 -1096.9224 L
454.0938 -1106.6299 L
465.7246 -1126.2363 L
463.3701 -1130.2251 461.54 -1134.564 460.3555 -1139.1626 C
438.2842 -1144.7974 L
438.2842 -1158.5269 L
460.3555 -1164.1606 L
461.54 -1168.7622 463.3672 -1173.0986 465.7246 -1177.0874 C
454.0938 -1196.6938 L
463.8008 -1206.4019 L
483.4072 -1194.77 L
487.3975 -1197.1284 491.7344 -1198.9575 496.335 -1200.1401 C
501.9697 -1222.2124 L
515.6982 -1222.2134 L
521.333 -1200.1401 L
525.9316 -1198.9575 530.2705 -1197.1304 534.2607 -1194.77 C
553.8643 -1206.4019 L
563.5742 -1196.6958 L
551.9424 -1177.0903 L
554.3018 -1173.0986 556.1289 -1168.7622 557.3125 -1164.1626 C
579.3838 -1158.5288 L
f
0 D
478.8047 -1151.6616 m
478.8047 -1135.0767 492.248 -1121.6304 508.8359 -1121.6304 c
525.4199 -1121.6304 538.8633 -1135.0767 538.8633 -1151.6616 c
538.8633 -1168.2476 525.4199 -1181.6929 508.8359 -1181.6929 c
492.248 -1181.6929 478.8047 -1168.2476 478.8047 -1151.6616 c
f
*U
*u
1 D
456.9961 -1082.3984 m
458.9238 -1071.4619 L
438.4697 -1062.2168 L
438.4375 -1062.4111 L
438.4336 -1053.9951 437.6133 -1045.771 436.1162 -1037.7891 C
454.6885 -1029.4014 L
452.7559 -1018.4629 L
430.375 -1016.7661 L
427.5361 -1009.0127 423.9775 -1001.6104 419.8115 -994.6123 C
434.3877 -980.3818 L
428.832 -970.7666 L
407.2266 -976.8311 L
407.3848 -977.106 L
402.0459 -970.7471 396.1367 -964.8872 389.7188 -959.624 C
398.5488 -941.2695 L
390.04 -934.127 L
371.8086 -947.2168 L
372.0508 -947.418 L
364.916 -943.2842 357.3682 -939.7959 349.4717 -937.0293 C
351.4941 -916.7656 L
341.0576 -912.9707 L
328.4033 -931.502 L
328.7227 -931.6191 L
321.1914 -930.293 313.458 -929.5625 305.5469 -929.5625 c
305.0078 -929.5625 304.4766 -929.5952 303.9395 -929.605 C
298.8896 -909.8428 L
287.792 -909.8428 L
282.2363 -931.585 L
282.5566 -931.585 L
274.2764 -933.0293 266.2549 -935.2275 258.5771 -938.1299 C
247.0967 -921.3125 L
236.6631 -925.1191 L
238.8857 -947.4492 L
239.1738 -947.3447 L
231.9678 -951.5078 225.1914 -956.3262 218.9248 -961.7207 C
202.3525 -949.8184 L
193.8428 -956.9609 L
203.5713 -977.1865 L
203.8281 -976.9736 L
198.4971 -983.3076 193.7559 -990.1504 189.6729 -997.4141 C
170.0557 -991.9067 L
164.5 -1001.5225 L
180.5625 -1017.207 L
180.582 -1017.1699 L
177.8184 -1024.7988 175.7461 -1032.7598 174.4111 -1040.9697 C
154.0977 -1042.501 L
152.166 -1053.4414 L
172.6201 -1062.6895 L
172.6592 -1062.4805 L
172.6592 -1070.9023 173.4785 -1079.127 174.9785 -1087.1143 C
156.4053 -1095.5044 L
158.3379 -1106.4438 L
180.7168 -1108.1299 L
183.5547 -1115.8833 187.1143 -1123.2896 191.2832 -1130.291 C
176.7061 -1144.52 L
182.2617 -1154.1323 L
203.8682 -1148.0649 L
203.7168 -1147.8076 L
209.0498 -1154.1611 214.958 -1160.0166 221.3721 -1165.2759 C
212.543 -1183.6323 L
221.0527 -1190.7759 L
239.2852 -1177.686 L
239.0557 -1177.4927 L
246.1865 -1181.6235 253.7285 -1185.1104 261.6172 -1187.8755 C
259.6016 -1208.1323 L
270.0361 -1211.9351 L
282.6934 -1193.396 L
282.4189 -1193.2954 L
289.9355 -1194.6157 297.6533 -1195.3433 305.5469 -1195.3433 c
306.0859 -1195.3433 306.6182 -1195.3091 307.1572 -1195.3018 C
312.2012 -1215.0688 L
323.3037 -1215.0688 L
328.8564 -1193.3169 L
328.5498 -1193.3169 L
336.8291 -1191.8745 344.8447 -1189.6743 352.5195 -1186.7749 C
363.9971 -1203.5884 L
374.4307 -1199.7905 L
372.21 -1177.4492 L
371.9443 -1177.5474 L
379.1416 -1173.3853 385.9102 -1168.5732 392.1738 -1163.1812 C
408.7422 -1175.0854 L
417.248 -1167.9448 L
407.5225 -1147.7192 L
407.2715 -1147.9272 L
412.6016 -1141.5933 417.3369 -1134.7515 421.4238 -1127.4888 C
441.0381 -1132.9976 L
446.5938 -1123.3804 L
430.5361 -1107.6963 L
430.5117 -1107.7339 L
433.2773 -1100.104 435.3506 -1092.1426 436.6836 -1083.936 C
456.9961 -1082.3984 L
f
0 D
305.5469 -1174.3501 m
243.7432 -1174.3501 193.6455 -1124.2534 193.6455 -1062.4551 c
193.6455 -1000.6494 243.7432 -950.5508 305.5469 -950.5508 c
367.3486 -950.5508 417.4473 -1000.6494 417.4473 -1062.4551 c
417.4473 -1124.2534 367.3486 -1174.3501 305.5469 -1174.3501 c
f
*U
*u
1 D
383.7715 -1066.1318 m
383.7715 -1059.6025 L
372.085 -1056.9609 L
371.833 -1053.8862 371.373 -1050.876 370.7207 -1047.9341 C
381.0771 -1041.7788 L
379.0615 -1035.5684 L
367.1445 -1036.666 L
365.9619 -1033.8438 364.585 -1031.1182 363.041 -1028.5098 C
370.9902 -1019.4512 L
367.1533 -1014.1699 L
356.1455 -1018.9014 L
354.1592 -1016.5952 352.0137 -1014.4277 349.7334 -1012.4111 C
354.498 -1001.3315 L
349.2168 -997.4946 L
340.2168 -1005.3892 L
337.6221 -1003.8115 334.915 -1002.4082 332.1055 -1001.1875 C
333.2119 -989.1963 L
327.0029 -987.1807 L
320.8877 -997.4678 L
317.9541 -996.7764 314.9453 -996.2827 311.8779 -995.9932 C
309.2207 -984.2319 L
302.6924 -984.2319 L
300.0508 -995.9189 L
296.9785 -996.1689 293.9648 -996.6279 291.0225 -997.2813 C
284.8682 -986.9268 L
278.6582 -988.9443 L
279.7568 -1000.8574 L
276.9336 -1002.043 274.208 -1003.4175 271.5977 -1004.9609 C
262.5381 -997.0127 L
257.2578 -1000.8511 L
261.9883 -1011.8594 L
259.6846 -1013.8447 257.5146 -1015.9902 255.502 -1018.2705 C
244.4189 -1013.5059 L
240.5811 -1018.7861 L
248.4785 -1027.7881 L
246.9023 -1030.3789 245.4971 -1033.0889 244.2813 -1035.8955 C
232.2852 -1034.791 L
230.2676 -1041 L
240.5566 -1047.1157 L
239.8662 -1050.0488 239.3711 -1053.0576 239.083 -1056.125 C
227.3223 -1058.7837 L
227.3223 -1065.3115 L
239.0078 -1067.9541 L
239.2578 -1071.0264 239.7168 -1074.04 240.3701 -1076.9775 C
230.0156 -1083.1387 L
232.0313 -1089.3477 L
243.9473 -1088.249 L
245.1309 -1091.0723 246.5059 -1093.7949 248.0518 -1096.4067 C
240.1025 -1105.4634 L
243.9385 -1110.7451 L
254.9473 -1106.0142 L
256.9326 -1108.3188 259.0762 -1110.4873 261.3574 -1112.5024 C
256.5938 -1123.5815 L
261.874 -1127.4224 L
270.874 -1119.5249 L
273.4648 -1121.103 276.1758 -1122.5049 278.9844 -1123.7261 C
277.8799 -1135.7168 L
284.0898 -1137.7358 L
290.2041 -1127.4507 L
293.1377 -1128.1411 296.1445 -1128.6343 299.2148 -1128.9224 C
301.8721 -1140.6826 L
308.4004 -1140.6826 L
311.041 -1128.9985 L
314.1143 -1128.7456 317.1299 -1128.2866 320.0684 -1127.6353 C
326.2236 -1137.9897 L
332.4346 -1135.9731 L
331.3359 -1124.0591 L
334.1602 -1122.8735 336.8818 -1121.4985 339.4951 -1119.9541 C
348.5547 -1127.9019 L
353.835 -1124.0649 L
349.1025 -1113.0586 L
351.4102 -1111.0718 353.5752 -1108.9268 355.5928 -1106.647 C
366.6719 -1111.4092 L
370.5068 -1106.127 L
362.6133 -1097.1284 L
364.1904 -1094.5356 365.5957 -1091.8271 366.8125 -1089.019 C
378.8076 -1090.125 L
380.8242 -1083.916 L
370.5371 -1077.7988 L
371.2266 -1074.8662 371.7197 -1071.8569 372.0098 -1068.7896 C
383.7715 -1066.1318 L
f
0 D
305.5469 -1112.6392 m
277.832 -1112.6392 255.3633 -1090.1729 255.3633 -1062.4585 c
255.3633 -1034.7432 277.832 -1012.2749 305.5469 -1012.2749 c
333.2617 -1012.2749 355.7295 -1034.7432 355.7295 -1062.4585 c
355.7295 -1090.1729 333.2617 -1112.6392 305.5469 -1112.6392 c
f
*U
U
*u
1 D
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
1528.2588 -1746.5161 m
1518.7373 -1798.3833 L
1568.5205 -1757.4341 L
1573.2119 -1757.9556 1578.1006 -1758.3013 1583.1865 -1758.4517 c
1651.2002 -1760.4185 1685.6514 -1725.5923 1686.9326 -1681.438 c
1688.2061 -1637.2817 1657.0225 -1600.561 1587.8154 -1598.5571 c
1518.6025 -1596.5532 1485.3486 -1631.4116 1484.0752 -1675.5649 c
1483.2139 -1705.4204 1497.7354 -1731.895 1528.2588 -1746.5161 C
f
0 D
1621.5049 -1678.5161 m
1621.7432 -1670.5288 1628.167 -1663.978 1636.1396 -1663.603 c
1636.5322 -1663.5835 1636.9307 -1663.5796 1637.3291 -1663.5903 c
1645.8057 -1663.8345 1652.4971 -1670.9312 1652.2549 -1679.4038 c
1652.0186 -1687.394 1645.5967 -1693.9468 1637.6221 -1694.3218 c
1637.2295 -1694.3384 1636.8291 -1694.3442 1636.4346 -1694.3335 c
1627.9658 -1694.0864 1621.2627 -1686.9907 1621.5049 -1678.5161 c
f
1570.0791 -1677.0259 m
1570.3154 -1669.0366 1576.7354 -1662.4858 1584.7139 -1662.1108 c
1585.1025 -1662.0923 1585.501 -1662.0894 1585.9014 -1662.1021 c
1590.0068 -1662.2183 1593.8174 -1663.9282 1596.6377 -1666.9175 c
1599.458 -1669.9028 1600.9385 -1673.812 1600.8213 -1677.9185 c
1600.5889 -1685.9067 1594.1729 -1692.4585 1586.1982 -1692.8335 c
1585.8076 -1692.854 1585.4072 -1692.854 1585.0088 -1692.8433 c
1580.9053 -1692.7261 1577.0889 -1691.0161 1574.2705 -1688.0269 c
1571.4521 -1685.0415 1569.96 -1681.1323 1570.0791 -1677.0259 c
f
1518.6592 -1675.5376 m
1518.8877 -1667.5483 1525.3115 -1661.0005 1533.2822 -1660.6245 c
1533.6748 -1660.606 1534.0811 -1660.603 1534.4697 -1660.6108 c
1538.5771 -1660.731 1542.3896 -1662.4429 1545.208 -1665.4263 c
1548.0244 -1668.4155 1549.5166 -1672.3208 1549.4033 -1676.4282 c
1549.167 -1684.4194 1542.7393 -1690.9702 1534.7705 -1691.3462 c
1534.374 -1691.3647 1533.9775 -1691.3657 1533.583 -1691.3569 c
1525.1045 -1691.1108 1518.4111 -1684.0132 1518.6592 -1675.5376 c
f
*U
*u
1 D
0.47245 0.030304 0.131777 0.000031 0.501961 0.792157 0.85098 (R=128 G=202 B=217) 0 1 Xk
1044.8447 -2157.8208 m
1046.1182 -2201.9751 1079.3721 -2236.8325 1148.585 -2234.8286 c
1217.792 -2232.8247 1248.9756 -2196.104 1247.7021 -2151.9478 c
1246.4209 -2107.7935 1211.9697 -2072.9673 1143.9561 -2074.9341 c
1138.8701 -2075.0845 1133.9814 -2075.4302 1129.29 -2075.9517 C
1079.5068 -2035.0024 L
1089.0283 -2086.8696 L
1058.5049 -2101.4907 1043.9834 -2127.9653 1044.8447 -2157.8208 c
f
0 D
1197.2041 -2139.0532 m
1197.5986 -2139.0415 1197.999 -2139.0474 1198.3916 -2139.0649 c
1206.3662 -2139.4399 1212.7881 -2145.9927 1213.0244 -2153.9829 c
1213.2666 -2162.4556 1206.5752 -2169.5513 1198.0986 -2169.7954 c
1197.7002 -2169.8071 1197.3018 -2169.8032 1196.9092 -2169.7837 c
1188.9365 -2169.4087 1182.5127 -2162.8579 1182.2744 -2154.8696 c
1182.0322 -2146.395 1188.7354 -2139.2993 1197.2041 -2139.0532 c
f
1135.04 -2145.3599 m
1137.8584 -2142.3696 1141.6748 -2140.6606 1145.7783 -2140.5435 c
1146.1768 -2140.5317 1146.5771 -2140.5317 1146.9678 -2140.5532 c
1154.9424 -2140.9282 1161.3584 -2147.479 1161.5908 -2155.4673 c
1161.708 -2159.5747 1160.2275 -2163.4829 1157.4072 -2166.4692 c
1154.5869 -2169.4575 1150.7764 -2171.1685 1146.6709 -2171.2837 c
1146.2705 -2171.2974 1145.8721 -2171.2935 1145.4834 -2171.2759 c
1137.5049 -2170.9009 1131.085 -2164.3501 1130.8486 -2156.3599 c
1130.7295 -2152.2544 1132.2217 -2148.3442 1135.04 -2145.3599 c
f
1094.3525 -2142.0298 m
1094.7471 -2142.02 1095.1436 -2142.022 1095.54 -2142.0396 c
1103.5088 -2142.4165 1109.9365 -2148.9673 1110.1729 -2156.9575 c
1110.2861 -2161.0649 1108.7939 -2164.9712 1105.9775 -2167.9595 c
1103.1592 -2170.9438 1099.3467 -2172.6548 1095.2393 -2172.7759 c
1094.8506 -2172.7837 1094.4443 -2172.7798 1094.0518 -2172.7622 c
1086.0811 -2172.3853 1079.6572 -2165.8384 1079.4287 -2157.8481 c
1079.1807 -2149.3735 1085.874 -2142.2759 1094.3525 -2142.0298 c
f
*U
u
*u
1 D
1358.3086 -1175.5747 m
1336.8115 -1197.062 L
1312.9629 -1180.0771 1300.3447 -1153.3931 1300.3447 -1126.4868 c
1300.3447 -1126.3516 1300.3857 -1126.2163 1300.3857 -1126.0923 c
1300.3857 -1091.8281 1321.4209 -1058.9668 1355.4199 -1045.5889 c
1367.54 -1040.8281 1373.4863 -1027.1582 1368.7256 -1015.0469 c
1363.9639 -1002.9048 1350.2842 -996.9585 1338.1836 -1001.7305 c
1286.5391 -1021.9697 1253.2324 -1071.9951 1253.2324 -1126.5078 c
1253.2324 -1126.7778 1253.2734 -1127.0591 1253.2734 -1127.3296 c
1253.2734 -1166.4819 1271.2822 -1205.3931 1303.0049 -1230.8794 C
1281.9443 -1251.9292 L
1271.1748 -1262.7202 1274.8125 -1271.5356 1290.0723 -1271.5356 C
1350.1592 -1271.5356 L
1365.4404 -1271.5356 1377.916 -1259.061 1377.916 -1243.811 C
1377.916 -1183.7036 L
1377.916 -1168.4429 1369.0791 -1164.7739 1358.3086 -1175.5747 C
f
*U
*u
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
1522.1221 -1125.7593 m
1521.8926 -1084.7021 1503.043 -1046.7197 1472.3682 -1022.1162 C
1493.4082 -1001.0654 L
1504.2207 -990.2744 1500.5615 -981.459 1485.2998 -981.459 C
1425.2148 -981.459 L
1409.9531 -981.459 1397.4795 -993.9336 1397.4795 -1009.1846 C
1397.4795 -1069.291 L
1397.4795 -1084.541 1406.2949 -1088.1895 1417.085 -1077.4102 C
1438.584 -1055.9121 L
1462.4795 -1073.1016 1474.9883 -1099.5015 1474.9883 -1126.4663 c
1474.9883 -1126.4868 L
1474.9883 -1163.2524 1452.1836 -1194.7153 1419.9756 -1207.4058 c
1407.834 -1212.146 1401.8877 -1225.8364 1406.6484 -1237.9478 c
1411.4102 -1250.0688 1425.0898 -1256.0356 1437.2314 -1251.2749 c
1489.0293 -1230.8125 1522.1631 -1180.8013 1522.1631 -1126.4976 c
1522.1631 -1126.2476 1522.1221 -1126.019 1522.1221 -1125.7593 c
f
*U
U
U
Q
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
