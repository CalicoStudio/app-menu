%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Traditional Chinese
%%Title: network_simple_cooperation5.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: min
%%CreationDate: 7/3/2012
%%BoundingBox: 0 0 2800 2600
%%HiResBoundingBox: 0 0 2800 2600
%%CropBox: 0 0 2800 2600
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.351735, 2008/07/22-18:11:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">_network_simple_org6</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2012-07-03T06:13:53+08:00</xmp:CreateDate>
         <xmp:ModifyDate>2012-07-03T06:13:54+08:00</xmp:ModifyDate>
         <xmp:MetadataDate>2012-07-03T06:13:54+08:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>240</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA8AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AI8658odirsVdirsVdirs&#xA;VdirsVdirsVdirsVbCk4quETHG00u9BsFp4Xeg2NrwtGFsbRwrSjDthRTWKtYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqjryBVsLCREoXjcysB1ImZQT+rIRO5bZx9MT5fpQO&#xA;TalyoTioCslvkSWYiiEtvbBbMQVVtvbI2zEFQW3tjaeBsWpJAAqTsAMHEngRGo2aJ9X4IF5QIWoK&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:06BB734591C4E111A9529613F46C399F</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:06BB734591C4E111A9529613F46C399F</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b769101b-9cac-422a-be90-4ccc0826a445</stRef:instanceID>
            <stRef:documentID>xmp.did:04BB734591C4E111A9529613F46C399F</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC59BBBAC6BFE1118399FB536CC078A3</stEvt:instanceID>
                  <stEvt:when>2012-06-27T04:14:39+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD59BBBAC6BFE1118399FB536CC078A3</stEvt:instanceID>
                  <stEvt:when>2012-06-27T04:44:02+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:64F0F19E65C1E111BD03B45EA7CD9766</stEvt:instanceID>
                  <stEvt:when>2012-06-29T06:37:03+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65F0F19E65C1E111BD03B45EA7CD9766</stEvt:instanceID>
                  <stEvt:when>2012-06-29T06:41:18+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CCB0562591C1E1119DD3C588CBAF019C</stEvt:instanceID>
                  <stEvt:when>2012-06-29T10:21:33+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:70EEE3ED20C3E1119991E675F116486C</stEvt:instanceID>
                  <stEvt:when>2012-07-01T10:07:45+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:04BB734591C4E111A9529613F46C399F</stEvt:instanceID>
                  <stEvt:when>2012-07-03T06:00:01+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:06BB734591C4E111A9529613F46C399F</stEvt:instanceID>
                  <stEvt:when>2012-07-03T06:13:54+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2800.000000</stDim:w>
            <stDim:h>2600.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=99 G=41 B=92</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>98</xmpG:red>
                           <xmpG:green>40</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=148 B=179</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=202 B=217</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>202</xmpG:green>
                           <xmpG:blue>216</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=231 B=238</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=226 B=234</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>183</xmpG:red>
                           <xmpG:green>226</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=120 G=198 B=216</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>120</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>216</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=133 G=92 B=131</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>133</xmpG:red>
                           <xmpG:green>92</xmpG:green>
                           <xmpG:blue>131</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=181 B=203</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>203</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=170 G=220 B=230</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>170</xmpG:red>
                           <xmpG:green>220</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=203 B=215</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>203</xmpG:green>
                           <xmpG:blue>215</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=156 G=215 B=226</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>156</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2600 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2600 li
2800 2600 li
2800 0 li
cp
clp
[1 0 0 1 0 0 ]ct
2800 2600 mo
0 2600 li
0 0 li
2800 0 li
2800 2600 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.810574 .259586 .221195 .00234989 cmyk
f
1414.04 1661 mo
1247.16 1661 1091.9 1611.1 962.416 1525.43 cv
1010.9 1478.87 1034.95 1423.61 1034.95 1350.48 cv
1466.6 1350.48 li
1466.73 1350.48 1466.85 1350.48 1466.97 1350.48 cv
1775.31 1350.48 li
1775.31 1427.21 1801.78 1484.28 1855.19 1532.26 cv
1727.84 1613.75 1576.45 1661 1414.04 1661 cv
1900.01 1501.44 mo
1883.61 1453.44 1879.95 1403.41 1879.95 1350.48 cv
1931.11 1350.48 li
1940.83 1350.48 1949.9 1347.7 1957.56 1342.89 cv
1969.47 1366.46 1984.83 1388.7 2004.29 1410.01 cv
1972.19 1443.33 1937.32 1473.92 1900.01 1501.44 cv
913.73 1490.61 mo
878.391 1463.33 845.352 1433.24 814.929 1400.66 cv
830.462 1382.31 843.107 1363.25 853.252 1343.23 cv
860.799 1347.83 869.666 1350.48 879.151 1350.48 cv
930.31 1350.48 li
930.31 1399.44 927.178 1445.92 913.73 1490.61 cv
2074.37 1326.94 mo
2068.1 1286.74 2067.38 1246.34 2067.38 1204.83 cv
2067.38 1192.41 2067.44 1179.88 2067.44 1167.24 cv
2104.1 1167.24 2139.48 1161.79 2172.83 1151.66 cv
2147.18 1214.33 2113.97 1273.16 2074.37 1326.94 cv
739.321 1306.76 mo
720.067 1278.89 702.489 1249.76 686.746 1219.53 cv
687.75 1217.31 li
702.053 1219.25 716.587 1220.47 731.315 1220.92 cv
738.033 1247.23 li
743.161 1247.23 li
742.64 1267.23 741.548 1287.03 739.321 1306.76 cv
743.549 1167.48 mo
713.886 1167.43 685.064 1163.81 657.48 1157.03 cv
657.47 1157.01 657.45 1156.96 657.44 1156.93 cv
685.034 1163.67 713.881 1167.24 743.549 1167.24 cv
743.549 1167.32 743.549 1167.4 743.549 1167.48 cv
2133.94 449.549 mo
2112.39 445.546 2090.15 443.452 2067.44 443.452 cv
2052.97 443.452 li
2066.28 424.686 2082.54 408.146 2101.06 394.522 cv
2112.71 412.397 2123.68 430.745 2133.94 449.549 cv
695.776 446.578 mo
695.801 446.532 695.842 446.457 695.867 446.412 cv
711.673 444.305 727.815 443.215 744.197 443.215 cv
748.628 443.215 753.027 443.294 757.42 443.452 cv
743.549 443.452 li
727.349 443.452 711.413 444.515 695.776 446.578 cv
1990.16 443.452 mo
1467.34 443.452 li
1467.34 443.452 li
965.509 443.452 li
970.48 425.744 li
957.16 418.055 li
938.171 437.501 li
925.315 430.708 912.057 424.573 898.449 419.134 cv
901.126 392.217 li
886.673 386.958 li
871.362 409.387 li
857.554 404.955 843.435 401.226 829.042 398.242 cv
827.004 371.244 li
811.855 368.573 li
800.646 393.381 li
786.341 391.44 771.808 390.226 757.08 389.777 cv
750.362 363.458 li
748.309 363.458 li
897.075 156.651 1139.84 21.965 1414.04 21.965 cv
1687.34 21.965 1929.39 155.752 2078.29 361.393 cv
2076.8 362.48 2075.31 363.582 2073.85 364.7 cv
2053.02 349.748 li
2041.83 359.145 li
2053.01 382.4 li
2048.88 386.309 2044.88 390.36 2041.02 394.535 cv
2017.9 383.421 li
2008.51 394.621 li
2023.55 415.566 li
2020.15 420.128 2016.91 424.81 2013.82 429.601 cv
1989.17 422.682 li
1981.86 435.342 li
1990.16 443.452 li
level3{
gsave
clp
[819.518 0 0 819.518 1414.04 841.482 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~z!WW3#"TSQ'#lk#,%0-J1&HDq6'EA79(]X^>*<69D+TMcJ,le5O.0'\T/H?+X0`_[_2$"-d2usKh495r
m5QMDr6imr#8-0G)9EGn.:]_@3<!*m9=9B?>>QboE?j%AJA-EnPBE]CVC^(p\D[.?aEsEffG6f>lHO1k
rIgI>"JdNb'L'o7,M$t[1N=@37O:EW<PRo5CQOtYHRM%(MSeEUSTbT*YV&(]`W#72fWuE\lXrK+qYoYS
!Zlh('[N[I,\Ks$3]-fB7]dYc<^FM,@_(ISF__<tK`A9CPa#,dUa>c*YauVH]b<7fbbs45hcU'Sl~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[819.518 0 0 819.518 1414.04 841.482 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!!!!"!<N?+"9eu7#RLhG$k3[W&.oNf',2/s(Dn#/*$$(B+<_pR,UFcb-n-Vr/1iJ-0JP==1c7-K2`NfY
3]fGe5!M:u6:4.07Rp!@8kViP:/=\`;H$Op<``C+>$G6;?=.)K@Uiq[AnPdkC27X%D/O92EH6,BF`qtR
G^4U^I!pHnJ:W9'K7nr5LPUbCMMmFQNfK0^OckomQ'IZ%R$a;1S"-%@StD[LU8+N\V5C/hW2ZetX/rG+
Y-5(6Z*L^B['[6K[^WcV\[f;_]=Y_g]tM.o^V@S"_84"*_o'F2`Poj:a2c6@aN2KFb0%lLbKJ,Rc-=PZ
~>
<~zzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E6'!WiE)!WiH+!s8W-!s8Z/"9\i1"9\l3"U,)7"pP
89"pP;;#6tM?#RC\A#RC\B#mgnF$47+J$O[=N$k*OR%1NaV%M'']&.fBb&J5Tf&eYfj',2,q'c%Q$(Dm
u,)&aD4)]K_9*#ot>*ZcCF+<VgN+sS?Y,palb-RU;j.4H_r.kE5'/hSe10JP:;1G^jE2)R9N3&ioY3]]
>b4Zttn5X7V$~>
<~zz!!**$!<N<(!WrN,!s8W-!sA`0"9er4"U5/9#7(S@#RLeD#mgnE#mq"I$OdFP$k3XT%1WjX%Ls![%hB
3_&.fEc&eYik',)&o'GM8s'bqK"()@]&(`4,.)&X>2)B'P6*#ot>*??1B*ZcCF+!2UJ+<VgN+X&!Q+sJ
3U,9nEX,9nEY,U=W],paia-71&e-RU8i-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P,/hSb00/"t30/"t30JG
170ekC;1,:U?1,:U?1G^gC1G^gC1c.$G2)R6K2)R6K2E!HO2E!HO2E!HO2`EZS2`EZS2`EZS~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
2160.55 1902.62 mo
2087.01 1902.62 2027.39 1843 2027.39 1769.46 cv
2027.39 1695.91 2087.01 1636.29 2160.55 1636.29 cv
2234.1 1636.29 2293.72 1695.91 2293.72 1769.46 cv
2293.72 1843 2234.1 1902.62 2160.55 1902.62 cv
cp
2368.13 1779.2 mo
2368.13 1761.88 li
2337.12 1754.87 li
2336.45 1746.72 2335.24 1738.72 2333.5 1730.92 cv
2360.98 1714.58 li
2355.63 1698.1 li
2324.01 1701.02 li
2320.87 1693.52 2317.23 1686.3 2313.13 1679.37 cv
2334.22 1655.33 li
2324.04 1641.32 li
2294.83 1653.88 li
2289.55 1647.75 2283.86 1642 2277.81 1636.65 cv
2290.45 1607.25 li
2276.44 1597.07 li
2252.56 1618.02 li
2245.68 1613.83 2238.49 1610.11 2231.04 1606.88 cv
2233.97 1575.05 li
2217.5 1569.7 li
2201.27 1596.99 li
2193.48 1595.16 2185.5 1593.85 2177.36 1593.08 cv
2170.3 1561.88 li
2152.98 1561.88 li
2145.97 1592.89 li
2137.82 1593.55 2129.82 1594.77 2122.02 1596.5 cv
2105.68 1569.03 li
2089.21 1574.38 li
2092.12 1606 li
2084.63 1609.14 2077.4 1612.78 2070.47 1616.88 cv
2046.43 1595.79 li
2032.42 1605.97 li
2044.98 1635.19 li
2038.86 1640.46 2033.11 1646.15 2027.76 1652.2 cv
1998.35 1639.56 li
1988.17 1653.57 li
2009.12 1677.45 li
2004.94 1684.33 2001.21 1691.52 1997.98 1698.97 cv
1966.15 1696.04 li
1960.8 1712.51 li
1988.1 1728.75 li
1986.27 1736.53 1984.96 1744.51 1984.19 1752.65 cv
1952.98 1759.71 li
1952.98 1777.03 li
1983.99 1784.04 li
1984.66 1792.19 1985.88 1800.19 1987.61 1807.99 cv
1960.13 1824.33 li
1965.48 1840.81 li
1997.1 1837.89 li
2000.24 1845.38 2003.89 1852.61 2007.99 1859.54 cv
1986.89 1883.58 li
1997.07 1897.59 li
2026.28 1885.03 li
2031.56 1891.15 2037.25 1896.9 2043.3 1902.25 cv
2030.66 1931.66 li
2044.67 1941.84 li
2068.55 1920.89 li
2075.43 1925.08 2082.62 1928.8 2090.07 1932.04 cv
2087.14 1963.86 li
2103.61 1969.21 li
2119.84 1941.92 li
2127.63 1943.75 2135.61 1945.06 2143.75 1945.83 cv
2150.81 1977.03 li
2168.13 1977.03 li
2175.14 1946.02 li
2183.29 1945.36 2191.29 1944.14 2199.09 1942.41 cv
2215.43 1969.88 li
2231.9 1964.53 li
2228.99 1932.92 li
2236.49 1929.77 2243.71 1926.13 2250.64 1922.03 cv
2274.68 1943.12 li
2288.69 1932.94 li
2276.14 1903.73 li
2282.26 1898.45 2288.01 1892.76 2293.36 1886.71 cv
2322.76 1899.35 li
2332.94 1885.34 li
2311.99 1861.46 li
2316.18 1854.58 2319.9 1847.39 2323.13 1839.94 cv
2354.96 1842.87 li
2360.31 1826.4 li
2333.01 1810.16 li
2334.84 1802.38 2336.16 1794.4 2336.92 1786.26 cv
2368.13 1779.2 li
cp
.637751 .946044 .345495 .235782 cmyk
f
2687.6 1508.65 mo
2744.65 1381.35 2734.79 1266.46 2682.65 1170.87 cv
2440.05 1712.17 li
2541.83 1698.78 2632.42 1631.76 2687.6 1508.65 cv
cp
f
2440.05 1712.17 mo
1846.86 1712.17 li
1794.26 1781.36 1718.84 1982.64 1696.77 2043.52 cv
1696.77 2043.52 1800.79 2043.52 1823.38 2043.52 cv
1812 2119 1798.5 2156.09 1823.35 2183.28 cv
1804 2187 1783 2239 1809.94 2282.5 cv
1804 2347.95 1774.85 2600 1774.85 2600 cv
2543.5 2600 li
2543.5 2600 2513.67 1913.87 2440.05 1712.17 cv
cp
f
2440.35 1850.54 mo
2440.35 2130.94 li
2517.78 2130.94 2580.55 2068.17 2580.55 1990.74 cv
2580.55 1913.31 2517.78 1850.54 2440.35 1850.54 cv
cp
.47245 .0303044 .131777 3.0518e-5 cmyk
f
2440.35 2095.85 mo
2440.35 2081.62 li
2490.46 2081.62 2531.22 2040.85 2531.22 1990.74 cv
2531.22 1940.64 2490.46 1899.87 2440.35 1899.87 cv
2440.35 1885.64 li
2498.31 1885.64 2545.46 1932.79 2545.46 1990.74 cv
2545.46 2048.7 2498.31 2095.85 2440.35 2095.85 cv
cp
.637751 .946044 .345495 .235782 cmyk
f
2440.35 2055.39 mo
2440.35 2041.16 li
2468.15 2041.16 2490.76 2018.54 2490.76 1990.74 cv
2490.76 1962.94 2468.15 1940.33 2440.35 1940.33 cv
2440.35 1926.09 li
2475.99 1926.09 2504.99 1955.1 2504.99 1990.74 cv
2504.99 2026.39 2475.99 2055.39 2440.35 2055.39 cv
cp
f
2022.5 1844.69 mo
2028.95 1865.83 2017.04 1888.21 1995.9 1894.65 cv
1974.75 1901.1 1952.39 1889.19 1945.94 1868.04 cv
1939.49 1846.9 1951.4 1824.53 1972.54 1818.08 cv
1993.68 1811.63 2016.05 1823.55 2022.5 1844.69 cv
cp
.47245 .0303044 .131777 3.0518e-5 cmyk
f
1930.25 1844.69 mo
1936.7 1865.83 1924.8 1888.21 1903.66 1894.65 cv
1882.51 1901.1 1860.15 1889.19 1853.7 1868.04 cv
1847.25 1846.9 1859.16 1824.53 1880.3 1818.08 cv
1901.44 1811.63 1923.81 1823.55 1930.25 1844.69 cv
cp
f
673.965 2017.4 mo
562.916 2017.4 472.896 1927.38 472.896 1816.33 cv
472.896 1705.28 562.916 1615.26 673.965 1615.26 cv
785.014 1615.26 875.035 1705.28 875.035 1816.33 cv
875.035 1927.38 785.014 2017.4 673.965 2017.4 cv
cp
912.471 1827.78 mo
935.775 1821.83 li
935.774 1808.11 li
912.317 1802.13 li
912.003 1796.76 911.524 1791.44 910.861 1786.18 cv
932.752 1776.28 li
930.369 1762.77 li
906.281 1760.96 li
905.04 1755.73 903.639 1750.56 902.06 1745.47 cv
921.866 1731.95 li
917.174 1719.06 li
893.141 1721.45 li
891.008 1716.54 888.723 1711.7 886.275 1706.96 cv
903.448 1690.19 li
896.589 1678.31 li
873.301 1684.85 li
870.354 1680.39 867.262 1676.03 864.03 1671.79 cv
878.058 1652.25 li
869.239 1641.75 li
847.423 1652.24 li
843.756 1648.36 839.956 1644.62 836.039 1640.99 cv
846.466 1619.31 li
835.956 1610.49 li
816.308 1624.6 li
812.026 1621.42 807.635 1618.37 803.14 1615.47 cv
809.633 1592.35 li
797.751 1585.49 li
780.872 1602.77 li
776.104 1600.38 771.248 1598.14 766.303 1596.06 cv
768.677 1572.19 li
755.785 1567.5 li
742.169 1587.45 li
737.065 1585.93 731.893 1584.57 726.652 1583.39 cv
724.844 1559.45 li
711.333 1557.07 li
701.37 1579.12 li
696.1 1578.52 690.781 1578.08 685.412 1577.82 cv
679.463 1554.52 li
665.748 1554.52 li
659.76 1577.98 li
654.396 1578.29 649.075 1578.77 643.811 1579.43 cv
633.917 1557.54 li
620.41 1559.92 li
618.59 1584.01 li
613.362 1585.26 608.197 1586.66 603.109 1588.24 cv
589.587 1568.43 li
576.7 1573.12 li
579.09 1597.16 li
574.17 1599.29 569.333 1601.57 564.592 1604.02 cv
547.821 1586.85 li
535.944 1593.71 li
542.481 1617 li
538.022 1619.94 533.668 1623.03 529.425 1626.27 cv
509.888 1612.24 li
499.383 1621.05 li
509.873 1642.87 li
505.998 1646.54 502.25 1650.34 498.627 1654.26 cv
476.94 1643.83 li
468.126 1654.34 li
482.235 1673.99 li
479.052 1678.27 476.007 1682.66 473.11 1687.16 cv
449.979 1680.66 li
443.124 1692.54 li
460.409 1709.42 li
458.018 1714.19 455.772 1719.05 453.697 1723.99 cv
429.824 1721.62 li
425.135 1734.51 li
445.083 1748.13 li
443.564 1753.23 442.206 1758.4 441.026 1763.64 cv
417.087 1765.45 li
414.707 1778.96 li
436.756 1788.93 li
436.153 1794.2 435.713 1799.51 435.46 1804.88 cv
412.155 1810.83 li
412.157 1824.55 li
435.613 1830.54 li
435.928 1835.9 436.406 1841.22 437.07 1846.48 cv
415.178 1856.38 li
417.562 1869.89 li
441.649 1871.71 li
442.891 1876.93 444.292 1882.1 445.871 1887.18 cv
426.064 1900.71 li
430.756 1913.6 li
454.791 1911.21 li
456.923 1916.13 459.208 1920.96 461.655 1925.7 cv
444.482 1942.47 li
451.341 1954.35 li
474.631 1947.81 li
477.578 1952.27 480.669 1956.63 483.9 1960.87 cv
469.874 1980.41 li
478.691 1990.91 li
500.508 1980.42 li
504.175 1984.3 507.975 1988.04 511.892 1991.67 cv
501.466 2013.35 li
511.974 2022.17 li
531.624 2008.06 li
535.905 2011.24 540.296 2014.29 544.791 2017.18 cv
538.299 2040.31 li
550.178 2047.17 li
567.059 2029.89 li
571.827 2032.28 576.683 2034.52 581.628 2036.6 cv
579.255 2060.47 li
592.145 2065.16 li
605.762 2045.21 li
610.865 2046.73 616.038 2048.09 621.278 2049.27 cv
623.088 2073.21 li
636.596 2075.59 li
646.561 2053.54 li
651.831 2054.14 657.149 2054.58 662.517 2054.84 cv
668.468 2078.14 li
682.184 2078.14 li
688.171 2054.68 li
693.535 2054.37 698.855 2053.89 704.119 2053.23 cv
714.014 2075.12 li
727.521 2072.73 li
729.341 2048.65 li
734.568 2047.41 739.732 2046 744.82 2044.42 cv
758.343 2064.23 li
771.231 2059.54 li
768.841 2035.5 li
773.76 2033.37 778.597 2031.09 783.337 2028.64 cv
800.109 2045.81 li
811.987 2038.95 li
805.449 2015.67 li
809.908 2012.72 814.262 2009.63 818.505 2006.4 cv
838.042 2020.42 li
848.549 2011.6 li
838.058 1989.79 li
841.933 1986.12 845.68 1982.32 849.303 1978.4 cv
870.989 1988.83 li
879.806 1978.32 li
865.695 1958.67 li
868.879 1954.39 871.924 1950 874.82 1945.5 cv
897.95 1952 li
904.808 1940.12 li
887.521 1923.24 li
889.914 1918.47 892.158 1913.61 894.234 1908.67 cv
918.105 1911.04 li
922.796 1898.15 li
902.849 1884.53 li
904.367 1879.43 905.725 1874.26 906.905 1869.02 cv
930.843 1867.21 li
933.224 1853.7 li
911.175 1843.73 li
911.777 1838.46 912.218 1833.15 912.471 1827.78 cv
cp
f
141.792 1508.65 mo
84.7451 1381.35 94.6055 1266.46 146.746 1170.87 cv
389.345 1712.17 li
287.564 1698.78 196.972 1631.76 141.792 1508.65 cv
cp
f
389.345 1712.17 mo
982.533 1712.17 li
1035.13 1781.36 1110.55 1982.64 1132.63 2043.52 cv
1132.63 2043.52 1028.6 2043.52 1006.01 2043.52 cv
1017.39 2119 1030.89 2156.09 1006.04 2183.28 cv
1025.39 2187 1046.39 2239 1019.45 2282.5 cv
1025.39 2347.95 1054.54 2600 1054.54 2600 cv
285.892 2600 li
285.892 2600 315.722 1913.87 389.345 1712.17 cv
cp
f
389.041 1850.54 mo
389.041 2130.94 li
311.611 2130.94 248.84 2068.17 248.84 1990.74 cv
248.84 1913.31 311.611 1850.54 389.041 1850.54 cv
cp
.637751 .946044 .345495 .235782 cmyk
f
389.041 2095.85 mo
331.085 2095.85 283.936 2048.7 283.936 1990.74 cv
283.936 1932.79 331.085 1885.64 389.041 1885.64 cv
389.041 1899.87 li
338.934 1899.87 298.168 1940.64 298.168 1990.74 cv
298.168 2040.85 338.934 2081.62 389.041 2081.62 cv
389.041 2095.85 li
cp
.208194 .00354009 .0509041 3.0518e-5 cmyk
f
389.041 2055.39 mo
353.396 2055.39 324.397 2026.39 324.397 1990.74 cv
324.397 1955.1 353.396 1926.09 389.041 1926.09 cv
389.041 1940.33 li
361.244 1940.33 338.63 1962.94 338.63 1990.74 cv
338.63 2018.54 361.244 2041.16 389.041 2041.16 cv
389.041 2055.39 li
cp
f
806.896 1844.69 mo
800.445 1865.83 812.353 1888.21 833.492 1894.65 cv
854.636 1901.1 877.001 1889.19 883.453 1868.04 cv
889.9 1846.9 877.995 1824.53 856.849 1818.08 cv
835.707 1811.63 813.343 1823.55 806.896 1844.69 cv
cp
.637751 .946044 .345495 .235782 cmyk
f
899.136 1844.69 mo
892.688 1865.83 904.593 1888.21 925.732 1894.65 cv
946.878 1901.1 969.241 1889.19 975.692 1868.04 cv
982.141 1846.9 970.235 1824.53 949.089 1818.08 cv
927.949 1811.63 905.583 1823.55 899.136 1844.69 cv
cp
f
381.655 805.347 mo
381.655 605.479 543.681 443.452 743.549 443.452 cv
1467.34 443.452 li
1667.21 443.452 1829.23 605.479 1829.23 805.347 cv
1829.23 1005.21 1667.21 1167.24 1467.34 1167.24 cv
888.796 1167.24 li
888.796 1327.04 834.821 1429.87 638.951 1527.93 cv
749.801 1404.29 743.549 1291.74 743.549 1167.24 cv
543.681 1167.24 381.655 1005.21 381.655 805.347 cv
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
2227.91 781.599 mo
2109.54 781.599 2013.59 685.646 2013.59 567.284 cv
2013.59 448.921 2109.54 352.969 2227.91 352.969 cv
2346.27 352.969 2442.22 448.921 2442.22 567.284 cv
2442.22 685.646 2346.27 781.599 2227.91 781.599 cv
2482.12 579.486 mo
2506.96 573.144 li
2506.96 558.523 li
2481.96 552.142 li
2481.63 546.425 2481.12 540.754 2480.41 535.144 cv
2503.74 524.599 li
2501.2 510.199 li
2475.53 508.262 li
2474.2 502.69 2472.71 497.184 2471.03 491.761 cv
2492.14 477.349 li
2487.14 463.609 li
2461.52 466.159 li
2459.25 460.916 2456.81 455.76 2454.2 450.708 cv
2472.51 432.834 li
2465.2 420.169 li
2440.37 427.14 li
2437.23 422.387 2433.94 417.746 2430.49 413.224 cv
2445.44 392.401 li
2436.04 381.199 li
2412.79 392.382 li
2408.88 388.252 2404.83 384.258 2400.66 380.398 cv
2411.77 357.284 li
2400.57 347.884 li
2379.63 362.924 li
2375.06 359.531 2370.38 356.286 2365.59 353.199 cv
2372.51 328.546 li
2359.85 321.235 li
2341.86 339.661 li
2336.77 337.111 2331.6 334.719 2326.33 332.507 cv
2328.86 307.064 li
2315.12 302.061 li
2300.6 323.324 li
2295.16 321.706 2289.65 320.259 2284.07 319.001 cv
2282.14 293.487 li
2267.74 290.946 li
2257.12 314.449 li
2251.5 313.808 2245.83 313.338 2240.11 313.068 cv
2233.77 288.229 li
2219.15 288.229 li
2212.77 313.232 li
2207.05 313.567 2201.38 314.078 2195.77 314.784 cv
2185.22 291.45 li
2170.82 293.989 li
2168.88 319.665 li
2163.31 320.988 2157.81 322.483 2152.38 324.165 cv
2137.97 303.053 li
2124.23 308.054 li
2126.78 333.672 li
2121.54 335.944 2116.38 338.381 2111.33 340.989 cv
2093.45 322.685 li
2080.79 329.994 li
2087.76 354.819 li
2083.01 357.96 2078.37 361.256 2073.85 364.7 cv
2053.02 349.748 li
2041.83 359.145 li
2053.01 382.4 li
2048.88 386.309 2044.88 390.36 2041.02 394.535 cv
2017.9 383.421 li
2008.51 394.621 li
2023.55 415.566 li
2020.15 420.128 2016.91 424.81 2013.82 429.601 cv
1989.17 422.682 li
1981.86 435.342 li
2000.28 453.336 li
1997.73 458.418 1995.34 463.593 1993.13 468.864 cv
1967.68 466.336 li
1962.69 480.073 li
1983.95 494.588 li
1982.33 500.028 1980.88 505.542 1979.62 511.128 cv
1954.11 513.056 li
1951.57 527.453 li
1975.07 538.075 li
1974.43 543.692 1973.96 549.36 1973.69 555.082 cv
1948.85 561.424 li
1948.85 576.043 li
1973.86 582.426 li
1974.19 588.144 1974.7 593.813 1975.41 599.424 cv
1952.07 609.972 li
1954.61 624.368 li
1980.29 626.309 li
1981.61 631.879 1983.11 637.385 1984.79 642.806 cv
1963.68 657.221 li
1968.68 670.958 li
1994.3 668.41 li
1996.57 673.654 1999 678.809 2001.61 683.862 cv
1983.31 701.737 li
1990.62 714.398 li
2015.44 707.43 li
2018.58 712.181 2021.88 716.823 2025.32 721.345 cv
2010.37 742.169 li
2019.77 753.368 li
2043.02 742.186 li
2046.93 746.317 2050.98 750.31 2055.16 754.171 cv
2044.05 777.286 li
2055.25 786.683 li
2076.19 771.644 li
2080.75 775.038 2085.43 778.282 2090.22 781.37 cv
2083.3 806.023 li
2095.97 813.333 li
2113.96 794.908 li
2119.04 797.458 2124.22 799.849 2129.49 802.062 cv
2126.96 827.506 li
2140.7 832.505 li
2155.21 811.244 li
2160.65 812.863 2166.16 814.31 2171.75 815.568 cv
2173.68 841.083 li
2188.08 843.62 li
2198.7 820.12 li
2204.31 820.761 2209.98 821.231 2215.71 821.5 cv
2222.05 846.339 li
2236.67 846.339 li
2243.05 821.337 li
2248.77 821.001 2254.44 820.492 2260.05 819.785 cv
2270.59 843.117 li
2284.99 840.579 li
2286.93 814.904 li
2292.5 813.581 2298.01 812.086 2303.43 810.404 cv
2317.84 831.515 li
2331.58 826.514 li
2329.03 800.897 li
2334.28 798.625 2339.43 796.19 2344.48 793.581 cv
2362.36 811.883 li
2375.02 804.573 li
2368.05 779.75 li
2372.81 776.609 2377.45 773.314 2381.97 769.87 cv
2402.79 784.82 li
2413.99 775.422 li
2402.81 752.169 li
2406.94 748.26 2410.93 744.211 2414.79 740.034 cv
2437.91 751.147 li
2447.31 739.947 li
2432.27 719.003 li
2435.66 714.439 2438.91 709.76 2441.99 704.968 cv
2466.65 711.887 li
2473.96 699.225 li
2455.53 681.233 li
2458.08 676.15 2460.47 670.975 2462.69 665.703 cv
2488.13 668.233 li
2493.13 654.495 li
2471.87 639.981 li
2473.49 634.541 2474.93 629.028 2476.19 623.441 cv
2501.71 621.513 li
2504.24 607.115 li
2480.74 596.494 li
2481.38 590.878 2481.85 585.208 2482.12 579.486 cv
.47245 .0303044 .131777 3.0518e-5 cmyk
f
2429.33 805.347 mo
2429.33 605.479 2267.31 443.452 2067.44 443.452 cv
1343.65 443.452 li
1143.78 443.452 981.759 605.479 981.759 805.347 cv
981.759 1005.21 1143.78 1167.24 1343.65 1167.24 cv
1922.19 1167.24 li
1922.19 1327.04 1976.17 1429.87 2172.04 1527.93 cv
2061.19 1404.29 2067.44 1291.74 2067.44 1167.24 cv
2267.31 1167.24 2429.33 1005.21 2429.33 805.347 cv
.501518 .0399481 .127687 3.0518e-5 cmyk
f
1879.95 1350.48 mo
1931.11 1350.48 li
1958.63 1350.48 1980.95 1328.16 1980.95 1300.64 cv
1980.95 1217.08 li
1980.95 1189.55 1958.63 1167.24 1931.11 1167.24 cv
1293.81 1167.24 li
1293.81 1300.64 li
1293.81 1328.16 1316.12 1350.48 1343.65 1350.48 cv
1775.31 1350.48 li
1775.31 1465.6 1834.9 1536.46 1955.64 1598.77 cv
1890.46 1521.53 1879.95 1440.17 1879.95 1350.48 cv
.637751 .946044 .345495 .235782 cmyk
f
1721.33 1274.47 mo
1671.17 1274.47 1630.51 1233.81 1630.51 1183.65 cv
1630.51 1133.5 1671.17 1092.84 1721.33 1092.84 cv
1771.49 1092.84 1812.14 1133.5 1812.14 1183.65 cv
1812.14 1233.81 1771.49 1274.47 1721.33 1274.47 cv
1862.89 1190.3 mo
1862.89 1178.49 li
1841.74 1173.71 li
1841.29 1168.15 1840.46 1162.69 1839.28 1157.37 cv
1858.02 1146.23 li
1854.37 1134.99 li
1832.8 1136.98 li
1830.66 1131.87 1828.17 1126.94 1825.38 1122.21 cv
1839.76 1105.82 li
1832.82 1096.26 li
1812.9 1104.83 li
1809.3 1100.65 1805.42 1096.73 1801.29 1093.08 cv
1809.92 1073.03 li
1800.36 1066.09 li
1784.07 1080.38 li
1779.38 1077.52 1774.48 1074.98 1769.4 1072.77 cv
1771.4 1051.07 li
1760.16 1047.42 li
1749.09 1066.04 li
1743.78 1064.79 1738.34 1063.89 1732.79 1063.37 cv
1727.97 1042.09 li
1716.16 1042.09 li
1711.38 1063.24 li
1705.82 1063.69 1700.37 1064.52 1695.05 1065.7 cv
1683.9 1046.96 li
1672.67 1050.61 li
1674.66 1072.18 li
1669.54 1074.32 1664.62 1076.81 1659.89 1079.6 cv
1643.5 1065.22 li
1633.94 1072.16 li
1642.5 1092.08 li
1638.33 1095.68 1634.41 1099.56 1630.76 1103.69 cv
1610.71 1095.07 li
1603.76 1104.62 li
1618.05 1120.91 li
1615.2 1125.6 1612.66 1130.5 1610.45 1135.59 cv
1588.75 1133.58 li
1585.1 1144.82 li
1603.71 1155.89 li
1602.47 1161.2 1601.57 1166.64 1601.05 1172.19 cv
1579.76 1177 li
1579.76 1188.82 li
1600.91 1193.6 li
1601.37 1199.16 1602.2 1204.61 1603.38 1209.93 cv
1584.64 1221.08 li
1588.29 1232.31 li
1609.85 1230.32 li
1611.99 1235.43 1614.48 1240.36 1617.28 1245.09 cv
1602.89 1261.48 li
1609.84 1271.04 li
1629.76 1262.48 li
1633.35 1266.65 1637.23 1270.57 1641.36 1274.22 cv
1632.74 1294.27 li
1642.3 1301.22 li
1658.58 1286.93 li
1663.27 1289.78 1668.18 1292.32 1673.26 1294.53 cv
1671.26 1316.23 li
1682.49 1319.89 li
1693.56 1301.27 li
1698.87 1302.52 1704.32 1303.42 1709.87 1303.94 cv
1714.68 1325.22 li
1726.49 1325.22 li
1731.27 1304.07 li
1736.83 1303.62 1742.29 1302.79 1747.61 1301.61 cv
1758.75 1320.34 li
1769.99 1316.69 li
1768 1295.13 li
1773.11 1292.99 1778.04 1290.5 1782.77 1287.71 cv
1799.16 1302.09 li
1808.72 1295.15 li
1800.15 1275.23 li
1804.33 1271.63 1808.25 1267.75 1811.9 1263.62 cv
1831.95 1272.24 li
1838.89 1262.68 li
1824.6 1246.4 li
1827.46 1241.71 1830 1236.8 1832.2 1231.72 cv
1853.91 1233.72 li
1857.56 1222.49 li
1838.94 1211.42 li
1840.19 1206.11 1841.09 1200.67 1841.61 1195.11 cv
1862.89 1190.3 li
.521904 .711147 .269078 .0545052 cmyk
f
2172.04 1527.93 mo
2058.74 1471.21 1992.92 1412.9 1957.56 1342.89 cv
1971.61 1334.07 1980.95 1318.44 1980.95 1300.64 cv
1980.95 1217.08 li
1980.95 1189.55 1958.63 1167.24 1931.11 1167.24 cv
1841.04 1167.24 li
1840.59 1163.91 1840 1160.61 1839.28 1157.37 cv
1858.02 1146.23 li
1854.37 1134.99 li
1832.8 1136.98 li
1830.66 1131.87 1828.17 1126.94 1825.38 1122.21 cv
1839.76 1105.82 li
1832.82 1096.26 li
1812.9 1104.83 li
1809.3 1100.65 1805.42 1096.73 1801.29 1093.08 cv
1809.92 1073.03 li
1800.36 1066.09 li
1784.07 1080.38 li
1779.38 1077.52 1774.48 1074.98 1769.4 1072.77 cv
1771.4 1051.07 li
1760.16 1047.42 li
1749.09 1066.04 li
1743.78 1064.79 1738.34 1063.89 1732.79 1063.37 cv
1730.59 1053.67 li
1743.65 1039.83 1755.63 1024.97 1766.39 1009.2 cv
1780.03 1015.49 1795.22 1019 1811.23 1019 cv
1870.47 1019 1918.5 970.966 1918.5 911.73 cv
1918.5 864.913 1888.5 825.102 1846.69 810.459 cv
1848.32 794.129 li
1839.89 791.066 li
1829.68 806.025 li
1829.76 806.054 li
1829.58 806.023 1829.41 805.994 1829.23 805.964 cv
1829.23 805.757 1829.23 805.554 1829.23 805.347 cv
1829.23 751.062 1817.28 699.567 1795.86 653.353 cv
1796.15 653.604 li
1803.1 648.551 li
1796.86 634.038 li
1799.9 631.423 1802.75 628.608 1805.4 625.609 cv
1820 631.887 li
1825.06 624.933 li
1814.66 613.085 li
1816.74 609.671 1818.57 606.104 1820.18 602.407 cv
1835.98 603.862 li
1838.64 595.688 li
1825.07 587.622 li
1825.98 583.763 1826.64 579.812 1827.02 575.773 cv
1842.52 572.27 li
1842.52 563.676 li
1827.11 560.19 li
1826.78 556.151 1826.18 552.187 1825.32 548.324 cv
1838.97 540.207 li
1836.32 532.031 li
1820.62 533.475 li
1819.07 529.76 1817.25 526.181 1815.22 522.745 cv
1825.69 510.806 li
1820.64 503.853 li
1806.12 510.094 li
1803.51 507.059 1800.7 504.207 1797.7 501.553 cv
1803.98 486.951 li
1797.02 481.899 li
1785.17 492.295 li
1781.76 490.216 1778.19 488.376 1774.49 486.773 cv
1775.95 470.972 li
1767.77 468.317 li
1759.71 481.881 li
1755.85 480.973 1751.9 480.308 1747.86 479.927 cv
1744.36 464.435 li
1735.76 464.435 li
1732.28 479.846 li
1728.24 480.174 1724.28 480.773 1720.41 481.633 cv
1712.29 467.983 li
1704.12 470.639 li
1705.56 486.329 li
1701.85 487.888 1698.27 489.702 1694.83 491.737 cv
1682.89 481.261 li
1675.94 486.318 li
1682.18 500.831 li
1679.42 503.215 1676.8 505.764 1674.35 508.469 cv
1615.69 467.486 1544.33 443.452 1467.34 443.452 cv
1343.65 443.452 li
1343.65 443.452 li
2067.44 443.452 li
2267.31 443.452 2429.33 605.479 2429.33 805.347 cv
2429.33 1005.21 2267.31 1167.24 2067.44 1167.24 cv
2067.44 1179.88 2067.38 1192.41 2067.38 1204.83 cv
2067.38 1314.71 2072.45 1416.84 2172.04 1527.93 cv
1810.66 1167.24 mo
1631.99 1167.24 li
1639.72 1124.92 1676.78 1092.84 1721.33 1092.84 cv
1765.88 1092.84 1802.94 1124.92 1810.66 1167.24 cv
1601.62 1167.24 mo
1468.04 1167.24 li
1510.13 1167.16 1550.54 1159.89 1588.09 1146.6 cv
1603.71 1155.89 li
1602.84 1159.61 1602.14 1163.4 1601.62 1167.24 cv
1811.23 1002.05 mo
1798.63 1002.05 1786.63 999.469 1775.73 994.809 cv
1806.75 944.425 1825.77 885.866 1828.8 823.109 cv
1870.28 831.288 1901.55 867.855 1901.55 911.73 cv
1901.55 961.611 1861.11 1002.05 1811.23 1002.05 cv
1755.79 586.768 mo
1745.59 573.326 1734.47 560.619 1722.52 548.741 cv
1727.01 544.658 1732.98 542.169 1739.52 542.169 cv
1753.48 542.169 1764.79 553.483 1764.79 567.433 cv
1764.79 575.191 1761.29 582.133 1755.79 586.768 cv
.501518 .0399481 .127687 3.0518e-5 cmyk
f
1957.56 1342.89 mo
1931.79 1291.86 1922.19 1234.61 1922.19 1167.24 cv
1841.04 1167.24 li
1841.04 1167.24 1841.04 1167.24 1841.04 1167.24 cv
1931.11 1167.24 li
1958.63 1167.24 1980.95 1189.55 1980.95 1217.08 cv
1980.95 1300.64 li
1980.95 1318.44 1971.61 1334.07 1957.56 1342.89 cv
1957.56 1342.89 li
1810.66 1167.24 mo
1631.99 1167.24 li
1631.99 1167.24 li
1810.66 1167.24 li
1810.66 1167.24 li
1601.62 1167.24 mo
1467.34 1167.24 li
1467.57 1167.24 1467.81 1167.24 1468.04 1167.24 cv
1601.62 1167.24 li
1601.62 1167.24 1601.62 1167.24 1601.62 1167.24 cv
.627527 .509575 .230533 .0202945 cmyk
f
1841.04 1167.24 mo
1810.66 1167.24 li
1810.66 1167.24 li
1802.94 1124.92 1765.88 1092.84 1721.33 1092.84 cv
1676.78 1092.84 1639.72 1124.92 1631.99 1167.24 cv
1631.99 1167.24 li
1601.62 1167.24 li
1601.62 1167.24 1601.62 1167.24 1601.62 1167.24 cv
1602.14 1163.4 1602.84 1159.61 1603.71 1155.89 cv
1588.09 1146.6 li
1642.84 1127.23 1691.54 1095.05 1730.59 1053.67 cv
1732.79 1063.37 li
1738.34 1063.89 1743.78 1064.79 1749.09 1066.04 cv
1760.16 1047.42 li
1771.4 1051.07 li
1769.4 1072.77 li
1774.48 1074.98 1779.38 1077.52 1784.07 1080.38 cv
1800.36 1066.09 li
1809.92 1073.03 li
1801.29 1093.08 li
1805.42 1096.73 1809.3 1100.65 1812.9 1104.83 cv
1832.82 1096.26 li
1839.76 1105.82 li
1825.38 1122.21 li
1828.17 1126.94 1830.66 1131.87 1832.8 1136.98 cv
1854.37 1134.99 li
1858.02 1146.23 li
1839.28 1157.37 li
1840 1160.61 1840.59 1163.91 1841.04 1167.24 cv
1841.04 1167.24 1841.04 1167.24 1841.04 1167.24 cv
.544244 .374762 .188998 .000885023 cmyk
f
930.31 1350.48 mo
879.151 1350.48 li
851.623 1350.48 829.307 1328.16 829.307 1300.64 cv
829.307 1217.08 li
829.307 1189.56 851.623 1167.24 879.151 1167.24 cv
1516.45 1167.24 li
1516.45 1300.64 li
1516.45 1328.16 1494.13 1350.48 1466.6 1350.48 cv
1034.95 1350.48 li
1034.95 1465.61 975.355 1536.46 854.619 1598.78 cv
919.801 1521.53 930.31 1440.17 930.31 1350.48 cv
.637751 .946044 .345495 .235782 cmyk
f
1122.34 1301.48 mo
1080.08 1301.48 1045.83 1267.22 1045.83 1224.97 cv
1045.83 1182.71 1080.08 1148.46 1122.34 1148.46 cv
1164.59 1148.46 1198.85 1182.71 1198.85 1224.97 cv
1198.85 1267.22 1164.59 1301.48 1122.34 1301.48 cv
1213.09 1229.32 mo
1221.96 1227.06 li
1221.96 1221.84 li
1213.04 1219.56 li
1212.91 1217.52 1212.73 1215.5 1212.48 1213.49 cv
1220.81 1209.73 li
1219.9 1204.59 li
1210.74 1203.9 li
1210.27 1201.91 1209.73 1199.94 1209.13 1198.01 cv
1216.67 1192.86 li
1214.88 1187.96 li
1205.74 1188.87 li
1204.93 1186.99 1204.06 1185.15 1203.13 1183.35 cv
1209.66 1176.97 li
1207.05 1172.45 li
1198.19 1174.94 li
1197.07 1173.24 1195.89 1171.58 1194.66 1169.97 cv
1200 1162.54 li
1196.64 1158.54 li
1188.34 1162.53 li
1186.95 1161.05 1185.5 1159.63 1184.01 1158.25 cv
1187.98 1150 li
1183.98 1146.64 li
1176.5 1152.01 li
1174.87 1150.8 1173.2 1149.64 1171.49 1148.54 cv
1173.96 1139.74 li
1169.44 1137.13 li
1163.02 1143.71 li
1161.2 1142.8 1159.36 1141.94 1157.47 1141.15 cv
1158.38 1132.07 li
1153.47 1130.28 li
1148.29 1137.87 li
1146.35 1137.3 1144.38 1136.78 1142.39 1136.33 cv
1141.7 1127.22 li
1136.56 1126.32 li
1132.76 1134.71 li
1130.76 1134.48 1128.74 1134.31 1126.69 1134.21 cv
1124.43 1125.34 li
1119.21 1125.34 li
1116.93 1134.27 li
1114.89 1134.39 1112.87 1134.57 1110.86 1134.83 cv
1107.1 1126.49 li
1101.96 1127.4 li
1101.27 1136.57 li
1099.28 1137.04 1097.31 1137.57 1095.38 1138.17 cv
1090.23 1130.64 li
1085.32 1132.42 li
1086.24 1141.57 li
1084.36 1142.38 1082.52 1143.25 1080.72 1144.18 cv
1074.34 1137.65 li
1069.82 1140.26 li
1072.31 1149.12 li
1070.61 1150.24 1068.95 1151.41 1067.34 1152.64 cv
1059.9 1147.31 li
1055.91 1150.66 li
1059.9 1158.97 li
1058.42 1160.36 1057 1161.81 1055.62 1163.3 cv
1047.37 1159.33 li
1044.01 1163.33 li
1049.38 1170.8 li
1048.17 1172.43 1047.01 1174.1 1045.91 1175.81 cv
1037.11 1173.35 li
1034.5 1177.86 li
1041.08 1184.29 li
1040.16 1186.1 1039.31 1187.95 1038.52 1189.83 cv
1029.44 1188.93 li
1027.65 1193.83 li
1035.24 1199.01 li
1034.67 1200.96 1034.15 1202.93 1033.7 1204.92 cv
1024.59 1205.61 li
1023.68 1210.75 li
1032.07 1214.54 li
1031.85 1216.55 1031.68 1218.57 1031.58 1220.61 cv
1022.71 1222.88 li
1022.71 1228.1 li
1031.64 1230.38 li
1031.76 1232.41 1031.94 1234.44 1032.19 1236.44 cv
1023.86 1240.21 li
1024.77 1245.35 li
1033.94 1246.04 li
1034.41 1248.03 1034.94 1249.99 1035.54 1251.93 cv
1028.01 1257.07 li
1029.79 1261.98 li
1038.94 1261.07 li
1039.75 1262.94 1040.62 1264.78 1041.55 1266.59 cv
1035.01 1272.97 li
1037.63 1277.49 li
1046.49 1275 li
1047.61 1276.7 1048.78 1278.35 1050.01 1279.97 cv
1044.68 1287.4 li
1048.03 1291.4 li
1056.33 1287.41 li
1057.73 1288.88 1059.18 1290.31 1060.67 1291.69 cv
1056.7 1299.94 li
1060.7 1303.29 li
1068.17 1297.93 li
1069.8 1299.14 1071.47 1300.29 1073.18 1301.4 cv
1070.71 1310.2 li
1075.23 1312.81 li
1081.66 1306.23 li
1083.47 1307.14 1085.32 1308 1087.2 1308.79 cv
1086.3 1317.87 li
1091.2 1319.65 li
1096.38 1312.06 li
1098.33 1312.64 1100.3 1313.16 1102.29 1313.6 cv
1102.98 1322.71 li
1108.12 1323.62 li
1111.91 1315.23 li
1113.92 1315.46 1115.94 1315.63 1117.98 1315.73 cv
1120.25 1324.59 li
1125.46 1324.59 li
1127.74 1315.66 li
1129.78 1315.55 1131.81 1315.36 1133.81 1315.11 cv
1137.58 1323.44 li
1142.72 1322.53 li
1143.41 1313.37 li
1145.4 1312.9 1147.36 1312.36 1149.3 1311.76 cv
1154.45 1319.3 li
1159.35 1317.51 li
1158.44 1308.37 li
1160.31 1307.56 1162.15 1306.69 1163.96 1305.76 cv
1170.34 1312.29 li
1174.86 1309.68 li
1172.37 1300.82 li
1174.07 1299.7 1175.72 1298.52 1177.34 1297.29 cv
1184.77 1302.63 li
1188.77 1299.27 li
1184.78 1290.97 li
1186.25 1289.58 1187.68 1288.13 1189.06 1286.64 cv
1197.31 1290.61 li
1200.66 1286.61 li
1195.29 1279.13 li
1196.51 1277.5 1197.66 1275.83 1198.77 1274.12 cv
1207.57 1276.59 li
1210.18 1272.07 li
1203.6 1265.65 li
1204.51 1263.83 1205.36 1261.98 1206.15 1260.11 cv
1215.24 1261 li
1217.02 1256.1 li
1209.43 1250.92 li
1210.01 1248.98 1210.53 1247.01 1210.98 1245.02 cv
1220.08 1244.33 li
1220.99 1239.19 li
1212.6 1235.4 li
1212.83 1233.39 1213 1231.37 1213.09 1229.32 cv
.521904 .711147 .269078 .0545052 cmyk
f
937.623 1111.55 mo
890.962 1097.37 857.008 1054.02 857.008 1002.73 cv
857.008 939.915 907.924 888.998 970.733 888.998 cv
977.848 888.998 984.811 889.652 991.564 890.902 cv
995.878 908.703 1001.51 925.982 1008.35 942.646 cv
1005.97 944.73 li
1003.33 943.127 1000.58 941.701 997.726 940.461 cv
998.849 928.274 li
992.54 926.224 li
986.324 936.679 li
983.343 935.977 980.286 935.475 977.167 935.18 cv
974.466 923.229 li
967.831 923.229 li
965.148 935.105 li
962.024 935.359 958.963 935.827 955.973 936.49 cv
949.716 925.966 li
943.406 928.018 li
944.523 940.126 li
941.652 941.329 938.884 942.726 936.231 944.296 cv
927.024 936.216 li
921.656 940.118 li
926.467 951.306 li
924.123 953.324 921.92 955.505 919.872 957.821 cv
908.61 952.978 li
904.71 958.346 li
912.736 967.494 li
911.132 970.127 909.706 972.88 908.468 975.735 cv
896.278 974.611 li
894.227 980.921 li
904.683 987.136 li
903.981 990.118 903.479 993.175 903.186 996.294 cv
891.232 998.995 li
891.232 1005.63 li
903.111 1008.31 li
903.365 1011.44 903.831 1014.5 904.494 1017.49 cv
893.97 1023.75 li
896.02 1030.06 li
908.13 1028.94 li
909.332 1031.81 910.73 1034.58 912.3 1037.23 cv
904.222 1046.44 li
908.12 1051.8 li
919.308 1046.99 li
921.328 1049.34 923.506 1051.54 925.824 1053.59 cv
920.984 1064.85 li
926.35 1068.75 li
935.496 1060.73 li
938.13 1062.33 940.884 1063.76 943.738 1065 cv
942.615 1077.18 li
948.925 1079.23 li
955.141 1068.78 li
958.122 1069.48 961.179 1069.98 964.297 1070.28 cv
966.999 1082.23 li
973.633 1082.23 li
976.319 1070.35 li
979.441 1070.1 982.503 1069.63 985.493 1068.97 cv
987.974 1073.14 li
972.38 1087.35 955.524 1100.22 937.623 1111.55 cv
970.733 1053.73 mo
942.566 1053.73 919.732 1030.9 919.732 1002.73 cv
919.732 974.563 942.566 951.729 970.733 951.729 cv
998.9 951.729 1021.73 974.563 1021.73 1002.73 cv
1021.73 1030.9 998.9 1053.73 970.733 1053.73 cv
1037.01 1018.46 mo
1036.78 1018.32 li
1037.48 1015.34 1037.99 1012.28 1038.28 1009.16 cv
1043.41 1008 li
1043.57 1008.24 1043.73 1008.47 1043.89 1008.7 cv
1041.65 1012 1039.36 1015.24 1037.01 1018.46 cv
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
638.951 1527.93 mo
725.627 1431.25 740.707 1341.36 743.161 1247.23 cv
753.41 1247.23 li
760.154 1220.82 li
774.877 1220.26 789.402 1218.94 803.695 1216.89 cv
814.859 1241.59 li
829.307 1239.04 li
829.307 1300.64 li
829.307 1318.68 838.894 1334.48 853.252 1343.23 cv
843.107 1363.25 830.462 1382.31 814.929 1400.66 cv
776.254 1446.32 719.647 1487.53 638.951 1527.93 cv
f
853.252 1343.23 mo
853.252 1343.23 li
838.894 1334.48 829.307 1318.68 829.307 1300.64 cv
829.307 1239.04 li
830.004 1238.92 li
832.052 1211.82 li
846.421 1208.72 860.514 1204.89 874.289 1200.35 cv
886.674 1218.5 li
882.599 1264.51 872.344 1305.56 853.252 1343.23 cv
.34757 .170962 .119753 3.0518e-5 cmyk
f
744.197 1167.48 mo
743.978 1167.48 743.769 1167.48 743.549 1167.48 cv
743.549 1167.4 743.549 1167.32 743.549 1167.24 cv
696.546 1167.24 651.63 1158.28 610.429 1141.97 cv
476.646 1088.76 382.066 958.092 382.066 805.347 cv
382.066 652.307 476.988 521.444 611.178 468.426 cv
652.178 452.304 696.827 443.452 743.549 443.452 cv
757.42 443.452 li
876.566 447.733 981.05 509.564 1043.89 601.993 cv
1004.45 659.95 981.391 729.957 981.391 805.347 cv
981.391 805.347 li
981.391 805.347 li
981.391 826.939 983.285 848.106 986.911 868.658 cv
981.607 868.012 976.212 867.668 970.733 867.668 cv
970.187 867.668 969.646 867.701 969.101 867.71 cv
963.97 847.626 li
952.688 847.626 li
947.043 869.723 li
947.37 869.723 li
938.952 871.191 930.802 873.425 922.997 876.376 cv
911.331 859.284 li
900.727 863.152 li
902.985 885.846 li
903.278 885.739 li
895.954 889.971 889.069 894.867 882.699 900.35 cv
865.859 888.255 li
857.21 895.512 li
867.096 916.068 li
867.356 915.851 li
861.94 922.289 857.122 929.243 852.97 936.624 cv
833.032 931.028 li
827.388 940.801 li
843.711 956.74 li
843.732 956.704 li
840.923 964.458 838.816 972.547 837.461 980.891 cv
816.817 982.447 li
814.855 993.564 li
835.641 1002.96 li
835.68 1002.75 li
835.68 1011.31 836.512 1019.67 838.037 1027.79 cv
819.162 1036.31 li
821.125 1047.43 li
843.868 1049.15 li
846.753 1057.03 850.372 1064.55 854.606 1071.67 cv
839.792 1086.13 li
845.438 1095.9 li
867.397 1089.73 li
867.245 1089.47 li
872.663 1095.93 878.667 1101.88 885.187 1107.22 cv
876.214 1125.88 li
884.861 1133.14 li
903.393 1119.84 li
903.158 1119.64 li
906.677 1121.68 910.294 1123.56 914.002 1125.28 cv
863.356 1152.22 805.562 1167.48 744.197 1167.48 cv
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
1468.04 1167.24 mo
1467.67 1167.24 li
1509.85 1167.16 1550.34 1159.86 1587.96 1146.52 cv
1588.09 1146.6 li
1550.54 1159.89 1510.13 1167.16 1468.04 1167.24 cv
1730.59 1053.67 mo
1730.52 1053.36 li
1743.5 1039.57 1755.41 1024.77 1766.12 1009.08 cv
1766.21 1009.12 1766.3 1009.16 1766.39 1009.2 cv
1755.63 1024.97 1743.65 1039.83 1730.59 1053.67 cv
.311803 .00500496 .0834974 3.0518e-5 cmyk
f
1467.34 1167.24 mo
1466.97 1167.24 li
1467.2 1167.24 1467.44 1167.24 1467.67 1167.24 cv
1468.04 1167.24 li
1467.81 1167.24 1467.57 1167.24 1467.34 1167.24 cv
.331456 .0825208 .104341 3.0518e-5 cmyk
f
1588.09 1146.6 mo
1587.96 1146.52 li
1642.76 1127.09 1691.48 1094.83 1730.52 1053.36 cv
1730.59 1053.67 li
1691.54 1095.05 1642.84 1127.23 1588.09 1146.6 cv
.316045 .0612802 .0943313 3.0518e-5 cmyk
f
1293.81 1167.24 mo
1196.62 1167.24 li
1200 1162.54 li
1196.64 1158.54 li
1188.34 1162.53 li
1186.95 1161.05 1185.5 1159.63 1184.01 1158.25 cv
1187.98 1150 li
1183.98 1146.64 li
1176.5 1152.01 li
1174.87 1150.8 1173.2 1149.64 1171.49 1148.54 cv
1173.96 1139.74 li
1169.44 1137.13 li
1163.02 1143.71 li
1161.2 1142.8 1159.36 1141.94 1157.47 1141.15 cv
1158.38 1132.07 li
1153.47 1130.28 li
1148.29 1137.87 li
1146.35 1137.3 1144.38 1136.78 1142.39 1136.33 cv
1141.7 1127.22 li
1136.56 1126.32 li
1132.76 1134.71 li
1130.76 1134.48 1128.74 1134.31 1126.69 1134.21 cv
1124.43 1125.34 li
1119.21 1125.34 li
1116.93 1134.27 li
1114.89 1134.39 1112.87 1134.57 1110.86 1134.83 cv
1107.1 1126.49 li
1101.96 1127.4 li
1101.27 1136.57 li
1099.28 1137.04 1097.31 1137.57 1095.38 1138.17 cv
1090.23 1130.64 li
1085.32 1132.42 li
1086.24 1141.57 li
1084.36 1142.38 1082.52 1143.25 1080.72 1144.18 cv
1074.34 1137.65 li
1069.82 1140.26 li
1072.31 1149.12 li
1070.61 1150.24 1068.95 1151.41 1067.34 1152.64 cv
1059.9 1147.31 li
1055.91 1150.66 li
1059.9 1158.97 li
1058.42 1160.36 1057 1161.81 1055.62 1163.3 cv
1047.37 1159.33 li
1044.01 1163.33 li
1046.82 1167.24 li
968.577 1167.24 li
965.764 1157.22 li
969.106 1155.11 972.416 1152.96 975.692 1150.76 cv
977.497 1157.83 li
988.78 1157.83 li
993.887 1137.82 li
995.088 1136.92 996.285 1136.01 997.475 1135.09 cv
999.604 1134.66 1001.72 1134.19 1003.81 1133.66 cv
1023.51 1147.81 li
1028.44 1143.68 li
1030.14 1146.16 li
1040.74 1142.3 li
1038.48 1119.6 li
1038.21 1119.69 li
1045.53 1115.46 1052.41 1110.57 1058.77 1105.09 cv
1075.61 1117.19 li
1084.26 1109.94 li
1076.01 1092.8 li
1078.74 1094.11 li
1088.62 1082.33 li
1084.12 1076.06 li
1085.65 1073.7 1087.11 1071.28 1088.5 1068.82 cv
1098.08 1071.51 li
1162.4 1130.8 1248.25 1167.06 1342.58 1167.24 cv
1293.81 1167.24 li
1172.55 1167.24 mo
1072.12 1167.24 li
1085.56 1155.54 1103.12 1148.46 1122.34 1148.46 cv
1141.55 1148.46 1159.12 1155.54 1172.55 1167.24 cv
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
1343.29 1167.24 mo
1293.81 1167.24 li
1293.81 1167.24 li
1342.58 1167.24 li
1342.81 1167.24 1343.05 1167.24 1343.29 1167.24 cv
.34757 .170962 .119753 3.0518e-5 cmyk
f
1343.29 1167.24 mo
1196.62 1167.24 li
1293.81 1167.24 li
1343.29 1167.24 li
1343.29 1167.24 li
1172.55 1167.24 mo
1072.12 1167.24 li
1072.12 1167.24 li
1172.55 1167.24 li
1172.55 1167.24 li
1046.82 1167.24 mo
968.577 1167.24 li
1046.82 1167.24 li
f
1196.62 1167.24 mo
1172.55 1167.24 li
1172.55 1167.24 li
1172.55 1167.24 li
1159.12 1155.54 1141.55 1148.46 1122.34 1148.46 cv
1103.12 1148.46 1085.56 1155.54 1072.12 1167.24 cv
1072.12 1167.24 li
1072.12 1167.24 li
1046.82 1167.24 li
1044.01 1163.33 li
1047.37 1159.33 li
1055.62 1163.3 li
1057 1161.81 1058.42 1160.36 1059.9 1158.97 cv
1055.91 1150.66 li
1059.9 1147.31 li
1067.34 1152.64 li
1068.95 1151.41 1070.61 1150.24 1072.31 1149.12 cv
1069.82 1140.26 li
1074.34 1137.65 li
1080.72 1144.18 li
1082.52 1143.25 1084.36 1142.38 1086.24 1141.57 cv
1085.32 1132.42 li
1090.23 1130.64 li
1095.38 1138.17 li
1097.31 1137.57 1099.28 1137.04 1101.27 1136.57 cv
1101.96 1127.4 li
1107.1 1126.49 li
1110.86 1134.83 li
1112.87 1134.57 1114.89 1134.39 1116.93 1134.27 cv
1119.21 1125.34 li
1124.43 1125.34 li
1126.69 1134.21 li
1128.74 1134.31 1130.76 1134.48 1132.76 1134.71 cv
1136.56 1126.32 li
1141.7 1127.22 li
1142.39 1136.33 li
1144.38 1136.78 1146.35 1137.3 1148.29 1137.87 cv
1153.47 1130.28 li
1158.38 1132.07 li
1157.47 1141.15 li
1159.36 1141.94 1161.2 1142.8 1163.02 1143.71 cv
1169.44 1137.13 li
1173.96 1139.74 li
1171.49 1148.54 li
1173.2 1149.64 1174.87 1150.8 1176.5 1152.01 cv
1183.98 1146.64 li
1187.98 1150 li
1184.01 1158.25 li
1185.5 1159.63 1186.95 1161.05 1188.34 1162.53 cv
1196.64 1158.54 li
1200 1162.54 li
1196.62 1167.24 li
.314855 .12488 .108644 3.0518e-5 cmyk
f
1829.23 805.964 mo
1829.11 805.943 1828.99 805.923 1828.86 805.903 cv
1828.87 805.72 1828.87 805.53 1828.87 805.347 cv
1828.87 805.347 li
1828.87 805.347 li
1828.87 750.854 1816.81 699.161 1795.24 652.811 cv
1795.86 653.353 li
1817.28 699.567 1829.23 751.062 1829.23 805.347 cv
1829.23 805.554 1829.23 805.757 1829.23 805.964 cv
1755.57 586.955 mo
1745.38 573.515 1734.26 560.795 1722.33 548.915 cv
1722.4 548.857 1722.46 548.798 1722.52 548.741 cv
1734.47 560.619 1745.59 573.326 1755.79 586.768 cv
1755.72 586.831 1755.64 586.893 1755.57 586.955 cv
.311803 .00500496 .0834974 3.0518e-5 cmyk
f
1078.73 558.412 mo
1076.15 554.925 1073.52 551.48 1070.83 548.077 cv
1086.67 526.03 li
1076.78 514.25 li
1052.21 526.064 li
1042.41 515.269 1032.06 504.994 1021.19 495.281 cv
1032.96 470.804 li
1021.18 460.92 li
999.04 476.815 li
987.543 467.884 975.569 459.543 963.155 451.837 cv
965.509 443.452 li
1343.65 443.452 li
1343.65 443.452 li
1343.29 443.452 li
1238.87 443.452 1144.78 487.682 1078.73 558.412 cv
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
1775.73 994.809 mo
1775.64 994.767 1775.54 994.727 1775.44 994.685 cv
1806.43 944.307 1825.42 885.774 1828.44 823.038 cv
1828.56 823.062 1828.68 823.085 1828.8 823.109 cv
1825.77 885.866 1806.75 944.425 1775.73 994.809 cv
1674.21 508.626 mo
1615.5 467.548 1544.06 443.452 1466.97 443.452 cv
1343.65 443.452 li
1343.65 443.452 li
1467.34 443.452 li
1544.33 443.452 1615.69 467.486 1674.35 508.469 cv
1674.3 508.521 1674.25 508.574 1674.21 508.626 cv
.311803 .00500496 .0834974 3.0518e-5 cmyk
f
1828.87 805.347 mo
1828.87 605.479 1666.84 443.452 1466.97 443.452 cv
1343.29 443.452 li
1143.42 443.452 981.391 605.479 981.391 805.347 cv
981.391 1005.21 1143.42 1167.24 1343.29 1167.24 cv
1466.97 1167.24 li
1666.84 1167.24 1828.87 1005.21 1828.87 805.347 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
473.443 1046.19 mo
473.443 1039.71 478.696 1034.46 485.176 1034.46 cv
491.656 1034.46 496.909 1039.71 496.909 1046.19 cv
496.909 1052.67 491.656 1057.93 485.176 1057.93 cv
478.696 1057.93 473.443 1052.67 473.443 1046.19 cv
cp
533.007 1048.44 mo
533.007 1044.45 li
525.851 1042.83 li
525.697 1040.95 525.419 1039.11 525.021 1037.32 cv
531.36 1033.55 li
530.127 1029.75 li
522.839 1030.42 li
522.116 1028.7 521.272 1027.04 520.328 1025.44 cv
525.192 1019.9 li
522.846 1016.67 li
516.106 1019.57 li
514.891 1018.16 513.585 1016.83 512.192 1015.6 cv
515.107 1008.82 li
511.878 1006.47 li
506.375 1011.3 li
504.792 1010.33 503.133 1009.48 501.417 1008.74 cv
502.092 1001.4 li
498.297 1000.16 li
494.552 1006.46 li
492.759 1006.04 490.923 1005.73 489.048 1005.56 cv
487.422 998.362 li
483.431 998.362 li
481.814 1005.52 li
479.938 1005.67 478.097 1005.95 476.301 1006.35 cv
472.531 1000.01 li
468.735 1001.24 li
469.406 1008.53 li
467.682 1009.25 466.018 1010.1 464.423 1011.04 cv
458.879 1006.18 li
455.649 1008.52 li
458.548 1015.26 li
457.14 1016.48 455.813 1017.78 454.583 1019.18 cv
447.801 1016.26 li
445.454 1019.49 li
450.283 1024.99 li
449.318 1026.58 448.465 1028.24 447.719 1029.95 cv
440.381 1029.28 li
439.146 1033.07 li
445.447 1036.82 li
445.025 1038.61 444.717 1040.45 444.541 1042.32 cv
437.346 1043.95 li
437.346 1047.94 li
444.502 1049.56 li
444.655 1051.43 444.934 1053.27 445.331 1055.07 cv
438.993 1058.84 li
440.226 1062.63 li
447.513 1061.96 li
448.237 1063.69 449.079 1065.35 450.024 1066.95 cv
445.16 1072.49 li
447.506 1075.72 li
454.247 1072.82 li
455.461 1074.23 456.767 1075.55 458.16 1076.79 cv
455.245 1083.57 li
458.474 1085.92 li
463.977 1081.09 li
465.561 1082.05 467.22 1082.91 468.936 1083.65 cv
468.259 1090.99 li
472.056 1092.22 li
475.802 1085.92 li
477.594 1086.34 479.429 1086.65 481.304 1086.83 cv
482.93 1094.02 li
486.921 1094.02 li
488.539 1086.87 li
490.415 1086.72 492.256 1086.44 494.052 1086.04 cv
497.82 1092.38 li
501.616 1091.14 li
500.946 1083.86 li
502.671 1083.13 504.333 1082.29 505.929 1081.35 cv
511.473 1086.21 li
514.702 1083.86 li
511.804 1077.12 li
513.213 1075.91 514.538 1074.6 515.77 1073.21 cv
522.552 1076.12 li
524.897 1072.9 li
520.069 1067.39 li
521.034 1065.81 521.888 1064.15 522.633 1062.43 cv
529.972 1063.11 li
531.205 1059.31 li
524.905 1055.57 li
525.327 1053.78 525.635 1051.94 525.812 1050.07 cv
533.007 1048.44 li
cp
.644617 .0856947 .172274 3.0518e-5 cmyk
f
1712.93 1209.28 mo
1712.93 1204.64 1716.69 1200.88 1721.33 1200.88 cv
1725.97 1200.88 1729.73 1204.64 1729.73 1209.28 cv
1729.73 1213.92 1725.97 1217.68 1721.33 1217.68 cv
1716.69 1217.68 1712.93 1213.92 1712.93 1209.28 cv
cp
1755.57 1210.88 mo
1755.57 1208.03 li
1750.45 1206.87 li
1750.34 1205.52 1750.14 1204.21 1749.85 1202.92 cv
1754.39 1200.22 li
1753.51 1197.51 li
1748.29 1197.99 li
1747.77 1196.75 1747.17 1195.56 1746.49 1194.42 cv
1749.97 1190.45 li
1748.29 1188.14 li
1743.47 1190.21 li
1742.6 1189.2 1741.66 1188.26 1740.67 1187.38 cv
1742.75 1182.52 li
1740.44 1180.84 li
1736.5 1184.3 li
1735.37 1183.61 1734.18 1182.99 1732.95 1182.46 cv
1733.44 1177.21 li
1730.72 1176.32 li
1728.04 1180.83 li
1726.76 1180.53 1725.44 1180.31 1724.1 1180.18 cv
1722.94 1175.03 li
1720.08 1175.03 li
1718.92 1180.16 li
1717.58 1180.27 1716.26 1180.47 1714.97 1180.75 cv
1712.28 1176.21 li
1709.56 1177.1 li
1710.04 1182.31 li
1708.8 1182.83 1707.61 1183.44 1706.47 1184.11 cv
1702.5 1180.63 li
1700.19 1182.31 li
1702.26 1187.13 li
1701.26 1188 1700.31 1188.94 1699.43 1189.94 cv
1694.57 1187.85 li
1692.89 1190.16 li
1696.35 1194.1 li
1695.66 1195.23 1695.05 1196.42 1694.51 1197.65 cv
1689.26 1197.17 li
1688.38 1199.88 li
1692.89 1202.56 li
1692.58 1203.85 1692.36 1205.16 1692.24 1206.5 cv
1687.09 1207.67 li
1687.09 1210.53 li
1692.21 1211.68 li
1692.32 1213.03 1692.52 1214.34 1692.8 1215.63 cv
1688.27 1218.33 li
1689.15 1221.05 li
1694.37 1220.57 li
1694.88 1221.8 1695.49 1222.99 1696.16 1224.13 cv
1692.68 1228.1 li
1694.36 1230.41 li
1699.19 1228.34 li
1700.05 1229.35 1700.99 1230.3 1701.99 1231.18 cv
1699.9 1236.03 li
1702.21 1237.71 li
1706.15 1234.26 li
1707.28 1234.95 1708.47 1235.56 1709.7 1236.09 cv
1709.22 1241.34 li
1711.93 1242.23 li
1714.62 1237.72 li
1715.9 1238.02 1717.21 1238.24 1718.56 1238.37 cv
1719.72 1243.52 li
1722.58 1243.52 li
1723.73 1238.4 li
1725.08 1238.29 1726.4 1238.09 1727.68 1237.8 cv
1730.38 1242.34 li
1733.1 1241.46 li
1732.62 1236.24 li
1733.85 1235.72 1735.04 1235.12 1736.18 1234.44 cv
1740.15 1237.92 li
1742.46 1236.24 li
1740.39 1231.42 li
1741.4 1230.55 1742.35 1229.61 1743.23 1228.62 cv
1748.08 1230.7 li
1749.76 1228.39 li
1746.31 1224.45 li
1747 1223.32 1747.61 1222.13 1748.14 1220.9 cv
1753.4 1221.39 li
1754.28 1218.67 li
1749.77 1215.99 li
1750.07 1214.7 1750.29 1213.39 1750.42 1212.05 cv
1755.57 1210.88 li
cp
.521904 .711147 .269078 .0545052 cmyk
f
1714.26 567.433 mo
1714.26 553.483 1725.57 542.169 1739.52 542.169 cv
1753.48 542.169 1764.79 553.483 1764.79 567.433 cv
1764.79 581.389 1753.48 592.703 1739.52 592.703 cv
1725.57 592.703 1714.26 581.389 1714.26 567.433 cv
1842.52 572.27 mo
1842.52 563.676 li
1827.11 560.19 li
1826.78 556.151 1826.18 552.187 1825.32 548.324 cv
1838.97 540.207 li
1836.32 532.031 li
1820.62 533.475 li
1819.07 529.76 1817.25 526.181 1815.22 522.745 cv
1825.69 510.806 li
1820.64 503.853 li
1806.12 510.094 li
1803.51 507.059 1800.7 504.207 1797.7 501.553 cv
1803.98 486.951 li
1797.02 481.899 li
1785.17 492.295 li
1781.76 490.216 1778.19 488.376 1774.49 486.773 cv
1775.95 470.972 li
1767.77 468.317 li
1759.71 481.881 li
1755.85 480.973 1751.9 480.308 1747.86 479.927 cv
1744.36 464.435 li
1735.76 464.435 li
1732.28 479.846 li
1728.24 480.174 1724.28 480.773 1720.41 481.633 cv
1712.29 467.983 li
1704.12 470.639 li
1705.56 486.329 li
1701.85 487.888 1698.27 489.702 1694.83 491.737 cv
1682.89 481.261 li
1675.94 486.318 li
1682.18 500.831 li
1679.15 503.447 1676.29 506.26 1673.64 509.261 cv
1659.04 502.978 li
1653.98 509.933 li
1664.38 521.783 li
1662.3 525.194 1660.47 528.765 1658.86 532.461 cv
1643.06 531.005 li
1640.4 539.18 li
1653.97 547.246 li
1653.06 551.106 1652.4 555.056 1652.02 559.097 cv
1636.52 562.596 li
1636.52 571.191 li
1651.93 574.674 li
1652.26 578.719 1652.86 582.678 1653.72 586.544 cv
1640.07 594.663 li
1642.72 602.837 li
1658.42 601.392 li
1659.98 605.106 1661.79 608.688 1663.82 612.124 cv
1653.35 624.061 li
1658.4 631.015 li
1672.92 624.775 li
1675.53 627.807 1678.34 630.661 1681.35 633.313 cv
1675.07 647.914 li
1682.02 652.971 li
1693.87 642.573 li
1697.28 644.649 1700.85 646.488 1704.55 648.095 cv
1703.09 663.896 li
1711.27 666.553 li
1719.33 652.988 li
1723.19 653.895 1727.15 654.558 1731.18 654.94 cv
1734.68 670.43 li
1743.28 670.43 li
1746.76 655.022 li
1750.8 654.692 1754.77 654.093 1758.63 653.236 cv
1766.75 666.883 li
1774.92 664.23 li
1773.48 648.538 li
1777.19 646.982 1780.77 645.163 1784.21 643.129 cv
1796.15 653.604 li
1803.1 648.551 li
1796.86 634.038 li
1799.9 631.423 1802.75 628.608 1805.4 625.609 cv
1820 631.887 li
1825.06 624.933 li
1814.66 613.085 li
1816.74 609.671 1818.57 606.104 1820.18 602.407 cv
1835.98 603.862 li
1838.64 595.688 li
1825.07 587.622 li
1825.98 583.763 1826.64 579.812 1827.02 575.773 cv
1842.52 572.27 li
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
744.197 1167.48 mo
544.195 1167.48 382.066 1005.34 382.066 805.347 cv
382.066 605.346 544.195 443.215 744.197 443.215 cv
944.198 443.215 1106.33 605.346 1106.33 805.347 cv
1106.33 1005.34 944.198 1167.48 744.197 1167.48 cv
1159.77 818.228 mo
1186.08 811.511 li
1186.08 796.131 li
1159.67 789.388 li
1159.12 774.666 1157.79 760.14 1155.74 745.847 cv
1180.44 734.685 li
1177.77 719.539 li
1150.67 717.49 li
1147.58 703.121 1143.74 689.029 1139.21 675.254 cv
1161.54 660.005 li
1156.28 645.555 li
1129.26 648.24 li
1123.72 634.673 1117.48 621.469 1110.59 608.661 cv
1129.96 589.742 li
1122.27 576.423 li
1096.07 583.78 li
1088.28 571.423 1079.85 559.508 1070.83 548.077 cv
1086.67 526.03 li
1076.78 514.25 li
1052.21 526.064 li
1042.41 515.269 1032.06 504.994 1021.19 495.281 cv
1032.96 470.804 li
1021.18 460.92 li
999.04 476.815 li
987.543 467.884 975.569 459.543 963.155 451.837 cv
970.48 425.744 li
957.16 418.055 li
938.171 437.501 li
925.315 430.708 912.057 424.573 898.449 419.134 cv
901.126 392.217 li
886.673 386.958 li
871.362 409.387 li
857.554 404.955 843.435 401.226 829.042 398.242 cv
827.004 371.244 li
811.855 368.573 li
800.646 393.381 li
786.341 391.44 771.808 390.226 757.08 389.777 cv
750.362 363.458 li
734.984 363.458 li
728.24 389.874 li
713.519 390.431 698.993 391.756 684.7 393.805 cv
673.534 369.1 li
658.392 371.772 li
656.344 398.878 li
641.975 401.968 627.882 405.804 614.106 410.338 cv
598.855 387.999 li
584.406 393.259 li
587.093 420.28 li
573.526 425.821 560.319 432.063 547.513 438.953 cv
528.592 419.578 li
515.275 427.267 li
522.631 453.473 li
510.276 461.269 498.36 469.694 486.929 478.709 cv
464.88 462.878 li
453.101 472.763 li
464.916 497.336 li
454.121 507.13 443.847 517.486 434.132 528.354 cv
409.654 516.583 li
399.771 528.363 li
415.667 550.504 li
406.736 561.999 398.394 573.976 390.69 586.388 cv
364.594 579.063 li
356.906 592.38 li
376.352 611.373 li
369.559 624.228 363.425 637.485 357.985 651.095 cv
331.066 648.419 li
325.809 662.868 li
348.238 678.181 li
343.807 691.988 340.078 706.108 337.094 720.502 cv
310.094 722.542 li
307.424 737.685 li
332.232 748.897 li
330.29 763.201 329.077 777.736 328.628 792.463 cv
302.31 799.181 li
302.31 814.559 li
328.726 821.302 li
329.281 836.025 330.608 850.55 332.655 864.843 cv
307.952 876.008 li
310.624 891.152 li
337.729 893.2 li
340.82 907.569 344.655 921.661 349.189 935.438 cv
326.851 950.686 li
332.111 965.138 li
359.131 962.452 li
364.672 976.018 370.915 989.223 377.803 1002.03 cv
358.43 1020.95 li
366.119 1034.27 li
392.324 1026.91 li
400.12 1039.27 408.545 1051.18 417.561 1062.61 cv
401.73 1084.66 li
411.615 1096.44 li
436.188 1084.63 li
445.982 1095.42 456.337 1105.7 467.203 1115.41 cv
455.436 1139.89 li
467.217 1149.77 li
489.355 1133.88 li
500.85 1142.81 512.826 1151.15 525.24 1158.85 cv
517.915 1184.95 li
531.233 1192.64 li
550.224 1173.19 li
563.081 1179.99 576.337 1186.12 589.947 1191.56 cv
587.271 1218.47 li
601.721 1223.73 li
617.033 1201.31 li
630.839 1205.74 644.96 1209.47 659.354 1212.45 cv
661.395 1239.45 li
676.537 1242.12 li
687.75 1217.31 li
702.053 1219.25 716.587 1220.47 731.315 1220.92 cv
738.033 1247.23 li
753.41 1247.23 li
760.154 1220.82 li
774.877 1220.26 789.402 1218.94 803.695 1216.89 cv
814.859 1241.59 li
830.004 1238.92 li
832.052 1211.82 li
846.421 1208.72 860.514 1204.89 874.289 1200.35 cv
889.538 1222.69 li
903.99 1217.43 li
901.301 1190.41 li
914.87 1184.87 928.076 1178.63 940.883 1171.74 cv
959.802 1191.11 li
973.119 1183.42 li
965.764 1157.22 li
978.119 1149.42 990.037 1141 1001.47 1131.98 cv
1023.51 1147.81 li
1035.29 1137.93 li
1023.48 1113.36 li
1034.27 1103.56 1044.55 1093.21 1054.26 1082.34 cv
1078.74 1094.11 li
1088.62 1082.33 li
1072.73 1060.19 li
1081.66 1048.69 1090 1036.72 1097.71 1024.3 cv
1123.8 1031.63 li
1131.49 1018.31 li
1112.04 999.319 li
1118.84 986.463 1124.97 973.206 1130.41 959.595 cv
1157.33 962.272 li
1162.58 947.821 li
1140.16 932.511 li
1144.59 918.704 1148.32 904.583 1151.3 890.189 cv
1178.3 888.149 li
1180.97 873.005 li
1156.16 861.794 li
1158.11 847.49 1159.32 832.955 1159.77 818.228 cv
f
970.733 1116.44 mo
907.924 1116.44 857.008 1065.53 857.008 1002.73 cv
857.008 939.915 907.924 888.998 970.733 888.998 cv
1033.54 888.998 1084.46 939.915 1084.46 1002.73 cv
1084.46 1065.53 1033.54 1116.44 970.733 1116.44 cv
1124.65 1022.99 mo
1126.61 1011.88 li
1105.82 1002.48 li
1105.79 1002.68 li
1105.79 994.129 1104.95 985.77 1103.43 977.657 cv
1122.31 969.135 li
1120.34 958.017 li
1097.6 956.293 li
1094.71 948.413 1091.09 940.89 1086.86 933.778 cv
1101.68 919.315 li
1096.03 909.542 li
1074.07 915.707 li
1074.23 915.986 li
1068.81 909.524 1062.8 903.568 1056.28 898.219 cv
1065.25 879.564 li
1056.6 872.307 li
1038.08 885.61 li
1038.32 885.815 li
1031.07 881.614 1023.4 878.067 1015.37 875.255 cv
1017.43 854.662 li
1006.82 850.805 li
993.961 869.638 li
994.288 869.757 li
986.634 868.41 978.773 867.668 970.733 867.668 cv
970.187 867.668 969.646 867.701 969.101 867.71 cv
963.97 847.626 li
952.688 847.626 li
947.043 869.723 li
947.37 869.723 li
938.952 871.191 930.802 873.425 922.997 876.376 cv
911.331 859.284 li
900.727 863.152 li
902.985 885.846 li
903.278 885.739 li
895.954 889.971 889.069 894.867 882.699 900.35 cv
865.859 888.255 li
857.21 895.512 li
867.096 916.068 li
867.356 915.851 li
861.94 922.289 857.122 929.243 852.97 936.624 cv
833.032 931.028 li
827.388 940.801 li
843.711 956.74 li
843.732 956.704 li
840.923 964.458 838.816 972.547 837.461 980.891 cv
816.817 982.447 li
814.855 993.564 li
835.641 1002.96 li
835.68 1002.75 li
835.68 1011.31 836.512 1019.67 838.037 1027.79 cv
819.162 1036.31 li
821.125 1047.43 li
843.868 1049.15 li
846.753 1057.03 850.372 1064.55 854.606 1071.67 cv
839.792 1086.13 li
845.438 1095.9 li
867.397 1089.73 li
867.245 1089.47 li
872.663 1095.93 878.667 1101.88 885.187 1107.22 cv
876.214 1125.88 li
884.861 1133.14 li
903.393 1119.84 li
903.158 1119.64 li
910.405 1123.84 918.07 1127.38 926.087 1130.19 cv
924.039 1150.78 li
934.644 1154.64 li
947.508 1135.8 li
947.228 1135.7 li
954.867 1137.04 962.712 1137.78 970.733 1137.78 cv
971.282 1137.78 971.823 1137.75 972.369 1137.74 cv
977.497 1157.83 li
988.78 1157.83 li
994.423 1135.72 li
994.113 1135.72 li
1002.53 1134.25 1010.67 1132.02 1018.47 1129.07 cv
1030.14 1146.16 li
1040.74 1142.3 li
1038.48 1119.6 li
1038.21 1119.69 li
1045.53 1115.46 1052.41 1110.57 1058.77 1105.09 cv
1075.61 1117.19 li
1084.26 1109.94 li
1074.37 1089.38 li
1074.12 1089.59 li
1079.53 1083.15 1084.35 1076.2 1088.5 1068.82 cv
1108.43 1074.42 li
1114.08 1064.64 li
1097.76 1048.71 li
1097.74 1048.74 li
1100.55 1040.99 1102.65 1032.9 1104.01 1024.56 cv
1124.65 1022.99 li
.644617 .0856947 .172274 3.0518e-5 cmyk
f
809.638 1148.17 mo
809.638 1141.69 814.89 1136.44 821.371 1136.44 cv
827.852 1136.44 833.104 1141.69 833.104 1148.17 cv
833.104 1154.65 827.852 1159.91 821.371 1159.91 cv
814.89 1159.91 809.638 1154.65 809.638 1148.17 cv
cp
869.201 1150.42 mo
869.201 1146.43 li
862.045 1144.81 li
861.892 1142.93 861.614 1141.09 861.215 1139.3 cv
867.555 1135.53 li
866.321 1131.73 li
859.034 1132.4 li
858.31 1130.68 857.467 1129.02 856.522 1127.42 cv
861.387 1121.88 li
859.041 1118.65 li
852.3 1121.54 li
851.086 1120.14 849.78 1118.81 848.387 1117.58 cv
851.302 1110.8 li
848.073 1108.45 li
842.571 1113.28 li
840.986 1112.31 839.327 1111.46 837.611 1110.72 cv
838.287 1103.38 li
834.491 1102.14 li
830.746 1108.44 li
828.954 1108.02 827.118 1107.71 825.243 1107.54 cv
823.617 1100.34 li
819.625 1100.34 li
818.009 1107.5 li
816.132 1107.65 814.292 1107.93 812.495 1108.33 cv
808.727 1101.99 li
804.931 1103.22 li
805.602 1110.51 li
803.876 1111.23 802.214 1112.08 800.617 1113.02 cv
795.074 1108.16 li
791.844 1110.5 li
794.742 1117.24 li
793.334 1118.46 792.008 1119.76 790.777 1121.16 cv
783.995 1118.24 li
781.648 1121.47 li
786.478 1126.97 li
785.513 1128.56 784.659 1130.22 783.914 1131.93 cv
776.575 1131.26 li
775.342 1135.05 li
781.643 1138.8 li
781.221 1140.59 780.912 1142.43 780.735 1144.3 cv
773.54 1145.93 li
773.54 1149.92 li
780.697 1151.54 li
780.85 1153.41 781.128 1155.25 781.527 1157.05 cv
775.187 1160.82 li
776.42 1164.61 li
783.709 1163.94 li
784.432 1165.67 785.274 1167.33 786.219 1168.93 cv
781.355 1174.47 li
783.7 1177.7 li
790.441 1174.8 li
791.655 1176.21 792.962 1177.53 794.354 1178.77 cv
791.439 1185.55 li
794.668 1187.9 li
800.171 1183.07 li
801.755 1184.03 803.414 1184.89 805.13 1185.63 cv
804.454 1192.97 li
808.25 1194.2 li
811.995 1187.9 li
813.788 1188.32 815.623 1188.63 817.498 1188.81 cv
819.124 1196 li
823.115 1196 li
824.733 1188.85 li
826.61 1188.69 828.451 1188.42 830.246 1188.02 cv
834.016 1194.36 li
837.812 1193.12 li
837.141 1185.84 li
838.866 1185.11 840.527 1184.27 842.124 1183.32 cv
847.668 1188.19 li
850.897 1185.84 li
847.998 1179.1 li
849.408 1177.89 850.733 1176.58 851.964 1175.19 cv
858.746 1178.1 li
861.092 1174.88 li
856.264 1169.37 li
857.229 1167.79 858.082 1166.13 858.828 1164.41 cv
866.167 1165.09 li
867.4 1161.29 li
861.1 1157.55 li
861.521 1155.76 861.83 1153.92 862.006 1152.04 cv
869.201 1150.42 li
cp
f
970.733 1053.73 mo
942.566 1053.73 919.732 1030.9 919.732 1002.73 cv
919.732 974.563 942.566 951.729 970.733 951.729 cv
998.9 951.729 1021.73 974.563 1021.73 1002.73 cv
1021.73 1030.9 998.9 1053.73 970.733 1053.73 cv
1050.23 1006.46 mo
1050.23 999.828 li
1038.35 997.143 li
1038.1 994.018 1037.63 990.959 1036.97 987.968 cv
1047.5 981.713 li
1045.44 975.401 li
1033.33 976.518 li
1032.13 973.649 1030.74 970.879 1029.16 968.227 cv
1037.24 959.021 li
1033.34 953.654 li
1022.16 958.463 li
1020.14 956.119 1017.96 953.916 1015.64 951.867 cv
1020.48 940.607 li
1015.12 936.707 li
1005.97 944.73 li
1003.33 943.127 1000.58 941.701 997.726 940.461 cv
998.849 928.274 li
992.54 926.224 li
986.324 936.679 li
983.343 935.977 980.286 935.475 977.167 935.18 cv
974.466 923.229 li
967.831 923.229 li
965.148 935.105 li
962.024 935.359 958.963 935.827 955.973 936.49 cv
949.716 925.966 li
943.406 928.018 li
944.523 940.126 li
941.652 941.329 938.884 942.726 936.231 944.296 cv
927.024 936.216 li
921.656 940.118 li
926.467 951.306 li
924.123 953.324 921.92 955.505 919.872 957.821 cv
908.61 952.978 li
904.71 958.346 li
912.736 967.494 li
911.132 970.127 909.706 972.88 908.468 975.735 cv
896.278 974.611 li
894.227 980.921 li
904.683 987.136 li
903.981 990.118 903.479 993.175 903.186 996.294 cv
891.232 998.995 li
891.232 1005.63 li
903.111 1008.31 li
903.365 1011.44 903.831 1014.5 904.494 1017.49 cv
893.97 1023.75 li
896.02 1030.06 li
908.13 1028.94 li
909.332 1031.81 910.73 1034.58 912.3 1037.23 cv
904.222 1046.44 li
908.12 1051.8 li
919.308 1046.99 li
921.328 1049.34 923.506 1051.54 925.824 1053.59 cv
920.984 1064.85 li
926.35 1068.75 li
935.496 1060.73 li
938.13 1062.33 940.884 1063.76 943.738 1065 cv
942.615 1077.18 li
948.925 1079.23 li
955.141 1068.78 li
958.122 1069.48 961.179 1069.98 964.297 1070.28 cv
966.999 1082.23 li
973.633 1082.23 li
976.319 1070.35 li
979.441 1070.1 982.503 1069.63 985.493 1068.97 cv
991.749 1079.49 li
998.059 1077.44 li
996.943 1065.33 li
999.814 1064.13 1002.58 1062.73 1005.24 1061.16 cv
1014.44 1069.24 li
1019.81 1065.34 li
1015 1054.15 li
1017.34 1052.14 1019.54 1049.95 1021.59 1047.64 cv
1032.86 1052.48 li
1036.75 1047.11 li
1028.73 1037.97 li
1030.33 1035.33 1031.76 1032.58 1033 1029.72 cv
1045.19 1030.85 li
1047.24 1024.54 li
1036.78 1018.32 li
1037.48 1015.34 1037.99 1012.28 1038.28 1009.16 cv
1050.23 1006.46 li
f
1811.23 1002.05 mo
1761.34 1002.05 1720.9 961.611 1720.9 911.73 cv
1720.9 861.841 1761.34 821.4 1811.23 821.4 cv
1861.11 821.4 1901.55 861.841 1901.55 911.73 cv
1901.55 961.611 1861.11 1002.05 1811.23 1002.05 cv
1811.23 804.459 mo
1751.99 804.459 1703.96 852.485 1703.96 911.73 cv
1703.96 970.966 1751.99 1019 1811.23 1019 cv
1870.47 1019 1918.5 970.966 1918.5 911.73 cv
1918.5 852.485 1870.47 804.459 1811.23 804.459 cv
.311803 .00500496 .0834974 3.0518e-5 cmyk
f
1796.89 788.54 mo
1805.86 788.54 li
1810.34 806.092 li
1792.41 806.092 li
1796.89 788.54 li
f
1755.62 800.873 mo
1764.05 797.8 li
1774.26 812.766 li
1757.42 818.898 li
1755.62 800.873 li
f
1721.06 826.574 mo
1727.93 820.811 li
1742.65 831.38 li
1728.91 842.901 li
1721.06 826.574 li
f
1697.37 862.545 mo
1701.86 854.783 li
1719.3 859.679 li
1710.34 875.205 li
1697.37 862.545 li
f
1687.42 904.452 mo
1688.98 895.622 li
1707.04 894.262 li
1703.93 911.919 li
1687.42 904.452 li
f
1692.4 947.236 mo
1690.84 938.407 li
1707.35 930.947 li
1710.47 948.597 li
1692.4 947.236 li
f
1711.71 985.732 mo
1707.23 977.972 li
1720.19 965.314 li
1729.15 980.834 li
1711.71 985.732 li
f
1743.02 1015.31 mo
1736.16 1009.54 li
1744.01 993.219 li
1757.74 1004.74 li
1743.02 1015.31 li
f
1782.56 1032.39 mo
1774.14 1029.32 li
1775.93 1011.3 li
1792.78 1017.42 li
1782.56 1032.39 li
cp
f
1825.56 1034.92 mo
1816.6 1034.92 li
1812.12 1017.36 li
1830.04 1017.36 li
1825.56 1034.92 li
cp
f
1866.83 1022.59 mo
1858.41 1025.65 li
1848.19 1010.69 li
1865.04 1004.55 li
1866.83 1022.59 li
cp
f
1901.39 996.88 mo
1894.53 1002.64 li
1879.81 992.072 li
1893.54 980.554 li
1901.39 996.88 li
cp
f
1925.08 960.908 mo
1920.6 968.67 li
1903.15 963.773 li
1912.12 948.248 li
1925.08 960.908 li
cp
f
1935.03 919 mo
1933.48 927.827 li
1915.41 929.193 li
1918.52 911.536 li
1935.03 919 li
cp
f
1930.05 876.219 mo
1931.61 885.048 li
1915.1 892.506 li
1911.99 874.852 li
1930.05 876.219 li
cp
f
1910.74 837.719 mo
1915.23 845.48 li
1902.26 858.139 li
1893.3 842.614 li
1910.74 837.719 li
cp
f
1879.43 808.144 mo
1886.3 813.908 li
1878.44 830.234 li
1864.71 818.709 li
1879.43 808.144 li
cp
f
1839.89 791.066 mo
1848.32 794.129 li
1846.52 812.156 li
1829.68 806.025 li
1839.89 791.066 li
f
1516.45 1300.64 mo
1516.45 1216.35 li
1516.45 1189.23 1494.46 1167.24 1467.34 1167.24 cv
1343.65 1167.24 li
1316.12 1167.24 1293.81 1189.56 1293.81 1217.08 cv
1293.81 1300.64 li
1293.81 1328.16 1316.12 1350.48 1343.65 1350.48 cv
1466.6 1350.48 li
1494.13 1350.48 1516.45 1328.16 1516.45 1300.64 cv
.0852369 .125612 .0389715 3.0518e-5 cmyk
f
1466.97 1167.24 mo
1343.29 1167.24 li
1248.68 1167.24 1162.56 1130.94 1098.08 1071.51 cv
1108.43 1074.42 li
1114.08 1064.64 li
1097.76 1048.71 li
1097.74 1048.74 li
1100.38 1041.44 1102.41 1033.83 1103.77 1026 cv
1123.8 1031.63 li
1131.49 1018.31 li
1126.36 1013.3 li
1126.61 1011.88 li
1123.44 1010.45 li
1112.04 999.319 li
1118.84 986.463 1124.97 973.206 1130.41 959.595 cv
1157.33 962.272 li
1162.58 947.821 li
1140.16 932.511 li
1144.59 918.704 1148.32 904.583 1151.3 890.189 cv
1178.3 888.149 li
1180.97 873.005 li
1156.16 861.794 li
1158.11 847.49 1159.32 832.955 1159.77 818.228 cv
1186.08 811.511 li
1186.08 796.131 li
1159.67 789.388 li
1159.12 774.666 1157.79 760.14 1155.74 745.847 cv
1180.44 734.685 li
1177.77 719.539 li
1150.67 717.49 li
1147.58 703.121 1143.74 689.029 1139.21 675.254 cv
1161.54 660.005 li
1156.28 645.555 li
1129.26 648.24 li
1123.72 634.673 1117.48 621.469 1110.59 608.661 cv
1129.96 589.742 li
1122.27 576.423 li
1096.07 583.78 li
1090.6 575.102 1084.81 566.64 1078.73 558.412 cv
1144.78 487.682 1238.87 443.452 1343.29 443.452 cv
1466.97 443.452 li
1544.06 443.452 1615.5 467.548 1674.21 508.626 cv
1674.02 508.837 1673.83 509.048 1673.64 509.261 cv
1659.04 502.978 li
1653.98 509.933 li
1664.38 521.783 li
1662.3 525.194 1660.47 528.765 1658.86 532.461 cv
1643.06 531.005 li
1640.4 539.18 li
1653.97 547.246 li
1653.06 551.106 1652.4 555.056 1652.02 559.097 cv
1636.52 562.596 li
1636.52 571.191 li
1651.93 574.674 li
1652.26 578.719 1652.86 582.678 1653.72 586.544 cv
1640.07 594.663 li
1642.72 602.837 li
1658.42 601.392 li
1659.98 605.106 1661.79 608.688 1663.82 612.124 cv
1653.35 624.061 li
1658.4 631.015 li
1672.92 624.775 li
1675.53 627.807 1678.34 630.661 1681.35 633.313 cv
1675.07 647.914 li
1682.02 652.971 li
1693.87 642.573 li
1697.28 644.649 1700.85 646.488 1704.55 648.095 cv
1703.09 663.896 li
1711.27 666.553 li
1719.33 652.988 li
1723.19 653.895 1727.15 654.558 1731.18 654.94 cv
1734.68 670.43 li
1743.28 670.43 li
1746.76 655.022 li
1750.8 654.692 1754.77 654.093 1758.63 653.236 cv
1766.75 666.883 li
1774.92 664.23 li
1773.48 648.538 li
1777.19 646.982 1780.77 645.163 1784.21 643.129 cv
1795.24 652.811 li
1816.81 699.161 1828.87 750.854 1828.87 805.347 cv
1828.87 805.53 1828.87 805.72 1828.86 805.903 cv
1823.13 804.954 1817.23 804.459 1811.23 804.459 cv
1810.79 804.459 1810.36 804.462 1809.92 804.467 cv
1805.86 788.54 li
1796.89 788.54 li
1792.41 806.092 li
1792.48 806.092 li
1785.86 807.259 1779.44 809.035 1773.3 811.358 cv
1764.05 797.8 li
1755.62 800.873 li
1757.42 818.898 li
1757.48 818.874 li
1751.72 822.216 1746.3 826.08 1741.28 830.4 cv
1727.93 820.811 li
1721.06 826.574 li
1728.91 842.901 li
1729.03 842.799 li
1724.76 847.893 1720.95 853.386 1717.67 859.221 cv
1701.86 854.783 li
1697.37 862.545 li
1710.34 875.204 li
1708.11 881.356 1706.43 887.772 1705.35 894.389 cv
1688.98 895.622 li
1687.42 904.452 li
1703.93 911.919 li
1703.96 911.755 li
1703.96 918.552 1704.59 925.2 1705.8 931.646 cv
1690.84 938.407 li
1692.4 947.236 li
1710.46 948.597 li
1712.76 954.858 1715.61 960.848 1718.98 966.5 cv
1707.23 977.972 li
1711.71 985.732 li
1729.15 980.834 li
1729.08 980.715 li
1733.37 985.813 1738.13 990.509 1743.28 994.732 cv
1736.16 1009.54 li
1743.02 1015.31 li
1757.74 1004.74 li
1757.69 1004.7 li
1760.42 1006.28 1763.24 1007.74 1766.12 1009.08 cv
1755.41 1024.77 1743.5 1039.57 1730.52 1053.36 cv
1691.48 1094.83 1642.76 1127.09 1587.96 1146.52 cv
1550.34 1159.86 1509.85 1167.16 1467.67 1167.24 cv
1467.44 1167.24 1467.2 1167.24 1466.97 1167.24 cv
1466.97 1167.24 li
1466.97 1167.24 li
1466.97 1167.24 li
1074.23 915.986 mo
1068.81 909.524 1062.8 903.568 1056.28 898.219 cv
1065.25 879.564 li
1056.6 872.307 li
1038.08 885.61 li
1038.32 885.815 li
1031.07 881.614 1023.4 878.067 1015.37 875.255 cv
1017.43 854.662 li
1006.82 850.805 li
993.961 869.638 li
994.288 869.757 li
991.849 869.328 989.39 868.96 986.911 868.658 cv
983.285 848.106 981.391 826.939 981.391 805.347 cv
981.391 729.957 1004.45 659.95 1043.89 601.993 cv
1083.29 659.961 1106.33 729.968 1106.33 805.347 cv
1106.33 842.114 1100.85 877.614 1090.66 911.05 cv
1074.07 915.707 li
1074.23 915.986 li
1739.52 592.703 mo
1725.57 592.703 1714.26 581.389 1714.26 567.433 cv
1714.26 560.119 1717.36 553.529 1722.33 548.915 cv
1734.26 560.795 1745.38 573.515 1755.57 586.955 cv
1751.2 590.546 1745.61 592.703 1739.52 592.703 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
1743.28 670.43 mo
1734.68 670.43 li
1731.18 654.94 li
1727.15 654.558 1723.19 653.895 1719.33 652.988 cv
1711.27 666.553 li
1703.09 663.896 li
1704.55 648.095 li
1700.85 646.488 1697.28 644.649 1693.87 642.573 cv
1682.02 652.971 li
1675.07 647.914 li
1681.35 633.313 li
1678.34 630.661 1675.53 627.807 1672.92 624.775 cv
1658.4 631.015 li
1653.35 624.061 li
1663.82 612.124 li
1661.79 608.688 1659.98 605.106 1658.42 601.392 cv
1642.72 602.837 li
1640.07 594.663 li
1653.72 586.544 li
1652.86 582.678 1652.26 578.719 1651.93 574.674 cv
1636.52 571.191 li
1636.52 562.596 li
1652.02 559.097 li
1652.4 555.056 1653.06 551.106 1653.97 547.246 cv
1640.4 539.18 li
1643.06 531.005 li
1658.86 532.461 li
1660.47 528.765 1662.3 525.194 1664.38 521.783 cv
1653.98 509.933 li
1659.04 502.978 li
1673.64 509.261 li
1673.83 509.048 1674.02 508.837 1674.21 508.626 cv
1691.4 520.659 1707.51 534.148 1722.33 548.915 cv
1717.36 553.529 1714.26 560.119 1714.26 567.433 cv
1714.26 581.389 1725.57 592.703 1739.52 592.703 cv
1745.61 592.703 1751.2 590.546 1755.57 586.955 cv
1771.01 607.335 1784.34 629.381 1795.24 652.811 cv
1784.21 643.129 li
1780.77 645.163 1777.19 646.982 1773.48 648.538 cv
1774.92 664.23 li
1766.75 666.883 li
1758.63 653.236 li
1754.77 654.093 1750.8 654.692 1746.76 655.022 cv
1743.28 670.43 li
.071107 3.0518e-5 .014435 3.0518e-5 cmyk
f
1123.8 1031.63 mo
1103.77 1026 li
1103.85 1025.52 1103.93 1025.04 1104.01 1024.56 cv
1124.65 1022.99 li
1126.36 1013.3 li
1131.49 1018.31 li
1123.8 1031.63 li
1123.44 1010.45 mo
1105.82 1002.48 li
1105.79 1002.68 li
1105.79 994.129 1104.95 985.77 1103.43 977.657 cv
1122.31 969.135 li
1120.34 958.017 li
1097.6 956.293 li
1094.71 948.413 1091.09 940.89 1086.86 933.778 cv
1101.68 919.315 li
1096.03 909.542 li
1090.66 911.05 li
1100.85 877.614 1106.33 842.114 1106.33 805.347 cv
1106.33 729.968 1083.29 659.961 1043.89 601.993 cv
1054.38 586.566 1066.03 572.006 1078.73 558.412 cv
1084.81 566.64 1090.6 575.102 1096.07 583.78 cv
1122.27 576.423 li
1129.96 589.742 li
1110.59 608.661 li
1117.48 621.469 1123.72 634.673 1129.26 648.24 cv
1156.28 645.555 li
1161.54 660.005 li
1139.21 675.254 li
1143.74 689.029 1147.58 703.121 1150.67 717.49 cv
1177.77 719.539 li
1180.44 734.685 li
1155.74 745.847 li
1157.79 760.14 1159.12 774.666 1159.67 789.388 cv
1186.08 796.131 li
1186.08 811.511 li
1159.77 818.228 li
1159.32 832.955 1158.11 847.49 1156.16 861.794 cv
1180.97 873.005 li
1178.3 888.149 li
1151.3 890.189 li
1148.32 904.583 1144.59 918.704 1140.16 932.511 cv
1162.58 947.821 li
1157.33 962.272 li
1130.41 959.595 li
1124.97 973.206 1118.84 986.463 1112.04 999.319 cv
1123.44 1010.45 li
f
1043.89 1008.7 mo
1043.73 1008.47 1043.57 1008.24 1043.41 1008 cv
1044.53 1007.75 li
1044.32 1008.06 1044.1 1008.39 1043.89 1008.7 cv
1049.79 999.728 mo
1038.35 997.143 li
1038.1 994.018 1037.63 990.959 1036.97 987.968 cv
1047.5 981.713 li
1045.44 975.401 li
1033.33 976.518 li
1032.13 973.649 1030.74 970.879 1029.16 968.227 cv
1037.24 959.021 li
1033.34 953.654 li
1022.16 958.463 li
1020.14 956.119 1017.96 953.916 1015.64 951.867 cv
1020.48 940.607 li
1015.12 936.707 li
1008.35 942.646 li
1001.51 925.982 995.878 908.703 991.564 890.902 cv
1028.28 897.698 1058.8 922.124 1074.02 955.075 cv
1066.98 970.577 1058.87 985.487 1049.79 999.728 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
1074.99 1048.22 mo
1063.74 1035.8 1053.34 1022.6 1043.89 1008.7 cv
1043.89 1008.7 li
1044.1 1008.39 1044.32 1008.06 1044.53 1007.75 cv
1050.23 1006.46 li
1050.23 999.828 li
1049.79 999.728 li
1058.87 985.487 1066.98 970.577 1074.02 955.075 cv
1080.72 969.568 1084.46 985.713 1084.46 1002.73 cv
1084.46 1018.9 1081.08 1034.29 1074.99 1048.22 cv
.071107 3.0518e-5 .014435 3.0518e-5 cmyk
f
1108.43 1074.42 mo
1098.08 1071.51 li
1090.04 1064.1 1082.33 1056.32 1074.99 1048.22 cv
1081.08 1034.29 1084.46 1018.9 1084.46 1002.73 cv
1084.46 985.713 1080.72 969.568 1074.02 955.075 cv
1058.8 922.124 1028.28 897.698 991.564 890.902 cv
991.564 890.902 li
989.786 883.568 988.234 876.159 986.911 868.658 cv
986.911 868.658 li
989.39 868.96 991.849 869.328 994.288 869.757 cv
993.961 869.638 li
1006.82 850.805 li
1017.43 854.662 li
1015.37 875.255 li
1023.4 878.067 1031.07 881.614 1038.32 885.815 cv
1038.08 885.61 li
1056.6 872.307 li
1065.25 879.564 li
1056.28 898.219 li
1062.8 903.568 1068.81 909.524 1074.23 915.986 cv
1074.07 915.707 li
1090.66 911.05 li
1096.03 909.542 li
1101.68 919.315 li
1086.86 933.778 li
1091.09 940.89 1094.71 948.413 1097.6 956.293 cv
1120.34 958.017 li
1122.31 969.135 li
1103.43 977.657 li
1104.95 985.77 1105.79 994.129 1105.79 1002.68 cv
1105.82 1002.48 li
1123.44 1010.45 li
1126.61 1011.88 li
1126.36 1013.3 li
1124.65 1022.99 li
1104.01 1024.56 li
1103.93 1025.04 1103.85 1025.52 1103.77 1026 cv
1102.41 1033.83 1100.38 1041.44 1097.74 1048.74 cv
1097.76 1048.71 li
1114.08 1064.64 li
1108.43 1074.42 li
.196506 3.0518e-5 .0485542 3.0518e-5 cmyk
f
1043.41 1008 mo
1029.6 987.61 1017.81 965.719 1008.35 942.646 cv
1008.35 942.646 li
1015.12 936.707 li
1020.48 940.607 li
1015.64 951.867 li
1017.96 953.916 1020.14 956.119 1022.16 958.463 cv
1033.34 953.654 li
1037.24 959.021 li
1029.16 968.227 li
1030.74 970.879 1032.13 973.649 1033.33 976.518 cv
1045.44 975.401 li
1047.5 981.713 li
1036.97 987.968 li
1037.63 990.959 1038.1 994.018 1038.35 997.143 cv
1049.79 999.728 li
1050.23 999.828 li
1050.23 1006.46 li
1044.53 1007.75 li
1043.41 1008 li
f
1775.44 994.685 mo
1743.36 980.827 1720.9 948.9 1720.9 911.73 cv
1720.9 861.841 1761.34 821.4 1811.23 821.4 cv
1817.11 821.4 1822.87 821.963 1828.44 823.038 cv
1825.42 885.774 1806.43 944.307 1775.44 994.685 cv
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
1766.12 1009.08 mo
1766.12 1009.08 li
1763.24 1007.74 1760.42 1006.28 1757.69 1004.7 cv
1744.01 993.219 li
1743.28 994.732 li
1738.13 990.509 1733.37 985.813 1729.08 980.715 cv
1720.19 965.314 li
1718.98 966.5 li
1715.61 960.848 1712.76 954.858 1710.46 948.597 cv
1710.47 948.597 li
1707.35 930.947 li
1705.8 931.646 li
1704.59 925.2 1703.96 918.552 1703.96 911.755 cv
1707.04 894.262 li
1705.35 894.389 li
1706.43 887.772 1708.11 881.356 1710.34 875.204 cv
1710.34 875.205 li
1719.3 859.679 li
1717.67 859.221 li
1720.95 853.386 1724.76 847.893 1729.03 842.799 cv
1742.65 831.38 li
1741.28 830.4 li
1746.3 826.08 1751.72 822.216 1757.48 818.874 cv
1774.26 812.766 li
1773.3 811.358 li
1779.44 809.035 1785.86 807.259 1792.48 806.092 cv
1810.34 806.092 li
1809.92 804.467 li
1810.36 804.462 1810.79 804.459 1811.23 804.459 cv
1817.23 804.459 1823.13 804.954 1828.86 805.903 cv
1828.86 805.903 li
1828.86 811.646 1828.71 817.36 1828.44 823.038 cv
1828.44 823.038 li
1822.87 821.963 1817.11 821.4 1811.23 821.4 cv
1761.34 821.4 1720.9 861.841 1720.9 911.73 cv
1720.9 948.9 1743.36 980.827 1775.44 994.685 cv
1775.44 994.685 li
1772.45 999.554 1769.33 1004.36 1766.12 1009.08 cv
.0859388 3.0518e-5 .0195621 3.0518e-5 cmyk
f
1810.34 806.092 mo
1792.48 806.092 li
1792.41 806.092 li
1796.89 788.54 li
1805.86 788.54 li
1809.92 804.467 li
1810.34 806.092 li
f
1757.42 818.898 mo
1755.62 800.873 li
1764.05 797.8 li
1773.3 811.358 li
1774.26 812.766 li
1757.48 818.874 li
1757.42 818.898 li
f
1728.91 842.901 mo
1721.06 826.574 li
1727.93 820.811 li
1741.28 830.4 li
1742.65 831.38 li
1729.03 842.799 li
1728.91 842.901 li
f
1710.34 875.205 mo
1710.34 875.204 li
1697.37 862.545 li
1701.86 854.783 li
1717.67 859.221 li
1719.3 859.679 li
1710.34 875.205 li
f
1703.93 911.919 mo
1687.42 904.452 li
1688.98 895.622 li
1705.35 894.389 li
1707.04 894.262 li
1703.96 911.755 li
1703.93 911.919 li
f
1710.47 948.597 mo
1710.46 948.597 li
1692.4 947.236 li
1690.84 938.407 li
1705.8 931.646 li
1707.35 930.947 li
1710.47 948.597 li
f
1711.71 985.732 mo
1707.23 977.972 li
1718.98 966.5 li
1720.19 965.314 li
1729.08 980.715 li
1729.15 980.834 li
1711.71 985.732 li
f
1743.02 1015.31 mo
1736.16 1009.54 li
1743.28 994.732 li
1744.01 993.219 li
1757.69 1004.7 li
1757.74 1004.74 li
1743.02 1015.31 li
f
1516.45 1300.64 mo
1516.45 1167.24 li
1293.81 1167.24 li
1293.81 1300.64 li
1293.81 1328.16 1316.12 1350.48 1343.65 1350.48 cv
1466.65 1350.48 li
1494.15 1350.46 1516.45 1328.15 1516.45 1300.64 cv
cp
.131106 .182986 .0658884 3.0518e-5 cmyk
f
1358.99 1350.48 mo
1364.87 1370.41 1383.3 1384.95 1405.13 1384.95 cv
1426.96 1384.95 1445.39 1370.41 1451.26 1350.48 cv
1358.99 1350.48 li
cp
.637751 .946044 .345495 .235782 cmyk
f
1987.99 1055.21 mo
1987.99 1048.98 1993.04 1043.93 1999.28 1043.93 cv
2005.51 1043.93 2010.57 1048.98 2010.57 1055.21 cv
2010.57 1061.45 2005.51 1066.51 1999.28 1066.51 cv
1993.04 1066.51 1987.99 1061.45 1987.99 1055.21 cv
cp
2045.3 1057.38 mo
2045.3 1053.53 li
2038.42 1051.98 li
2038.27 1050.17 2038 1048.4 2037.62 1046.67 cv
2043.72 1043.05 li
2042.53 1039.39 li
2035.52 1040.04 li
2034.82 1038.38 2034.01 1036.78 2033.1 1035.24 cv
2037.79 1029.91 li
2035.53 1026.8 li
2029.04 1029.59 li
2027.87 1028.23 2026.62 1026.96 2025.27 1025.77 cv
2028.08 1019.25 li
2024.97 1016.99 li
2019.68 1021.64 li
2018.15 1020.71 2016.56 1019.89 2014.91 1019.17 cv
2015.56 1012.11 li
2011.9 1010.92 li
2008.3 1016.98 li
2006.58 1016.58 2004.81 1016.28 2003 1016.11 cv
2001.44 1009.19 li
1997.6 1009.19 li
1996.04 1016.07 li
1994.24 1016.22 1992.47 1016.49 1990.74 1016.87 cv
1987.11 1010.77 li
1983.46 1011.96 li
1984.1 1018.97 li
1982.44 1019.67 1980.84 1020.48 1979.31 1021.39 cv
1973.97 1016.71 li
1970.86 1018.96 li
1973.65 1025.45 li
1972.3 1026.62 1971.02 1027.88 1969.84 1029.22 cv
1963.31 1026.41 li
1961.05 1029.52 li
1965.7 1034.81 li
1964.77 1036.34 1963.95 1037.94 1963.23 1039.59 cv
1956.17 1038.94 li
1954.98 1042.59 li
1961.05 1046.19 li
1960.64 1047.92 1960.35 1049.68 1960.18 1051.49 cv
1953.25 1053.05 li
1953.25 1056.89 li
1960.14 1058.45 li
1960.28 1060.26 1960.55 1062.03 1960.94 1063.75 cv
1954.84 1067.38 li
1956.02 1071.04 li
1963.04 1070.39 li
1963.73 1072.05 1964.54 1073.65 1965.45 1075.18 cv
1960.77 1080.52 li
1963.03 1083.63 li
1969.52 1080.84 li
1970.68 1082.19 1971.94 1083.47 1973.28 1084.66 cv
1970.48 1091.18 li
1973.58 1093.44 li
1978.88 1088.79 li
1980.4 1089.72 1982 1090.54 1983.65 1091.26 cv
1983 1098.32 li
1986.65 1099.51 li
1990.26 1093.45 li
1991.98 1093.85 1993.75 1094.15 1995.55 1094.32 cv
1997.12 1101.24 li
2000.96 1101.24 li
2002.51 1094.36 li
2004.32 1094.21 2006.09 1093.94 2007.82 1093.56 cv
2011.45 1099.66 li
2015.1 1098.47 li
2014.45 1091.46 li
2016.11 1090.76 2017.71 1089.95 2019.25 1089.04 cv
2024.58 1093.72 li
2027.69 1091.46 li
2024.9 1084.98 li
2026.26 1083.81 2027.53 1082.55 2028.72 1081.21 cv
2035.24 1084.02 li
2037.5 1080.91 li
2032.86 1075.61 li
2033.78 1074.09 2034.61 1072.49 2035.32 1070.84 cv
2042.39 1071.49 li
2043.57 1067.84 li
2037.51 1064.24 li
2037.91 1062.51 2038.21 1060.74 2038.38 1058.94 cv
2045.3 1057.38 li
cp
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
1571.01 1322.98 mo
1556.88 1322.98 1545.42 1311.52 1545.42 1297.38 cv
1545.42 1283.25 1556.88 1271.79 1571.01 1271.79 cv
1585.15 1271.79 1596.61 1283.25 1596.61 1297.38 cv
1596.61 1311.52 1585.15 1322.98 1571.01 1322.98 cv
cp
1571.01 1266.99 mo
1554.23 1266.99 1540.62 1280.6 1540.62 1297.38 cv
1540.62 1314.17 1554.23 1327.78 1571.01 1327.78 cv
1587.8 1327.78 1601.41 1314.17 1601.41 1297.38 cv
1601.41 1280.6 1587.8 1266.99 1571.01 1266.99 cv
cp
.521904 .711147 .269078 .0545052 cmyk
f
1566.95 1262.48 mo
1569.49 1262.48 li
1570.76 1267.45 li
1565.68 1267.45 li
1566.95 1262.48 li
cp
f
1555.26 1265.97 mo
1557.64 1265.1 li
1560.54 1269.34 li
1555.77 1271.08 li
1555.26 1265.97 li
cp
f
1545.46 1273.26 mo
1547.41 1271.62 li
1551.58 1274.62 li
1547.69 1277.88 li
1545.46 1273.26 li
cp
f
1538.75 1283.45 mo
1540.02 1281.25 li
1544.97 1282.64 li
1542.43 1287.04 li
1538.75 1283.45 li
cp
f
1535.93 1295.32 mo
1536.38 1292.82 li
1541.49 1292.43 li
1540.61 1297.44 li
1535.93 1295.32 li
cp
f
1537.35 1307.45 mo
1536.9 1304.94 li
1541.58 1302.83 li
1542.46 1307.83 li
1537.35 1307.45 li
cp
f
1542.82 1318.35 mo
1541.55 1316.15 li
1545.22 1312.57 li
1547.76 1316.96 li
1542.82 1318.35 li
cp
f
1551.69 1326.73 mo
1549.74 1325.1 li
1551.97 1320.47 li
1555.86 1323.74 li
1551.69 1326.73 li
cp
f
1562.89 1331.57 mo
1560.5 1330.7 li
1561.01 1325.6 li
1565.79 1327.33 li
1562.89 1331.57 li
cp
f
1575.07 1332.29 mo
1572.54 1332.29 li
1571.26 1327.31 li
1576.34 1327.31 li
1575.07 1332.29 li
cp
f
1586.77 1328.79 mo
1584.38 1329.66 li
1581.49 1325.42 li
1586.26 1323.69 li
1586.77 1328.79 li
cp
f
1596.56 1321.51 mo
1594.61 1323.14 li
1590.45 1320.15 li
1594.34 1316.88 li
1596.56 1321.51 li
cp
f
1603.27 1311.32 mo
1602 1313.52 li
1597.06 1312.13 li
1599.6 1307.73 li
1603.27 1311.32 li
cp
f
1606.09 1299.44 mo
1605.65 1301.95 li
1600.53 1302.33 li
1601.41 1297.33 li
1606.09 1299.44 li
cp
f
1604.68 1287.32 mo
1605.12 1289.82 li
1600.44 1291.94 li
1599.56 1286.93 li
1604.68 1287.32 li
cp
f
1599.21 1276.41 mo
1600.48 1278.61 li
1596.81 1282.2 li
1594.27 1277.8 li
1599.21 1276.41 li
cp
f
1590.34 1268.03 mo
1592.28 1269.67 li
1590.06 1274.29 li
1586.17 1271.03 li
1590.34 1268.03 li
cp
f
1579.13 1263.19 mo
1581.52 1264.06 li
1581.01 1269.17 li
1576.24 1267.43 li
1579.13 1263.19 li
cp
f
2020.66 769.567 mo
1953.48 769.567 1899.02 715.104 1899.02 647.92 cv
1899.02 580.736 1953.48 526.273 2020.66 526.273 cv
2087.85 526.273 2142.31 580.736 2142.31 647.92 cv
2142.31 715.104 2087.85 769.567 2020.66 769.567 cv
cp
2210.29 656.825 mo
2210.29 640.999 li
2181.96 634.597 li
2181.35 627.148 2180.24 619.845 2178.66 612.716 cv
2203.76 597.792 li
2198.87 582.74 li
2169.99 585.402 li
2167.12 578.556 2163.79 571.954 2160.04 565.625 cv
2179.31 543.664 li
2170.01 530.864 li
2143.32 542.336 li
2138.51 536.745 2133.31 531.491 2127.78 526.604 cv
2139.33 499.747 li
2126.53 490.444 li
2104.71 509.583 li
2098.43 505.756 2091.86 502.356 2085.05 499.399 cv
2087.73 470.328 li
2072.68 465.438 li
2057.85 490.375 li
2050.74 488.702 2043.45 487.503 2036.01 486.803 cv
2029.57 458.294 li
2013.75 458.294 li
2007.34 486.623 li
1999.89 487.23 1992.59 488.344 1985.46 489.925 cv
1970.54 464.825 li
1955.49 469.716 li
1958.15 498.597 li
1951.3 501.467 1944.7 504.799 1938.37 508.544 cv
1916.41 489.275 li
1903.61 498.579 li
1915.08 525.263 li
1909.49 530.08 1904.24 535.277 1899.35 540.807 cv
1872.49 529.257 li
1863.19 542.06 li
1882.33 563.875 li
1878.51 570.158 1875.11 576.725 1872.15 583.533 cv
1843.08 580.854 li
1838.19 595.903 li
1863.12 610.731 li
1861.45 617.842 1860.25 625.133 1859.55 632.57 cv
1831.04 639.014 li
1831.04 654.837 li
1859.37 661.242 li
1859.98 668.689 1861.09 675.992 1862.67 683.121 cv
1837.57 698.047 li
1842.46 713.099 li
1871.35 710.437 li
1874.21 717.281 1877.55 723.884 1881.29 730.212 cv
1862.02 752.172 li
1871.32 764.975 li
1898.01 753.501 li
1902.82 759.093 1908.02 764.346 1913.55 769.232 cv
1902 796.092 li
1914.81 805.396 li
1936.62 786.256 li
1942.9 790.081 1949.47 793.482 1956.28 796.439 cv
1953.6 825.51 li
1968.65 830.4 li
1983.48 805.465 li
1990.59 807.138 1997.88 808.337 2005.32 809.037 cv
2011.76 837.542 li
2027.58 837.543 li
2033.99 809.217 li
2041.44 808.61 2048.74 807.496 2055.87 805.916 cv
2070.79 831.013 li
2085.84 826.125 li
2083.18 797.244 li
2090.03 794.374 2096.63 791.042 2102.96 787.297 cv
2124.92 806.562 li
2137.72 797.261 li
2126.25 770.579 li
2131.84 765.762 2137.09 760.563 2141.98 755.033 cv
2168.84 766.581 li
2178.14 753.78 li
2159 731.964 li
2162.83 725.681 2166.23 719.113 2169.18 712.307 cv
2198.26 714.984 li
2203.15 699.936 li
2178.21 685.107 li
2179.88 677.997 2181.08 670.706 2181.78 663.268 cv
2210.29 656.825 li
cp
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
951.675 1314.95 mo
930.79 1314.95 913.857 1298.02 913.857 1277.13 cv
913.857 1256.24 930.79 1239.31 951.675 1239.31 cv
972.563 1239.31 989.493 1256.24 989.493 1277.13 cv
989.493 1298.02 972.563 1314.95 951.675 1314.95 cv
cp
1010.63 1279.9 mo
1010.63 1274.98 li
1001.82 1272.99 li
1001.63 1270.67 1001.29 1268.4 1000.79 1266.19 cv
1008.6 1261.55 li
1007.08 1256.87 li
998.098 1257.69 li
997.206 1255.57 996.169 1253.51 995.005 1251.55 cv
1001 1244.72 li
998.104 1240.74 li
989.809 1244.31 li
988.312 1242.57 986.695 1240.93 984.977 1239.42 cv
988.567 1231.06 li
984.586 1228.17 li
977.805 1234.12 li
975.851 1232.93 973.81 1231.88 971.692 1230.96 cv
972.525 1221.92 li
967.847 1220.4 li
963.237 1228.15 li
961.027 1227.63 958.76 1227.26 956.447 1227.04 cv
954.443 1218.18 li
949.525 1218.18 li
947.535 1226.99 li
945.219 1227.17 942.948 1227.52 940.731 1228.01 cv
936.092 1220.21 li
931.413 1221.73 li
932.24 1230.71 li
930.111 1231.6 928.059 1232.64 926.091 1233.8 cv
919.265 1227.81 li
915.284 1230.7 li
918.852 1239 li
917.113 1240.5 915.48 1242.11 913.961 1243.83 cv
905.61 1240.24 li
902.718 1244.22 li
908.67 1251 li
907.48 1252.96 906.423 1255 905.504 1257.11 cv
896.465 1256.28 li
894.945 1260.96 li
902.698 1265.57 li
902.178 1267.78 901.805 1270.05 901.588 1272.36 cv
892.725 1274.36 li
892.725 1279.28 li
901.532 1281.27 li
901.721 1283.59 902.066 1285.86 902.558 1288.07 cv
894.754 1292.72 li
896.273 1297.39 li
905.254 1296.57 li
906.146 1298.69 907.182 1300.75 908.346 1302.71 cv
902.355 1309.54 li
905.247 1313.52 li
913.543 1309.96 li
915.04 1311.69 916.656 1313.33 918.375 1314.85 cv
914.785 1323.2 li
918.765 1326.09 li
925.546 1320.14 li
927.5 1321.33 929.542 1322.38 931.659 1323.3 cv
930.826 1332.34 li
935.505 1333.86 li
940.114 1326.11 li
942.325 1326.63 944.591 1327 946.904 1327.22 cv
948.907 1336.08 li
953.827 1336.08 li
955.817 1327.28 li
958.133 1327.09 960.404 1326.74 962.621 1326.25 cv
967.26 1334.05 li
971.938 1332.53 li
971.111 1323.55 li
973.239 1322.66 975.293 1321.63 977.26 1320.46 cv
984.087 1326.45 li
988.067 1323.56 li
984.5 1315.26 li
986.239 1313.77 987.872 1312.15 989.391 1310.43 cv
997.742 1314.02 li
1000.63 1310.04 li
994.683 1303.26 li
995.872 1301.31 996.929 1299.26 997.848 1297.15 cv
1006.89 1297.98 li
1008.41 1293.3 li
1000.65 1288.69 li
1001.17 1286.48 1001.55 1284.21 1001.76 1281.9 cv
1010.63 1279.9 li
cp
.521904 .711147 .269078 .0545052 cmyk
f
2156.56 910.256 mo
2089.37 910.256 2034.91 855.792 2034.91 788.609 cv
2034.91 721.425 2089.37 666.962 2156.56 666.962 cv
2223.74 666.962 2278.2 721.425 2278.2 788.609 cv
2278.2 855.792 2223.74 910.256 2156.56 910.256 cv
cp
2346.18 797.514 mo
2346.18 781.688 li
2317.85 775.286 li
2317.24 767.837 2316.13 760.534 2314.55 753.405 cv
2339.65 738.479 li
2334.76 723.429 li
2305.88 726.091 li
2303.01 719.245 2299.68 712.643 2295.93 706.313 cv
2315.2 684.353 li
2305.9 671.553 li
2279.22 683.025 li
2274.4 677.434 2269.2 672.179 2263.67 667.293 cv
2275.22 640.435 li
2262.42 631.133 li
2240.6 650.271 li
2234.32 646.445 2227.75 643.044 2220.94 640.088 cv
2223.62 611.018 li
2208.57 606.126 li
2193.75 631.063 li
2186.64 629.392 2179.34 628.192 2171.91 627.492 cv
2165.46 598.984 li
2149.64 598.984 li
2143.24 627.312 li
2135.79 627.92 2128.48 629.033 2121.35 630.615 cv
2106.43 605.515 li
2091.38 610.404 li
2094.04 639.286 li
2087.2 642.156 2080.59 645.487 2074.26 649.233 cv
2052.3 629.964 li
2039.5 639.267 li
2050.97 665.952 li
2045.38 670.77 2040.13 675.966 2035.24 681.495 cv
2008.38 669.947 li
1999.08 682.749 li
2018.22 704.563 li
2014.4 710.846 2011 717.415 2008.04 724.222 cv
1978.97 721.542 li
1974.08 736.592 li
1999.02 751.42 li
1997.34 758.53 1996.15 765.822 1995.45 773.259 cv
1966.93 779.703 li
1966.93 795.526 li
1995.27 801.93 li
1995.87 809.378 1996.99 816.681 1998.57 823.81 cv
1973.46 838.736 li
1978.35 853.788 li
2007.24 851.125 li
2010.11 857.97 2013.44 864.572 2017.18 870.901 cv
1997.92 892.86 li
2007.21 905.664 li
2033.9 894.19 li
2038.72 899.781 2043.91 905.035 2049.44 909.921 cv
2037.9 936.781 li
2050.7 946.084 li
2072.51 926.944 li
2078.79 930.77 2085.36 934.171 2092.17 937.127 cv
2089.49 966.199 li
2104.54 971.089 li
2119.37 946.154 li
2126.48 947.827 2133.77 949.026 2141.21 949.726 cv
2147.65 978.23 li
2163.48 978.231 li
2169.88 949.905 li
2177.33 949.299 2184.63 948.185 2191.76 946.604 cv
2206.69 971.702 li
2221.74 966.814 li
2219.07 937.932 li
2225.92 935.063 2232.52 931.731 2238.85 927.986 cv
2260.81 947.25 li
2273.61 937.95 li
2262.14 911.268 li
2267.73 906.451 2272.99 901.252 2277.87 895.722 cv
2304.73 907.27 li
2314.03 894.469 li
2294.89 872.653 li
2298.72 866.37 2302.12 859.802 2305.07 852.996 cv
2334.15 855.673 li
2339.04 840.625 li
2314.1 825.796 li
2315.77 818.686 2316.97 811.395 2317.67 803.958 cv
2346.18 797.514 li
cp
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
737.374 532.043 mo
659.763 532.043 596.621 595.184 596.621 672.795 cv
596.621 750.405 659.763 813.544 737.374 813.544 cv
814.985 813.544 878.125 750.405 878.125 672.795 cv
878.125 595.184 814.985 532.043 737.374 532.043 cv
cp
737.374 859.316 mo
634.523 859.316 550.85 775.643 550.85 672.795 cv
550.85 569.945 634.523 486.27 737.374 486.27 cv
840.224 486.27 923.897 569.945 923.897 672.795 cv
923.897 775.643 840.224 859.316 737.374 859.316 cv
cp
.644617 .0856947 .172274 3.0518e-5 cmyk
f
737.374 656.146 mo
728.193 656.146 720.725 663.615 720.725 672.795 cv
720.725 681.975 728.193 689.444 737.374 689.444 cv
746.554 689.444 754.021 681.975 754.021 672.795 cv
754.021 663.615 746.554 656.146 737.374 656.146 cv
cp
737.374 713.808 mo
714.76 713.808 696.361 695.409 696.361 672.795 cv
696.361 650.182 714.76 631.784 737.374 631.784 cv
759.987 631.784 778.384 650.182 778.384 672.795 cv
778.384 695.409 759.987 713.808 737.374 713.808 cv
cp
f
731.892 460.531 mo
746.51 460.531 li
753.818 489.158 li
724.583 489.158 li
731.892 460.531 li
cp
f
787.016 466.346 mo
801.136 470.129 li
800.787 499.671 li
772.547 492.105 li
787.016 466.346 li
cp
f
838.757 486.229 mo
851.416 493.538 li
843.433 521.984 li
818.113 507.367 li
838.757 486.229 li
cp
f
883.588 518.826 mo
893.925 529.161 li
878.852 554.571 li
858.179 533.9 li
883.588 518.826 li
cp
f
918.456 561.917 mo
925.765 574.575 li
904.631 595.219 li
890.012 569.898 li
918.456 561.917 li
cp
f
940.983 612.562 mo
944.767 626.682 li
919.009 641.15 li
911.441 612.91 li
940.983 612.562 li
cp
f
949.635 667.313 mo
949.635 681.928 li
921.01 689.237 li
921.008 660.004 li
949.635 667.313 li
cp
f
943.822 722.435 mo
940.038 736.554 li
910.495 736.206 li
918.063 707.966 li
943.822 722.435 li
cp
f
923.938 774.176 mo
916.629 786.837 li
888.185 778.854 li
902.803 753.533 li
923.938 774.176 li
cp
f
891.342 819.007 mo
881.004 829.344 li
855.594 814.272 li
876.268 793.597 li
891.342 819.007 li
cp
f
848.251 853.875 mo
835.593 861.184 li
814.95 840.049 li
840.268 825.429 li
848.251 853.875 li
cp
f
797.606 876.402 mo
783.487 880.188 li
769.017 854.428 li
797.258 846.862 li
797.606 876.402 li
cp
f
742.855 885.054 mo
728.238 885.054 li
720.928 856.429 li
750.164 856.429 li
742.855 885.054 li
cp
f
687.731 879.241 mo
673.612 875.458 li
673.961 845.917 li
702.2 853.484 li
687.731 879.241 li
cp
f
635.991 859.358 mo
623.332 852.048 li
631.314 823.606 li
656.632 838.223 li
635.991 859.358 li
cp
f
591.159 826.761 mo
580.823 816.424 li
595.895 791.013 li
616.568 811.687 li
591.159 826.761 li
cp
f
556.291 783.67 mo
548.983 771.014 li
570.117 750.369 li
584.735 775.688 li
556.291 783.67 li
cp
f
533.764 733.025 mo
529.98 718.906 li
555.739 704.436 li
563.306 732.677 li
533.764 733.025 li
cp
f
525.112 678.273 mo
525.112 663.659 li
553.737 656.35 li
553.737 685.585 li
525.112 678.273 li
cp
f
530.926 623.149 mo
534.709 609.033 li
564.25 609.378 li
556.686 637.622 li
530.926 623.149 li
cp
f
550.809 571.41 mo
558.118 558.75 li
586.563 566.733 li
571.945 592.052 li
550.809 571.41 li
cp
f
583.405 526.577 mo
593.741 516.242 li
619.152 531.315 li
598.479 551.987 li
583.405 526.577 li
cp
f
626.496 491.711 mo
639.154 484.402 li
659.797 505.536 li
634.478 520.156 li
626.496 491.711 li
cp
f
677.141 469.185 mo
691.26 465.402 li
705.729 491.158 li
677.489 498.726 li
677.141 469.185 li
cp
f
748.502 643.964 mo
726.245 643.964 li
726.245 498.596 li
748.502 498.596 li
748.502 643.964 li
cp
f
768.231 674.468 mo
761.354 653.303 li
899.603 608.382 li
906.481 629.547 li
768.231 674.468 li
cp
f
830.76 820.261 mo
745.316 702.66 li
763.32 689.578 li
848.765 807.18 li
830.76 820.261 li
cp
f
643.985 820.261 mo
625.98 807.18 li
711.424 689.578 li
729.43 702.66 li
643.985 820.261 li
cp
f
706.517 674.466 mo
568.265 629.547 li
575.144 608.382 li
713.393 653.301 li
706.517 674.466 li
cp
f
960.621 526.686 mo
960.621 510.874 973.438 498.055 989.251 498.055 cv
1005.06 498.055 1017.88 510.874 1017.88 526.686 cv
1017.88 542.498 1005.06 555.316 989.251 555.316 cv
973.438 555.316 960.621 542.498 960.621 526.686 cv
cp
1056.51 533.231 mo
1056.51 520.142 li
1035.47 514.77 li
1034.34 510.384 1032.6 506.248 1030.35 502.445 cv
1041.44 483.754 li
1032.18 474.498 li
1013.49 485.587 li
1009.69 483.34 1005.55 481.595 1001.17 480.468 cv
995.796 459.425 li
982.707 459.425 li
977.335 480.468 li
972.95 481.595 968.813 483.34 965.011 485.587 cv
946.318 474.498 li
937.063 483.753 li
948.152 502.445 li
945.905 506.248 944.161 510.384 943.034 514.769 cv
921.99 520.142 li
921.99 533.23 li
943.034 538.602 li
944.161 542.988 945.904 547.124 948.152 550.926 cv
937.063 569.618 li
946.318 578.874 li
965.011 567.784 li
968.813 570.032 972.948 571.776 977.334 572.903 cv
982.706 593.946 li
995.796 593.947 li
1001.17 572.903 li
1005.55 571.776 1009.69 570.033 1013.49 567.784 cv
1032.18 578.874 li
1041.44 569.619 li
1030.35 550.927 li
1032.6 547.124 1034.34 542.988 1035.47 538.604 cv
1056.51 533.231 li
cp
f
2136.25 1077.85 mo
2136.25 1064.77 2146.85 1054.18 2159.92 1054.18 cv
2172.99 1054.18 2183.59 1064.77 2183.59 1077.85 cv
2183.59 1090.92 2172.99 1101.51 2159.92 1101.51 cv
2146.85 1101.51 2136.25 1090.92 2136.25 1077.85 cv
cp
2215.53 1083.26 mo
2215.53 1072.44 li
2198.13 1067.99 li
2197.2 1064.37 2195.76 1060.95 2193.9 1057.81 cv
2203.07 1042.35 li
2195.42 1034.7 li
2179.96 1043.87 li
2176.82 1042.01 2173.4 1040.57 2169.77 1039.64 cv
2165.33 1022.24 li
2154.51 1022.24 li
2150.07 1039.64 li
2146.45 1040.57 2143.03 1042.01 2139.88 1043.87 cv
2124.43 1034.7 li
2116.78 1042.35 li
2125.95 1057.81 li
2124.09 1060.95 2122.65 1064.37 2121.72 1067.99 cv
2104.32 1072.44 li
2104.32 1083.26 li
2121.72 1087.7 li
2122.65 1091.32 2124.09 1094.74 2125.95 1097.88 cv
2116.78 1113.34 li
2124.43 1120.99 li
2139.88 1111.82 li
2143.03 1113.68 2146.45 1115.12 2150.07 1116.05 cv
2154.51 1133.45 li
2165.33 1133.45 li
2169.77 1116.05 li
2173.4 1115.12 2176.82 1113.68 2179.96 1111.82 cv
2195.41 1120.99 li
2203.07 1113.34 li
2193.9 1097.88 li
2195.76 1094.74 2197.2 1091.32 2198.13 1087.7 cv
2215.53 1083.26 li
cp
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
1957.03 914.267 mo
1957.03 908.189 1961.96 903.261 1968.04 903.261 cv
1974.11 903.261 1979.04 908.189 1979.04 914.267 cv
1979.04 920.344 1974.11 925.272 1968.04 925.272 cv
1961.96 925.272 1957.03 920.344 1957.03 914.267 cv
cp
1993.89 916.783 mo
1993.89 911.752 li
1985.8 909.686 li
1985.37 908 1984.7 906.41 1983.83 904.949 cv
1988.1 897.764 li
1984.54 894.206 li
1977.35 898.469 li
1975.89 897.605 1974.3 896.935 1972.62 896.502 cv
1970.55 888.412 li
1965.52 888.412 li
1963.45 896.502 li
1961.77 896.935 1960.18 897.605 1958.72 898.469 cv
1951.53 894.206 li
1947.97 897.764 li
1952.24 904.949 li
1951.37 906.41 1950.7 908 1950.27 909.686 cv
1942.18 911.752 li
1942.18 916.783 li
1950.27 918.848 li
1950.7 920.534 1951.37 922.124 1952.24 923.584 cv
1947.97 930.77 li
1951.53 934.327 li
1958.72 930.064 li
1960.18 930.929 1961.77 931.599 1963.45 932.032 cv
1965.52 940.121 li
1970.55 940.121 li
1972.62 932.032 li
1974.3 931.599 1975.89 930.929 1977.35 930.064 cv
1984.54 934.327 li
1988.1 930.77 li
1983.83 923.584 li
1984.7 922.124 1985.37 920.534 1985.8 918.848 cv
1993.89 916.783 li
cp
f
505.587 921.167 mo
487.927 921.167 473.61 906.852 473.61 889.191 cv
473.61 871.532 487.927 857.215 505.587 857.215 cv
523.247 857.215 537.563 871.532 537.563 889.191 cv
537.563 906.852 523.247 921.167 505.587 921.167 cv
cp
505.587 835.898 mo
476.153 835.898 452.293 859.758 452.293 889.191 cv
452.293 918.625 476.153 942.485 505.587 942.485 cv
535.021 942.485 558.881 918.625 558.881 889.191 cv
558.881 859.758 535.021 835.898 505.587 835.898 cv
cp
.644617 .0856947 .172274 3.0518e-5 cmyk
f
498.278 814.072 mo
512.896 814.072 li
520.204 842.699 li
490.97 842.699 li
498.278 814.072 li
cp
f
447.301 841.242 mo
457.638 830.905 li
483.048 845.98 li
462.376 866.652 li
447.301 841.242 li
cp
f
430.467 896.501 mo
430.467 881.882 li
459.094 874.575 li
459.094 903.809 li
430.467 896.501 li
cp
f
457.637 947.479 mo
447.3 937.141 li
462.375 911.731 li
483.048 932.403 li
457.637 947.479 li
cp
f
512.896 964.313 mo
498.278 964.312 li
490.969 935.685 li
520.204 935.685 li
512.896 964.313 li
cp
f
563.873 937.142 mo
553.537 947.479 li
528.126 932.403 li
548.798 911.731 li
563.873 937.142 li
cp
f
580.708 881.882 mo
580.707 896.502 li
552.08 903.809 li
552.08 874.575 li
580.708 881.882 li
cp
f
553.538 830.905 mo
563.873 841.243 li
548.798 866.652 li
528.126 845.98 li
553.538 830.905 li
cp
f
709.646 1170.17 mo
709.646 1163.99 714.652 1158.99 720.826 1158.99 cv
727 1158.99 732.006 1163.99 732.006 1170.17 cv
732.006 1176.34 727 1181.35 720.826 1181.35 cv
714.652 1181.35 709.646 1176.34 709.646 1170.17 cv
cp
747.092 1172.72 mo
747.092 1167.61 li
738.874 1165.51 li
738.435 1163.8 737.753 1162.19 736.876 1160.7 cv
741.206 1153.4 li
737.592 1149.79 li
730.292 1154.12 li
728.808 1153.24 727.192 1152.56 725.48 1152.12 cv
723.382 1143.9 li
718.271 1143.9 li
716.173 1152.12 li
714.46 1152.56 712.846 1153.24 711.36 1154.12 cv
704.061 1149.79 li
700.447 1153.4 li
704.777 1160.7 li
703.899 1162.19 703.219 1163.8 702.778 1165.51 cv
694.561 1167.61 li
694.561 1172.72 li
702.778 1174.82 li
703.219 1176.53 703.899 1178.15 704.777 1179.63 cv
700.447 1186.93 li
704.061 1190.55 li
711.36 1186.22 li
712.845 1187.09 714.46 1187.78 716.173 1188.21 cv
718.271 1196.43 li
723.382 1196.43 li
725.479 1188.21 li
727.192 1187.78 728.808 1187.09 730.292 1186.22 cv
737.592 1190.55 li
741.206 1186.93 li
736.876 1179.63 li
737.753 1178.15 738.435 1176.53 738.874 1174.82 cv
747.092 1172.72 li
cp
f
1108.15 1224.97 mo
1108.15 1217.13 1114.5 1210.78 1122.34 1210.78 cv
1130.17 1210.78 1136.53 1217.13 1136.53 1224.97 cv
1136.53 1232.81 1130.17 1239.16 1122.34 1239.16 cv
1114.5 1239.16 1108.15 1232.81 1108.15 1224.97 cv
cp
1155.68 1228.21 mo
1155.68 1221.72 li
1145.25 1219.06 li
1144.69 1216.89 1143.82 1214.84 1142.71 1212.95 cv
1148.21 1203.69 li
1143.62 1199.1 li
1134.35 1204.6 li
1132.47 1203.48 1130.42 1202.62 1128.24 1202.06 cv
1125.58 1191.63 li
1119.09 1191.63 li
1116.43 1202.06 li
1114.26 1202.62 1112.21 1203.48 1110.32 1204.6 cv
1101.06 1199.1 li
1096.47 1203.69 li
1101.97 1212.95 li
1100.85 1214.84 1099.99 1216.89 1099.43 1219.06 cv
1089 1221.72 li
1089 1228.21 li
1099.43 1230.87 li
1099.99 1233.05 1100.85 1235.1 1101.97 1236.98 cv
1096.47 1246.25 li
1101.06 1250.84 li
1110.32 1245.34 li
1112.21 1246.45 1114.26 1247.32 1116.43 1247.88 cv
1119.09 1258.31 li
1125.58 1258.31 li
1128.24 1247.88 li
1130.42 1247.32 1132.47 1246.45 1134.35 1245.34 cv
1143.62 1250.84 li
1148.21 1246.25 li
1142.71 1236.98 li
1143.82 1235.1 1144.69 1233.05 1145.25 1230.87 cv
1155.68 1228.21 li
cp
.521904 .711147 .269078 .0545052 cmyk
f
1999.28 1119.16 mo
1963.96 1119.16 1935.33 1090.53 1935.33 1055.21 cv
1935.33 1019.9 1963.96 991.266 1999.28 991.266 cv
2034.6 991.266 2063.23 1019.9 2063.23 1055.21 cv
2063.23 1090.53 2034.6 1119.16 1999.28 1119.16 cv
cp
2103.32 1060.95 mo
2103.32 1049.48 li
2081.66 1043.95 li
2080.71 1036.9 2078.88 1030.13 2076.27 1023.76 cv
2092.25 1008.16 li
2086.51 998.231 li
2064.99 1004.27 li
2060.7 998.751 2055.74 993.789 2050.22 989.502 cv
2056.26 967.979 li
2046.34 962.247 li
2030.73 978.224 li
2024.36 975.617 2017.59 973.785 2010.54 972.83 cv
2005.01 951.174 li
1993.55 951.174 li
1988.02 972.83 li
1980.97 973.785 1974.2 975.617 1967.82 978.224 cv
1952.22 962.247 li
1942.29 967.979 li
1948.34 989.502 li
1942.82 993.789 1937.85 998.751 1933.57 1004.27 cv
1912.04 998.231 li
1906.31 1008.16 li
1922.29 1023.76 li
1919.68 1030.13 1917.85 1036.9 1916.89 1043.95 cv
1895.24 1049.48 li
1895.24 1060.95 li
1916.89 1066.47 li
1917.85 1073.53 1919.68 1080.29 1922.29 1086.67 cv
1906.31 1102.27 li
1912.04 1112.2 li
1933.57 1106.16 li
1937.85 1111.68 1942.82 1116.64 1948.34 1120.93 cv
1942.29 1142.45 li
1952.22 1148.18 li
1967.82 1132.2 li
1974.2 1134.81 1980.97 1136.64 1988.02 1137.6 cv
1993.55 1159.26 li
2005.01 1159.26 li
2010.54 1137.6 li
2017.59 1136.64 2024.36 1134.81 2030.73 1132.2 cv
2046.34 1148.18 li
2056.26 1142.45 li
2050.22 1120.93 li
2055.74 1116.64 2060.7 1111.68 2064.99 1106.16 cv
2086.51 1112.2 li
2092.25 1102.27 li
2076.27 1086.67 li
2078.88 1080.29 2080.71 1073.53 2081.66 1066.47 cv
2103.32 1060.95 li
cp
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
2192.79 871.508 mo
2169.63 871.508 2150.87 852.74 2150.87 829.588 cv
2150.87 806.434 2169.63 787.664 2192.79 787.664 cv
2215.94 787.664 2234.71 806.434 2234.71 829.588 cv
2234.71 852.74 2215.94 871.508 2192.79 871.508 cv
cp
2249.53 837.06 mo
2250.25 832.963 li
2242.59 829.499 li
2242.57 829.571 li
2242.57 826.418 2242.27 823.337 2241.7 820.347 cv
2248.66 817.205 li
2247.94 813.106 li
2239.55 812.472 li
2238.49 809.566 2237.16 806.794 2235.6 804.171 cv
2241.06 798.84 li
2238.98 795.238 li
2230.88 797.51 li
2230.94 797.613 li
2228.94 795.23 2226.73 793.035 2224.32 791.063 cv
2227.63 784.187 li
2224.44 781.511 li
2217.61 786.416 li
2217.7 786.491 li
2215.03 784.942 2212.2 783.635 2209.24 782.598 cv
2210 775.007 li
2206.09 773.585 li
2201.35 780.528 li
2201.47 780.571 li
2198.65 780.075 2195.75 779.801 2192.79 779.801 cv
2192.59 779.801 2192.39 779.813 2192.19 779.816 cv
2190.29 772.413 li
2186.14 772.413 li
2184.05 780.559 li
2184.18 780.559 li
2181.07 781.1 2178.07 781.924 2175.19 783.011 cv
2170.89 776.711 li
2166.98 778.137 li
2167.81 786.502 li
2167.92 786.463 li
2165.22 788.023 2162.68 789.828 2160.34 791.849 cv
2154.13 787.39 li
2150.94 790.065 li
2154.58 797.643 li
2154.68 797.563 li
2152.68 799.937 2150.91 802.5 2149.38 805.221 cv
2142.03 803.158 li
2139.95 806.76 li
2145.96 812.636 li
2145.97 812.623 li
2144.94 815.481 2144.16 818.463 2143.66 821.539 cv
2136.05 822.112 li
2135.33 826.21 li
2142.99 829.676 li
2143 829.597 li
2143 832.752 2143.31 835.833 2143.87 838.826 cv
2136.91 841.969 li
2137.64 846.067 li
2146.02 846.699 li
2147.09 849.604 2148.42 852.378 2149.98 855.001 cv
2144.52 860.333 li
2146.6 863.934 li
2154.7 861.661 li
2154.64 861.564 li
2156.64 863.945 2158.85 866.138 2161.25 868.108 cv
2157.95 874.985 li
2161.13 877.662 li
2167.96 872.758 li
2167.88 872.686 li
2170.55 874.233 2173.37 875.539 2176.33 876.575 cv
2175.58 884.164 li
2179.48 885.589 li
2184.23 878.643 li
2184.12 878.606 li
2186.94 879.1 2189.83 879.374 2192.79 879.374 cv
2192.99 879.374 2193.19 879.36 2193.39 879.357 cv
2195.28 886.763 li
2199.44 886.763 li
2201.52 878.614 li
2201.41 878.614 li
2204.51 878.073 2207.51 877.25 2210.39 876.163 cv
2214.69 882.462 li
2218.59 881.039 li
2217.76 872.669 li
2217.66 872.706 li
2220.36 871.146 2222.9 869.344 2225.24 867.324 cv
2231.45 871.784 li
2234.64 869.108 li
2230.99 861.531 li
2230.9 861.609 li
2232.89 859.236 2234.67 856.673 2236.2 853.952 cv
2243.55 856.015 li
2245.63 852.413 li
2239.61 846.537 li
2239.61 846.551 li
2240.64 843.692 2241.42 840.71 2241.92 837.635 cv
2249.53 837.06 li
cp
.311803 .00500496 .0834974 3.0518e-5 cmyk
f
2106.19 876.952 mo
2094.85 876.952 2085.66 867.763 2085.66 856.429 cv
2085.66 845.092 2094.85 835.903 2106.19 835.903 cv
2117.52 835.903 2126.71 845.092 2126.71 856.429 cv
2126.71 867.763 2117.52 876.952 2106.19 876.952 cv
cp
2133.96 860.087 mo
2134.32 858.08 li
2130.57 856.384 li
2130.56 856.421 li
2130.56 854.876 2130.41 853.368 2130.13 851.903 cv
2133.54 850.365 li
2133.19 848.36 li
2129.08 848.048 li
2129.08 848.049 li
2128.56 846.627 2127.91 845.27 2127.14 843.985 cv
2129.82 841.376 li
2128.8 839.612 li
2124.84 840.723 li
2124.86 840.773 li
2123.89 839.608 2122.8 838.533 2121.62 837.569 cv
2123.24 834.201 li
2121.68 832.891 li
2118.34 835.293 li
2118.38 835.326 li
2117.07 834.569 2115.69 833.931 2114.24 833.423 cv
2114.61 829.707 li
2112.7 829.012 li
2110.38 832.41 li
2110.44 832.431 li
2109.06 832.188 2107.64 832.054 2106.19 832.054 cv
2106.09 832.054 2105.99 832.06 2105.89 832.062 cv
2104.97 828.438 li
2102.93 828.438 li
2101.91 832.425 li
2101.97 832.425 li
2100.45 832.691 2098.98 833.094 2097.57 833.625 cv
2095.47 830.542 li
2093.55 831.24 li
2093.96 835.335 li
2094.01 835.315 li
2092.69 836.079 2091.45 836.962 2090.3 837.953 cv
2087.26 835.77 li
2085.7 837.079 li
2087.48 840.789 li
2087.53 840.75 li
2086.55 841.913 2085.68 843.167 2084.93 844.5 cv
2081.34 843.489 li
2080.32 845.253 li
2083.26 848.129 li
2083.27 848.124 li
2082.76 849.523 2082.38 850.982 2082.13 852.488 cv
2078.41 852.769 li
2078.06 854.775 li
2081.81 856.472 li
2081.81 856.433 li
2081.81 857.978 2081.96 859.487 2082.24 860.951 cv
2078.83 862.49 li
2079.19 864.497 li
2083.29 864.806 li
2083.81 866.227 2084.46 867.585 2085.23 868.87 cv
2082.56 871.481 li
2083.57 873.244 li
2087.54 872.13 li
2087.51 872.085 li
2088.49 873.25 2089.57 874.323 2090.75 875.286 cv
2089.13 878.654 li
2090.69 879.964 li
2094.03 877.563 li
2093.99 877.525 li
2095.3 878.284 2096.68 878.924 2098.13 879.431 cv
2097.76 883.147 li
2099.67 883.844 li
2101.99 880.445 li
2101.94 880.424 li
2103.32 880.667 2104.74 880.801 2106.19 880.801 cv
2106.29 880.801 2106.38 880.795 2106.48 880.794 cv
2107.41 884.42 li
2109.44 884.42 li
2110.46 880.431 li
2110.4 880.431 li
2111.92 880.166 2113.39 879.762 2114.8 879.229 cv
2116.91 882.314 li
2118.82 881.618 li
2118.41 877.52 li
2118.36 877.539 li
2119.68 876.774 2120.93 875.892 2122.07 874.903 cv
2125.11 877.086 li
2126.67 875.776 li
2124.89 872.068 li
2124.84 872.111 li
2125.82 870.948 2126.69 869.69 2127.44 868.357 cv
2131.04 869.367 li
2132.06 867.604 li
2129.11 864.726 li
2129.11 864.734 li
2129.61 863.334 2129.99 861.875 2130.24 860.368 cv
2133.96 860.087 li
cp
f
681.938 1063.24 mo
658.785 1063.24 640.016 1044.48 640.016 1021.32 cv
640.016 998.169 658.785 979.399 681.938 979.399 cv
705.092 979.399 723.86 998.169 723.86 1021.32 cv
723.86 1044.48 705.092 1063.24 681.938 1063.24 cv
cp
681.938 971.537 mo
654.443 971.537 632.153 993.826 632.153 1021.32 cv
632.153 1048.82 654.443 1071.11 681.938 1071.11 cv
709.434 1071.11 731.725 1048.82 731.725 1021.32 cv
731.725 993.826 709.434 971.537 681.938 971.537 cv
cp
.644617 .0856947 .172274 3.0518e-5 cmyk
f
675.286 964.148 mo
679.445 964.148 li
681.526 972.294 li
673.206 972.294 li
675.286 964.148 li
cp
f
656.132 969.872 mo
660.042 968.446 li
664.781 975.392 li
656.964 978.238 li
656.132 969.872 li
cp
f
640.091 981.8 mo
643.279 979.125 li
650.108 984.032 li
643.735 989.378 li
640.091 981.8 li
cp
f
629.097 998.496 mo
631.178 994.893 li
639.272 997.166 li
635.114 1004.37 li
629.097 998.496 li
cp
f
624.478 1017.95 mo
625.2 1013.85 li
633.583 1013.22 li
632.139 1021.41 li
624.478 1017.95 li
cp
f
626.789 1037.8 mo
626.064 1033.7 li
633.728 1030.24 li
635.172 1038.43 li
626.789 1037.8 li
cp
f
635.751 1055.67 mo
633.669 1052.07 li
639.687 1046.19 li
643.846 1053.4 li
635.751 1055.67 li
cp
f
650.284 1069.4 mo
647.096 1066.72 li
650.74 1059.14 li
657.115 1064.49 li
650.284 1069.4 li
cp
f
668.635 1077.32 mo
664.726 1075.9 li
665.559 1067.53 li
673.377 1070.38 li
668.635 1077.32 li
cp
f
688.591 1078.5 mo
684.431 1078.5 li
682.352 1070.35 li
690.671 1070.35 li
688.591 1078.5 li
cp
f
707.744 1072.77 mo
703.836 1074.2 li
699.096 1067.25 li
706.913 1064.4 li
707.744 1072.77 li
cp
f
723.786 1060.84 mo
720.6 1063.52 li
713.771 1058.61 li
720.143 1053.27 li
723.786 1060.84 li
cp
f
734.78 1044.15 mo
732.7 1047.75 li
724.604 1045.48 li
728.764 1038.27 li
734.78 1044.15 li
cp
f
739.4 1024.7 mo
738.678 1028.79 li
730.292 1029.43 li
731.737 1021.23 li
739.4 1024.7 li
cp
f
737.089 1004.84 mo
737.813 1008.94 li
730.148 1012.4 li
728.704 1004.21 li
737.089 1004.84 li
cp
f
728.126 986.973 mo
730.208 990.576 li
724.19 996.45 li
720.031 989.245 li
728.126 986.973 li
cp
f
713.594 973.247 mo
716.781 975.921 li
713.135 983.5 li
706.763 978.15 li
713.594 973.247 li
cp
f
695.242 965.32 mo
699.152 966.742 li
698.318 975.109 li
690.501 972.263 li
695.242 965.32 li
cp
f
444.449 800.208 mo
410.32 800.208 382.653 772.542 382.653 738.417 cv
382.653 704.287 410.32 676.62 444.449 676.62 cv
478.576 676.62 506.242 704.287 506.242 738.417 cv
506.242 772.542 478.576 800.208 444.449 800.208 cv
cp
444.449 665.029 mo
403.921 665.029 371.063 697.885 371.063 738.417 cv
371.063 778.942 403.921 811.8 444.449 811.8 cv
484.977 811.8 517.834 778.942 517.834 738.417 cv
517.834 697.885 484.977 665.029 444.449 665.029 cv
cp
f
434.644 654.14 mo
440.773 654.14 li
443.841 666.146 li
431.576 666.146 li
434.644 654.14 li
cp
f
406.409 662.576 mo
412.171 660.475 li
419.16 670.712 li
407.637 674.908 li
406.409 662.576 li
cp
f
382.763 680.16 mo
387.462 676.216 li
397.529 683.447 li
388.135 691.329 li
382.763 680.16 li
cp
f
366.559 704.768 mo
369.625 699.458 li
381.558 702.808 li
375.429 713.429 li
366.559 704.768 li
cp
f
359.749 733.438 mo
360.814 727.397 li
373.172 726.466 li
371.043 738.546 li
359.749 733.438 li
cp
f
363.156 762.708 mo
362.09 756.667 li
373.384 751.564 li
375.514 763.639 li
363.156 762.708 li
cp
f
376.366 789.044 mo
373.299 783.735 li
382.169 775.076 li
388.299 785.692 li
376.366 789.044 li
cp
f
397.789 809.278 mo
393.09 805.333 li
398.46 794.166 li
407.858 802.05 li
397.789 809.278 li
cp
f
424.839 820.963 mo
419.076 818.862 li
420.303 806.533 li
431.828 810.725 li
424.839 820.963 li
cp
f
454.255 822.694 mo
448.123 822.694 li
445.057 810.683 li
457.321 810.683 li
454.255 822.694 li
cp
f
482.487 814.257 mo
476.726 816.354 li
469.738 806.116 li
481.261 801.92 li
482.487 814.257 li
cp
f
506.132 796.671 mo
501.436 800.614 li
491.369 793.382 li
500.761 785.501 li
506.132 796.671 li
cp
f
522.338 772.062 mo
519.271 777.371 li
507.338 774.021 li
513.47 763.4 li
522.338 772.062 li
cp
f
529.147 743.391 mo
528.084 749.43 li
515.723 750.363 li
517.853 738.284 li
529.147 743.391 li
cp
f
525.743 714.123 mo
526.809 720.163 li
515.511 725.265 li
513.382 713.187 li
525.743 714.123 li
cp
f
512.53 687.784 mo
515.6 693.094 li
506.729 701.753 li
500.598 691.133 li
512.53 687.784 li
cp
f
491.108 667.55 mo
495.808 671.493 li
490.434 682.663 li
481.041 674.778 li
491.108 667.55 li
cp
f
464.058 655.867 mo
469.822 657.962 li
468.592 670.295 li
457.07 666.101 li
464.058 655.867 li
cp
f
681.938 1102.87 mo
636.897 1102.87 600.388 1066.36 600.388 1021.32 cv
600.388 976.285 636.897 939.774 681.938 939.774 cv
726.976 939.774 763.487 976.285 763.487 1021.32 cv
763.487 1066.36 726.976 1102.87 681.938 1102.87 cv
cp
681.938 915.27 mo
623.365 915.27 575.883 962.751 575.883 1021.32 cv
575.883 1079.9 623.365 1127.38 681.938 1127.38 cv
740.51 1127.38 787.992 1079.9 787.992 1021.32 cv
787.992 962.751 740.51 915.27 681.938 915.27 cv
cp
f
674.628 888.647 mo
689.247 888.647 li
696.555 917.275 li
667.321 917.275 li
674.628 888.647 li
cp
f
609.271 910.077 mo
621.93 902.768 li
642.572 923.906 li
617.255 938.523 li
609.271 910.077 li
cp
f
563.382 961.315 mo
570.691 948.656 li
599.138 956.641 li
584.521 981.958 li
563.382 961.315 li
cp
f
549.262 1028.63 mo
549.262 1014.01 li
577.89 1006.71 li
577.89 1035.94 li
549.262 1028.63 li
cp
f
570.692 1093.99 mo
563.382 1081.33 li
584.521 1060.69 li
599.138 1086.01 li
570.692 1093.99 li
cp
f
621.93 1139.88 mo
609.271 1132.57 li
617.256 1104.12 li
642.573 1118.74 li
621.93 1139.88 li
cp
f
689.247 1154 mo
674.63 1154 li
667.322 1125.37 li
696.556 1125.37 li
689.247 1154 li
cp
f
754.606 1132.57 mo
741.946 1139.88 li
721.304 1118.74 li
746.622 1104.12 li
754.606 1132.57 li
cp
f
800.494 1081.33 mo
793.185 1093.99 li
764.738 1086.01 li
779.355 1060.69 li
800.494 1081.33 li
cp
f
814.615 1014.01 mo
814.615 1028.63 li
785.987 1035.94 li
785.986 1006.71 li
814.615 1014.01 li
cp
f
793.185 948.656 mo
800.494 961.315 li
779.355 981.958 li
764.738 956.641 li
793.185 948.656 li
cp
f
741.947 902.768 mo
754.606 910.077 li
746.622 938.522 li
721.304 923.906 li
741.947 902.768 li
cp
f
1991.17 1254.79 mo
1979.11 1254.79 1969.33 1245.01 1969.33 1232.95 cv
1969.33 1220.89 1979.11 1211.11 1991.17 1211.11 cv
2003.23 1211.11 2013.01 1220.89 2013.01 1232.95 cv
2013.01 1245.01 2003.23 1254.79 1991.17 1254.79 cv
cp
1991.17 1204.54 mo
1975.48 1204.54 1962.77 1217.26 1962.77 1232.95 cv
1962.77 1248.63 1975.48 1261.35 1991.17 1261.35 cv
2006.86 1261.35 2019.57 1248.63 2019.57 1232.95 cv
2019.57 1217.26 2006.86 1204.54 1991.17 1204.54 cv
cp
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
1989.21 1197.41 mo
1993.13 1197.41 li
1995.09 1205.08 li
1987.26 1205.08 li
1989.21 1197.41 li
cp
f
1971.71 1203.15 mo
1975.1 1201.2 li
1980.63 1206.86 li
1973.85 1210.77 li
1971.71 1203.15 li
cp
f
1959.42 1216.88 mo
1961.38 1213.49 li
1969 1215.62 li
1965.08 1222.4 li
1959.42 1216.88 li
cp
f
1955.64 1234.9 mo
1955.64 1230.99 li
1963.3 1229.03 li
1963.3 1236.86 li
1955.64 1234.9 li
cp
f
1961.38 1252.41 mo
1959.42 1249.02 li
1965.08 1243.49 li
1969 1250.27 li
1961.38 1252.41 li
cp
f
1975.1 1264.7 mo
1971.71 1262.74 li
1973.85 1255.12 li
1980.63 1259.04 li
1975.1 1264.7 li
cp
f
1993.13 1268.48 mo
1989.21 1268.48 li
1987.26 1260.81 li
1995.09 1260.81 li
1993.13 1268.48 li
cp
f
2010.63 1262.74 mo
2007.24 1264.7 li
2001.71 1259.04 li
2008.49 1255.12 li
2010.63 1262.74 li
cp
f
2022.92 1249.02 mo
2020.96 1252.41 li
2013.35 1250.27 li
2017.26 1243.49 li
2022.92 1249.02 li
cp
f
2026.7 1230.99 mo
2026.7 1234.9 li
2019.04 1236.86 li
2019.04 1229.03 li
2026.7 1230.99 li
cp
f
2020.96 1213.49 mo
2022.92 1216.88 li
2017.26 1222.4 li
2013.35 1215.62 li
2020.96 1213.49 li
cp
f
2007.24 1201.2 mo
2010.63 1203.15 li
2008.49 1210.77 li
2001.71 1206.86 li
2007.24 1201.2 li
cp
f
716.573 321.332 mo
712.347 321.332 708.784 318.057 708.49 313.777 cv
708.184 309.309 711.557 305.438 716.026 305.131 cv
718.108 304.988 720.194 304.858 722.283 304.74 cv
726.745 304.483 730.584 307.91 730.836 312.381 cv
731.087 316.854 727.667 320.683 723.194 320.935 cv
721.172 321.048 719.152 321.174 717.136 321.313 cv
716.947 321.326 716.759 321.332 716.573 321.332 cv
cp
673.684 326.181 mo
669.762 326.181 666.314 323.33 665.683 319.334 cv
664.985 314.91 668.005 310.757 672.429 310.059 cv
674.492 309.733 676.558 309.42 678.628 309.119 cv
683.06 308.48 687.176 311.547 687.82 315.979 cv
688.463 320.412 685.392 324.527 680.959 325.171 cv
678.955 325.462 676.955 325.765 674.958 326.08 cv
674.53 326.147 674.104 326.181 673.684 326.181 cv
cp
631.395 334.799 mo
627.762 334.799 624.456 332.342 623.533 328.659 cv
622.444 324.314 625.084 319.91 629.428 318.821 cv
631.456 318.313 633.487 317.818 635.524 317.335 cv
639.884 316.304 644.253 318.998 645.285 323.356 cv
646.318 327.715 643.622 332.085 639.264 333.118 cv
637.295 333.584 635.331 334.063 633.372 334.554 cv
632.71 334.72 632.046 334.799 631.395 334.799 cv
cp
590.037 347.141 mo
586.68 347.141 583.541 345.041 582.377 341.691 cv
580.906 337.46 583.144 332.838 587.375 331.368 cv
589.348 330.682 591.327 330.008 593.313 329.347 cv
597.561 327.929 602.154 330.226 603.571 334.475 cv
604.988 338.724 602.691 343.317 598.443 344.733 cv
596.522 345.374 594.609 346.025 592.7 346.688 cv
591.818 346.995 590.92 347.141 590.037 347.141 cv
cp
549.996 363.083 mo
546.903 363.083 543.949 361.304 542.596 358.301 cv
540.757 354.218 542.576 349.416 546.66 347.576 cv
548.558 346.722 550.461 345.878 552.372 345.046 cv
556.478 343.259 561.257 345.137 563.045 349.244 cv
564.833 353.351 562.954 358.129 558.848 359.917 cv
557 360.722 555.157 361.538 553.321 362.365 cv
552.24 362.852 551.109 363.083 549.996 363.083 cv
cp
511.503 382.518 mo
508.667 382.518 505.913 381.027 504.425 378.378 cv
502.231 374.473 503.619 369.529 507.523 367.335 cv
509.341 366.315 511.165 365.305 512.997 364.307 cv
516.931 362.162 521.855 363.613 523.999 367.545 cv
526.143 371.479 524.693 376.404 520.76 378.548 cv
518.989 379.513 517.225 380.49 515.468 381.477 cv
514.212 382.183 512.848 382.518 511.503 382.518 cv
cp
474.86 405.283 mo
472.272 405.283 469.73 404.048 468.159 401.751 cv
465.63 398.054 466.577 393.007 470.274 390.479 cv
471.996 389.301 473.725 388.134 475.461 386.977 cv
479.189 384.494 484.224 385.504 486.707 389.231 cv
489.189 392.959 488.18 397.994 484.452 400.477 cv
482.771 401.597 481.098 402.726 479.432 403.866 cv
478.031 404.824 476.438 405.283 474.86 405.283 cv
cp
440.349 431.192 mo
438.007 431.192 435.683 430.182 434.079 428.231 cv
431.235 424.771 431.735 419.661 435.195 416.816 cv
436.808 415.491 438.429 414.176 440.058 412.87 cv
443.553 410.07 448.656 410.631 451.458 414.127 cv
454.259 417.622 453.697 422.726 450.202 425.527 cv
448.625 426.792 447.055 428.064 445.494 429.348 cv
443.985 430.588 442.162 431.192 440.349 431.192 cv
cp
408.235 460.038 mo
406.133 460.038 404.033 459.227 402.445 457.607 cv
399.309 454.41 399.357 449.275 402.555 446.139 cv
404.046 444.676 405.547 443.222 407.058 441.777 cv
410.294 438.681 415.428 438.795 418.524 442.031 cv
421.621 445.268 421.507 450.401 418.27 453.498 cv
416.809 454.896 415.357 456.302 413.914 457.717 cv
412.335 459.266 410.284 460.038 408.235 460.038 cv
cp
378.766 491.596 mo
376.902 491.596 375.029 490.958 373.501 489.652 cv
370.096 486.742 369.695 481.623 372.604 478.218 cv
373.964 476.627 375.333 475.045 376.712 473.473 cv
379.666 470.105 384.79 469.77 388.157 472.724 cv
391.524 475.677 391.859 480.801 388.906 484.168 cv
387.572 485.688 386.249 487.217 384.936 488.755 cv
383.331 490.632 381.056 491.596 378.766 491.596 cv
cp
352.176 525.627 mo
350.548 525.627 348.904 525.138 347.477 524.121 cv
343.829 521.522 342.979 516.458 345.579 512.81 cv
346.793 511.105 348.019 509.409 349.254 507.721 cv
351.9 504.105 356.975 503.321 360.588 505.966 cv
364.203 508.611 364.989 513.686 362.343 517.3 cv
361.148 518.933 359.963 520.574 358.788 522.223 cv
357.206 524.443 354.709 525.627 352.176 525.627 cv
cp
328.68 561.875 mo
327.285 561.875 325.872 561.515 324.581 560.757 cv
320.719 558.489 319.427 553.519 321.695 549.657 cv
322.755 547.851 323.827 546.051 324.91 544.259 cv
327.228 540.426 332.213 539.196 336.046 541.514 cv
339.879 543.831 341.108 548.816 338.792 552.649 cv
337.744 554.383 336.708 556.123 335.681 557.871 cv
334.171 560.442 331.462 561.875 328.68 561.875 cv
cp
308.476 600.067 mo
307.313 600.067 306.132 599.816 305.01 599.285 cv
300.962 597.368 299.235 592.532 301.152 588.484 cv
302.049 586.588 302.959 584.7 303.88 582.817 cv
305.849 578.794 310.706 577.13 314.729 579.097 cv
318.752 581.066 320.418 585.923 318.449 589.946 cv
317.559 591.766 316.679 593.593 315.811 595.426 cv
314.425 598.354 311.513 600.067 308.476 600.067 cv
cp
291.735 639.914 mo
290.804 639.914 289.856 639.752 288.931 639.411 cv
284.729 637.861 282.578 633.199 284.127 628.996 cv
284.854 627.026 285.592 625.063 286.343 623.104 cv
287.945 618.922 292.633 616.83 296.818 618.434 cv
301 620.037 303.091 624.727 301.488 628.909 cv
300.762 630.803 300.048 632.702 299.346 634.607 cv
298.137 637.884 295.035 639.914 291.735 639.914 cv
cp
278.623 681.038 mo
277.921 681.038 277.209 680.947 276.5 680.755 cv
272.176 679.585 269.619 675.131 270.789 670.808 cv
271.336 668.788 271.896 666.772 272.466 664.763 cv
273.691 660.455 278.175 657.954 282.485 659.18 cv
286.793 660.405 289.293 664.891 288.068 669.199 cv
287.515 671.143 286.975 673.091 286.446 675.044 cv
285.468 678.659 282.196 681.038 278.623 681.038 cv
cp
269.214 723.163 mo
268.745 723.163 268.268 723.122 267.789 723.037 cv
263.379 722.255 260.438 718.045 261.22 713.635 cv
261.585 711.575 261.963 709.52 262.354 707.467 cv
263.191 703.066 267.443 700.18 271.837 701.017 cv
276.237 701.854 279.125 706.1 278.287 710.5 cv
277.909 712.485 277.544 714.474 277.19 716.467 cv
276.493 720.398 273.073 723.163 269.214 723.163 cv
cp
263.566 765.953 mo
263.33 765.953 263.092 765.942 262.852 765.921 cv
258.389 765.532 255.088 761.599 255.479 757.137 cv
255.66 755.051 255.855 752.97 256.063 750.892 cv
256.509 746.435 260.489 743.187 264.94 743.63 cv
269.397 744.076 272.648 748.051 272.203 752.507 cv
272.001 754.518 271.813 756.531 271.636 758.548 cv
271.268 762.77 267.726 765.953 263.566 765.953 cv
cp
261.682 809.071 mo
257.203 809.071 253.572 805.44 253.572 800.961 cv
253.572 798.868 253.584 796.778 253.61 794.692 cv
253.666 790.213 257.326 786.584 261.82 786.683 cv
266.299 786.738 269.884 790.414 269.829 794.892 cv
269.804 796.912 269.792 798.936 269.792 800.961 cv
269.792 805.44 266.16 809.071 261.682 809.071 cv
cp
.47245 .0303044 .131777 3.0518e-5 cmyk
f
748.541 272.435 mo
817.167 312.058 li
748.541 351.679 li
748.541 272.435 li
cp
f
1623.97 373.931 mo
1582.56 397.835 li
1623.97 421.742 li
1623.97 373.931 li
cp
f
1632.9 402.729 mo
1623.97 402.729 li
1623.97 392.942 li
1632.9 392.942 li
1632.9 402.729 li
cp
1650.77 402.729 mo
1641.84 402.729 li
1641.84 392.942 li
1650.77 392.942 li
1650.77 402.729 li
cp
1668.64 402.729 mo
1659.71 402.729 li
1659.71 392.942 li
1668.64 392.942 li
1668.64 402.729 li
cp
1686.51 402.729 mo
1677.58 402.729 li
1677.58 392.942 li
1686.51 392.942 li
1686.51 402.729 li
cp
1704.38 402.729 mo
1695.45 402.729 li
1695.45 392.942 li
1704.38 392.942 li
1704.38 402.729 li
cp
1722.25 402.729 mo
1713.32 402.729 li
1713.32 392.942 li
1722.25 392.942 li
1722.25 402.729 li
cp
1740.12 402.729 mo
1731.19 402.729 li
1731.19 392.942 li
1740.12 392.942 li
1740.12 402.729 li
cp
1757.99 402.729 mo
1749.05 402.729 li
1749.05 392.942 li
1757.99 392.942 li
1757.99 402.729 li
cp
1775.86 402.729 mo
1766.92 402.729 li
1766.92 392.942 li
1775.86 392.942 li
1775.86 402.729 li
cp
1793.73 402.729 mo
1784.79 402.729 li
1784.79 392.942 li
1793.73 392.942 li
1793.73 402.729 li
cp
1811.6 402.729 mo
1802.66 402.729 li
1802.66 392.942 li
1811.6 392.942 li
1811.6 402.729 li
cp
1829.47 402.729 mo
1820.53 402.729 li
1820.53 392.942 li
1829.47 392.942 li
1829.47 402.729 li
cp
1847.34 402.729 mo
1838.4 402.729 li
1838.4 392.942 li
1847.34 392.942 li
1847.34 402.729 li
cp
1865.21 402.729 mo
1856.27 402.729 li
1856.27 392.942 li
1865.21 392.942 li
1865.21 402.729 li
cp
1883.08 402.729 mo
1874.14 402.729 li
1874.14 392.942 li
1883.08 392.942 li
1883.08 402.729 li
cp
1900.95 402.729 mo
1892.01 402.729 li
1892.01 392.942 li
1900.95 392.942 li
1900.95 402.729 li
cp
1918.81 402.729 mo
1909.88 402.729 li
1909.88 392.942 li
1918.81 392.942 li
1918.81 402.729 li
cp
1936.68 402.729 mo
1927.75 402.729 li
1927.75 392.942 li
1936.68 392.942 li
1936.68 402.729 li
cp
1954.55 402.729 mo
1945.62 402.729 li
1945.62 392.942 li
1954.55 392.942 li
1954.55 402.729 li
cp
1968.05 402.729 mo
1963.49 402.729 li
1963.49 392.942 li
1968.05 392.942 li
1968.05 402.729 li
cp
f
1712.04 1562.59 mo
1732.92 1598.77 li
1753.81 1562.59 li
1712.04 1562.59 li
cp
f
1737.2 1375.22 mo
1728.65 1375.22 li
1728.65 1367.42 li
1737.2 1367.42 li
1737.2 1375.22 li
cp
1737.2 1390.84 mo
1728.65 1390.84 li
1728.65 1383.03 li
1737.2 1383.03 li
1737.2 1390.84 li
cp
1737.2 1406.45 mo
1728.65 1406.45 li
1728.65 1398.64 li
1737.2 1398.64 li
1737.2 1406.45 li
cp
1737.2 1422.07 mo
1728.65 1422.07 li
1728.65 1414.26 li
1737.2 1414.26 li
1737.2 1422.07 li
cp
1737.2 1437.68 mo
1728.65 1437.68 li
1728.65 1429.87 li
1737.2 1429.87 li
1737.2 1437.68 li
cp
1737.2 1453.29 mo
1728.65 1453.29 li
1728.65 1445.49 li
1737.2 1445.49 li
1737.2 1453.29 li
cp
1737.2 1468.91 mo
1728.65 1468.91 li
1728.65 1461.1 li
1737.2 1461.1 li
1737.2 1468.91 li
cp
1737.2 1484.52 mo
1728.65 1484.52 li
1728.65 1476.71 li
1737.2 1476.71 li
1737.2 1484.52 li
cp
1737.2 1500.14 mo
1728.65 1500.14 li
1728.65 1492.33 li
1737.2 1492.33 li
1737.2 1500.14 li
cp
1737.2 1515.75 mo
1728.65 1515.75 li
1728.65 1507.94 li
1737.2 1507.94 li
1737.2 1515.75 li
cp
1737.2 1531.37 mo
1728.65 1531.37 li
1728.65 1523.56 li
1737.2 1523.56 li
1737.2 1531.37 li
cp
1737.2 1546.98 mo
1728.65 1546.98 li
1728.65 1539.17 li
1737.2 1539.17 li
1737.2 1546.98 li
cp
1737.2 1562.59 mo
1728.65 1562.59 li
1728.65 1554.79 li
1737.2 1554.79 li
1737.2 1562.59 li
cp
f
361.813 1247.72 mo
320.408 1271.62 li
361.813 1295.53 li
361.813 1247.72 li
cp
f
370.748 1276.52 mo
361.813 1276.52 li
361.813 1266.73 li
370.748 1266.73 li
370.748 1276.52 li
cp
388.618 1276.52 mo
379.683 1276.52 li
379.683 1266.73 li
388.618 1266.73 li
388.618 1276.52 li
cp
406.487 1276.52 mo
397.553 1276.52 li
397.553 1266.73 li
406.487 1266.73 li
406.487 1276.52 li
cp
424.357 1276.52 mo
415.422 1276.52 li
415.422 1266.73 li
424.357 1266.73 li
424.357 1276.52 li
cp
442.226 1276.52 mo
433.292 1276.52 li
433.292 1266.73 li
442.226 1266.73 li
442.226 1276.52 li
cp
460.096 1276.52 mo
451.161 1276.52 li
451.161 1266.73 li
460.096 1266.73 li
460.096 1276.52 li
cp
477.965 1276.52 mo
469.03 1276.52 li
469.03 1266.73 li
477.965 1266.73 li
477.965 1276.52 li
cp
495.835 1276.52 mo
486.9 1276.52 li
486.9 1266.73 li
495.835 1266.73 li
495.835 1276.52 li
cp
513.704 1276.52 mo
504.77 1276.52 li
504.77 1266.73 li
513.704 1266.73 li
513.704 1276.52 li
cp
531.574 1276.52 mo
522.639 1276.52 li
522.639 1266.73 li
531.574 1266.73 li
531.574 1276.52 li
cp
549.443 1276.52 mo
540.509 1276.52 li
540.509 1266.73 li
549.443 1266.73 li
549.443 1276.52 li
cp
567.313 1276.52 mo
558.378 1276.52 li
558.378 1266.73 li
567.313 1266.73 li
567.313 1276.52 li
cp
585.182 1276.52 mo
576.248 1276.52 li
576.248 1266.73 li
585.182 1266.73 li
585.182 1276.52 li
cp
603.052 1276.52 mo
594.117 1276.52 li
594.117 1266.73 li
603.052 1266.73 li
603.052 1276.52 li
cp
620.921 1276.52 mo
611.986 1276.52 li
611.986 1266.73 li
620.921 1266.73 li
620.921 1276.52 li
cp
638.791 1276.52 mo
629.856 1276.52 li
629.856 1266.73 li
638.791 1266.73 li
638.791 1276.52 li
cp
656.66 1276.52 mo
647.726 1276.52 li
647.726 1266.73 li
656.66 1266.73 li
656.66 1276.52 li
cp
674.53 1276.52 mo
665.595 1276.52 li
665.595 1266.73 li
674.53 1266.73 li
674.53 1276.52 li
cp
692.399 1276.52 mo
683.464 1276.52 li
683.464 1266.73 li
692.399 1266.73 li
692.399 1276.52 li
cp
710.269 1276.52 mo
701.334 1276.52 li
701.334 1266.73 li
710.269 1266.73 li
710.269 1276.52 li
cp
f
2573.9 699.706 mo
2570.03 699.706 2566.89 696.57 2566.89 692.702 cv
2566.89 687.372 li
2566.89 683.503 2570.03 680.367 2573.9 680.367 cv
2577.77 680.367 2580.9 683.503 2580.9 687.372 cv
2580.9 692.702 li
2580.9 696.57 2577.77 699.706 2573.9 699.706 cv
cp
2573.9 737.012 mo
2570.03 737.012 2566.89 733.875 2566.89 730.007 cv
2566.89 724.678 li
2566.89 720.809 2570.03 717.673 2573.9 717.673 cv
2577.77 717.673 2580.9 720.809 2580.9 724.678 cv
2580.9 730.007 li
2580.9 733.875 2577.77 737.012 2573.9 737.012 cv
cp
2573.9 774.317 mo
2570.03 774.317 2566.89 771.181 2566.89 767.313 cv
2566.89 761.983 li
2566.89 758.115 2570.03 754.979 2573.9 754.979 cv
2577.77 754.979 2580.9 758.115 2580.9 761.983 cv
2580.9 767.313 li
2580.9 771.181 2577.77 774.317 2573.9 774.317 cv
cp
2573.9 811.624 mo
2570.03 811.624 2566.89 808.487 2566.89 804.618 cv
2566.89 799.289 li
2566.89 795.42 2570.03 792.284 2573.9 792.284 cv
2577.77 792.284 2580.9 795.42 2580.9 799.289 cv
2580.9 804.618 li
2580.9 808.487 2577.77 811.624 2573.9 811.624 cv
cp
2573.9 848.929 mo
2570.03 848.929 2566.89 845.792 2566.89 841.924 cv
2566.89 836.594 li
2566.89 832.726 2570.03 829.59 2573.9 829.59 cv
2577.77 829.59 2580.9 832.726 2580.9 836.594 cv
2580.9 841.924 li
2580.9 845.792 2577.77 848.929 2573.9 848.929 cv
cp
2573.9 886.233 mo
2570.03 886.233 2566.89 883.098 2566.89 879.229 cv
2566.89 873.9 li
2566.89 870.031 2570.03 866.896 2573.9 866.896 cv
2577.77 866.896 2580.9 870.031 2580.9 873.9 cv
2580.9 879.229 li
2580.9 883.098 2577.77 886.233 2573.9 886.233 cv
cp
2573.9 923.539 mo
2570.03 923.539 2566.89 920.403 2566.89 916.535 cv
2566.89 911.206 li
2566.89 907.337 2570.03 904.201 2573.9 904.201 cv
2577.77 904.201 2580.9 907.337 2580.9 911.206 cv
2580.9 916.535 li
2580.9 920.403 2577.77 923.539 2573.9 923.539 cv
cp
2568.19 960.132 mo
2567.35 960.132 2566.49 959.98 2565.66 959.659 cv
2562.06 958.265 2560.26 954.209 2561.66 950.601 cv
2562.24 949.087 2562.78 947.536 2563.27 945.989 cv
2564.44 942.3 2568.37 940.255 2572.06 941.42 cv
2575.75 942.585 2577.8 946.52 2576.63 950.209 cv
2576.05 952.034 2575.41 953.865 2574.72 955.65 cv
2573.65 958.429 2571 960.132 2568.19 960.132 cv
cp
2547.67 990.917 mo
2545.83 990.917 2543.99 990.196 2542.62 988.763 cv
2539.94 985.972 2540.03 981.538 2542.82 978.859 cv
2543.99 977.735 2545.14 976.559 2546.24 975.363 cv
2548.86 972.516 2553.29 972.331 2556.14 974.951 cv
2558.98 977.57 2559.17 982.001 2556.55 984.848 cv
2555.25 986.257 2553.9 987.642 2552.52 988.965 cv
2551.16 990.269 2549.41 990.917 2547.67 990.917 cv
cp
2516.05 1010.16 mo
2513.13 1010.16 2510.41 1008.32 2509.42 1005.41 cv
2508.18 1001.74 2510.14 997.764 2513.8 996.521 cv
2515.34 995.998 2516.88 995.419 2518.38 994.802 cv
2521.96 993.332 2526.05 995.036 2527.53 998.614 cv
2529 1002.19 2527.29 1006.29 2523.71 1007.76 cv
2521.94 1008.49 2520.12 1009.17 2518.3 1009.79 cv
2517.56 1010.04 2516.8 1010.16 2516.05 1010.16 cv
cp
2111.52 1014.66 mo
2106.19 1014.66 li
2102.32 1014.66 2099.18 1011.53 2099.18 1007.66 cv
2099.18 1003.79 2102.32 1000.65 2106.19 1000.65 cv
2111.52 1000.65 li
2115.38 1000.65 2118.52 1003.79 2118.52 1007.66 cv
2118.52 1011.53 2115.38 1014.66 2111.52 1014.66 cv
cp
2148.82 1014.66 mo
2143.49 1014.66 li
2139.62 1014.66 2136.49 1011.53 2136.49 1007.66 cv
2136.49 1003.79 2139.62 1000.65 2143.49 1000.65 cv
2148.82 1000.65 li
2152.69 1000.65 2155.83 1003.79 2155.83 1007.66 cv
2155.83 1011.53 2152.69 1014.66 2148.82 1014.66 cv
cp
2186.13 1014.66 mo
2180.8 1014.66 li
2176.93 1014.66 2173.79 1011.53 2173.79 1007.66 cv
2173.79 1003.79 2176.93 1000.65 2180.8 1000.65 cv
2186.13 1000.65 li
2190 1000.65 2193.13 1003.79 2193.13 1007.66 cv
2193.13 1011.53 2190 1014.66 2186.13 1014.66 cv
cp
2223.43 1014.66 mo
2218.1 1014.66 li
2214.23 1014.66 2211.1 1011.53 2211.1 1007.66 cv
2211.1 1003.79 2214.23 1000.65 2218.1 1000.65 cv
2223.43 1000.65 li
2227.3 1000.65 2230.44 1003.79 2230.44 1007.66 cv
2230.44 1011.53 2227.3 1014.66 2223.43 1014.66 cv
cp
2260.74 1014.66 mo
2255.41 1014.66 li
2251.54 1014.66 2248.4 1011.53 2248.4 1007.66 cv
2248.4 1003.79 2251.54 1000.65 2255.41 1000.65 cv
2260.74 1000.65 li
2264.61 1000.65 2267.74 1003.79 2267.74 1007.66 cv
2267.74 1011.53 2264.61 1014.66 2260.74 1014.66 cv
cp
2298.04 1014.66 mo
2292.71 1014.66 li
2288.85 1014.66 2285.71 1011.53 2285.71 1007.66 cv
2285.71 1003.79 2288.85 1000.65 2292.71 1000.65 cv
2298.04 1000.65 li
2301.91 1000.65 2305.05 1003.79 2305.05 1007.66 cv
2305.05 1011.53 2301.91 1014.66 2298.04 1014.66 cv
cp
2335.35 1014.66 mo
2330.02 1014.66 li
2326.15 1014.66 2323.02 1011.53 2323.02 1007.66 cv
2323.02 1003.79 2326.15 1000.65 2330.02 1000.65 cv
2335.35 1000.65 li
2339.22 1000.65 2342.35 1003.79 2342.35 1007.66 cv
2342.35 1011.53 2339.22 1014.66 2335.35 1014.66 cv
cp
2372.65 1014.66 mo
2367.33 1014.66 li
2363.46 1014.66 2360.32 1011.53 2360.32 1007.66 cv
2360.32 1003.79 2363.46 1000.65 2367.33 1000.65 cv
2372.65 1000.65 li
2376.52 1000.65 2379.66 1003.79 2379.66 1007.66 cv
2379.66 1011.53 2376.52 1014.66 2372.65 1014.66 cv
cp
2409.96 1014.66 mo
2404.63 1014.66 li
2400.76 1014.66 2397.63 1011.53 2397.63 1007.66 cv
2397.63 1003.79 2400.76 1000.65 2404.63 1000.65 cv
2409.96 1000.65 li
2413.83 1000.65 2416.97 1003.79 2416.97 1007.66 cv
2416.97 1011.53 2413.83 1014.66 2409.96 1014.66 cv
cp
2447.27 1014.66 mo
2441.94 1014.66 li
2438.07 1014.66 2434.93 1011.53 2434.93 1007.66 cv
2434.93 1003.79 2438.07 1000.65 2441.94 1000.65 cv
2447.27 1000.65 li
2451.13 1000.65 2454.27 1003.79 2454.27 1007.66 cv
2454.27 1011.53 2451.13 1014.66 2447.27 1014.66 cv
cp
2484.57 1014.66 mo
2479.24 1014.66 li
2475.37 1014.66 2472.24 1011.53 2472.24 1007.66 cv
2472.24 1003.79 2475.37 1000.65 2479.24 1000.65 cv
2484.57 1000.65 li
2488.44 1000.65 2491.58 1003.79 2491.58 1007.66 cv
2491.58 1011.53 2488.44 1014.66 2484.57 1014.66 cv
cp
f
2539.67 684.751 mo
2573.9 625.479 li
2608.12 684.751 li
2539.67 684.751 li
cp
f
1480.05 198.484 mo
1504.69 184.257 li
1480.05 170.03 li
1480.05 198.484 li
cp
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
846.103 170.03 mo
821.461 184.255 li
846.104 198.483 li
846.103 170.03 li
cp
f
863.854 189.388 mo
859.948 189.388 li
857.114 189.388 854.816 187.09 854.816 184.255 cv
854.816 181.42 857.114 179.123 859.948 179.123 cv
863.854 179.123 li
866.689 179.123 868.987 181.42 868.987 184.255 cv
868.987 187.09 866.689 189.388 863.854 189.388 cv
cp
891.191 189.388 mo
887.285 189.388 li
884.451 189.388 882.152 187.09 882.152 184.255 cv
882.152 181.42 884.451 179.123 887.285 179.123 cv
891.191 179.123 li
894.026 179.123 896.323 181.42 896.323 184.255 cv
896.323 187.09 894.026 189.388 891.191 189.388 cv
cp
918.527 189.388 mo
914.622 189.388 li
911.787 189.388 909.489 187.09 909.489 184.255 cv
909.489 181.42 911.787 179.123 914.622 179.123 cv
918.527 179.123 li
921.362 179.123 923.66 181.42 923.66 184.255 cv
923.66 187.09 921.362 189.388 918.527 189.388 cv
cp
945.864 189.388 mo
941.959 189.388 li
939.124 189.388 936.826 187.09 936.826 184.255 cv
936.826 181.42 939.124 179.123 941.959 179.123 cv
945.864 179.123 li
948.699 179.123 950.997 181.42 950.997 184.255 cv
950.997 187.09 948.699 189.388 945.864 189.388 cv
cp
973.201 189.388 mo
969.296 189.388 li
966.461 189.388 964.163 187.09 964.163 184.255 cv
964.163 181.42 966.461 179.123 969.296 179.123 cv
973.201 179.123 li
976.036 179.123 978.334 181.42 978.334 184.255 cv
978.334 187.09 976.036 189.388 973.201 189.388 cv
cp
1000.54 189.388 mo
996.633 189.388 li
993.798 189.388 991.5 187.09 991.5 184.255 cv
991.5 181.42 993.798 179.123 996.633 179.123 cv
1000.54 179.123 li
1003.37 179.123 1005.67 181.42 1005.67 184.255 cv
1005.67 187.09 1003.37 189.388 1000.54 189.388 cv
cp
1027.87 189.388 mo
1023.97 189.388 li
1021.13 189.388 1018.84 187.09 1018.84 184.255 cv
1018.84 181.42 1021.13 179.123 1023.97 179.123 cv
1027.87 179.123 li
1030.71 179.123 1033.01 181.42 1033.01 184.255 cv
1033.01 187.09 1030.71 189.388 1027.87 189.388 cv
cp
1055.21 189.388 mo
1051.31 189.388 li
1048.47 189.388 1046.17 187.09 1046.17 184.255 cv
1046.17 181.42 1048.47 179.123 1051.31 179.123 cv
1055.21 179.123 li
1058.05 179.123 1060.34 181.42 1060.34 184.255 cv
1060.34 187.09 1058.05 189.388 1055.21 189.388 cv
cp
1082.55 189.388 mo
1078.64 189.388 li
1075.81 189.388 1073.51 187.09 1073.51 184.255 cv
1073.51 181.42 1075.81 179.123 1078.64 179.123 cv
1082.55 179.123 li
1085.38 179.123 1087.68 181.42 1087.68 184.255 cv
1087.68 187.09 1085.38 189.388 1082.55 189.388 cv
cp
1109.89 189.388 mo
1105.98 189.388 li
1103.15 189.388 1100.85 187.09 1100.85 184.255 cv
1100.85 181.42 1103.15 179.123 1105.98 179.123 cv
1109.89 179.123 li
1112.72 179.123 1115.02 181.42 1115.02 184.255 cv
1115.02 187.09 1112.72 189.388 1109.89 189.388 cv
cp
1137.22 189.388 mo
1133.32 189.388 li
1130.48 189.388 1128.18 187.09 1128.18 184.255 cv
1128.18 181.42 1130.48 179.123 1133.32 179.123 cv
1137.22 179.123 li
1140.06 179.123 1142.35 181.42 1142.35 184.255 cv
1142.35 187.09 1140.06 189.388 1137.22 189.388 cv
cp
1164.56 189.388 mo
1160.65 189.388 li
1157.82 189.388 1155.52 187.09 1155.52 184.255 cv
1155.52 181.42 1157.82 179.123 1160.65 179.123 cv
1164.56 179.123 li
1167.39 179.123 1169.69 181.42 1169.69 184.255 cv
1169.69 187.09 1167.39 189.388 1164.56 189.388 cv
cp
1191.9 189.388 mo
1187.99 189.388 li
1185.16 189.388 1182.86 187.09 1182.86 184.255 cv
1182.86 181.42 1185.16 179.123 1187.99 179.123 cv
1191.9 179.123 li
1194.73 179.123 1197.03 181.42 1197.03 184.255 cv
1197.03 187.09 1194.73 189.388 1191.9 189.388 cv
cp
1219.23 189.388 mo
1215.33 189.388 li
1212.49 189.388 1210.19 187.09 1210.19 184.255 cv
1210.19 181.42 1212.49 179.123 1215.33 179.123 cv
1219.23 179.123 li
1222.07 179.123 1224.37 181.42 1224.37 184.255 cv
1224.37 187.09 1222.07 189.388 1219.23 189.388 cv
cp
1246.57 189.388 mo
1242.66 189.388 li
1239.83 189.388 1237.53 187.09 1237.53 184.255 cv
1237.53 181.42 1239.83 179.123 1242.66 179.123 cv
1246.57 179.123 li
1249.4 179.123 1251.7 181.42 1251.7 184.255 cv
1251.7 187.09 1249.4 189.388 1246.57 189.388 cv
cp
1273.91 189.388 mo
1270 189.388 li
1267.17 189.388 1264.87 187.09 1264.87 184.255 cv
1264.87 181.42 1267.17 179.123 1270 179.123 cv
1273.91 179.123 li
1276.74 179.123 1279.04 181.42 1279.04 184.255 cv
1279.04 187.09 1276.74 189.388 1273.91 189.388 cv
cp
1301.24 189.388 mo
1297.34 189.388 li
1294.5 189.388 1292.2 187.09 1292.2 184.255 cv
1292.2 181.42 1294.5 179.123 1297.34 179.123 cv
1301.24 179.123 li
1304.08 179.123 1306.38 181.42 1306.38 184.255 cv
1306.38 187.09 1304.08 189.388 1301.24 189.388 cv
cp
1328.58 189.388 mo
1324.67 189.388 li
1321.84 189.388 1319.54 187.09 1319.54 184.255 cv
1319.54 181.42 1321.84 179.123 1324.67 179.123 cv
1328.58 179.123 li
1331.41 179.123 1333.71 181.42 1333.71 184.255 cv
1333.71 187.09 1331.41 189.388 1328.58 189.388 cv
cp
1355.92 189.388 mo
1352.01 189.388 li
1349.18 189.388 1346.88 187.09 1346.88 184.255 cv
1346.88 181.42 1349.18 179.123 1352.01 179.123 cv
1355.92 179.123 li
1358.75 179.123 1361.05 181.42 1361.05 184.255 cv
1361.05 187.09 1358.75 189.388 1355.92 189.388 cv
cp
1383.25 189.388 mo
1379.35 189.388 li
1376.51 189.388 1374.21 187.09 1374.21 184.255 cv
1374.21 181.42 1376.51 179.123 1379.35 179.123 cv
1383.25 179.123 li
1386.09 179.123 1388.39 181.42 1388.39 184.255 cv
1388.39 187.09 1386.09 189.388 1383.25 189.388 cv
cp
1410.59 189.388 mo
1406.68 189.388 li
1403.85 189.388 1401.55 187.09 1401.55 184.255 cv
1401.55 181.42 1403.85 179.123 1406.68 179.123 cv
1410.59 179.123 li
1413.42 179.123 1415.72 181.42 1415.72 184.255 cv
1415.72 187.09 1413.42 189.388 1410.59 189.388 cv
cp
1437.93 189.388 mo
1434.02 189.388 li
1431.19 189.388 1428.89 187.09 1428.89 184.255 cv
1428.89 181.42 1431.19 179.123 1434.02 179.123 cv
1437.93 179.123 li
1440.76 179.123 1443.06 181.42 1443.06 184.255 cv
1443.06 187.09 1440.76 189.388 1437.93 189.388 cv
cp
1465.26 189.388 mo
1461.36 189.388 li
1458.52 189.388 1456.23 187.09 1456.23 184.255 cv
1456.23 181.42 1458.52 179.123 1461.36 179.123 cv
1465.26 179.123 li
1468.1 179.123 1470.4 181.42 1470.4 184.255 cv
1470.4 187.09 1468.1 189.388 1465.26 189.388 cv
cp
.367163 .00891127 .102876 3.0518e-5 cmyk
f
818.113 451.526 mo
815.956 451.526 814.208 449.778 814.208 447.621 cv
814.208 104.824 li
814.208 102.667 815.956 100.918 818.113 100.918 cv
820.27 100.918 822.019 102.667 822.019 104.824 cv
822.019 447.621 li
822.019 449.778 820.27 451.526 818.113 451.526 cv
cp
f
1508.23 267.591 mo
1506.08 267.591 1504.33 265.842 1504.33 263.686 cv
1504.33 104.824 li
1504.33 102.667 1506.08 100.918 1508.23 100.918 cv
1510.39 100.918 1512.14 102.667 1512.14 104.824 cv
1512.14 263.686 li
1512.14 265.842 1510.39 267.591 1508.23 267.591 cv
cp
f
2239.31 1199.91 mo
2232.25 1187.67 li
2225.18 1199.91 li
2239.31 1199.91 li
cp
.262699 .00137331 .0688182 3.0518e-5 cmyk
f
2225.18 1514.82 mo
2232.25 1527.06 li
2239.31 1514.82 li
2225.18 1514.82 li
cp
f
2232.25 1211.74 mo
2230.84 1211.74 2229.7 1210.6 2229.7 1209.19 cv
2229.7 1207.25 li
2229.7 1205.84 2230.84 1204.7 2232.25 1204.7 cv
2233.65 1204.7 2234.79 1205.84 2234.79 1207.25 cv
2234.79 1209.19 li
2234.79 1210.6 2233.65 1211.74 2232.25 1211.74 cv
cp
2232.25 1225.32 mo
2230.84 1225.32 2229.7 1224.18 2229.7 1222.77 cv
2229.7 1220.83 li
2229.7 1219.42 2230.84 1218.28 2232.25 1218.28 cv
2233.65 1218.28 2234.79 1219.42 2234.79 1220.83 cv
2234.79 1222.77 li
2234.79 1224.18 2233.65 1225.32 2232.25 1225.32 cv
cp
2232.25 1238.9 mo
2230.84 1238.9 2229.7 1237.76 2229.7 1236.35 cv
2229.7 1234.41 li
2229.7 1233 2230.84 1231.86 2232.25 1231.86 cv
2233.65 1231.86 2234.79 1233 2234.79 1234.41 cv
2234.79 1236.35 li
2234.79 1237.76 2233.65 1238.9 2232.25 1238.9 cv
cp
2232.25 1252.48 mo
2230.84 1252.48 2229.7 1251.34 2229.7 1249.93 cv
2229.7 1247.99 li
2229.7 1246.58 2230.84 1245.44 2232.25 1245.44 cv
2233.65 1245.44 2234.79 1246.58 2234.79 1247.99 cv
2234.79 1249.93 li
2234.79 1251.34 2233.65 1252.48 2232.25 1252.48 cv
cp
2232.25 1266.06 mo
2230.84 1266.06 2229.7 1264.92 2229.7 1263.51 cv
2229.7 1261.57 li
2229.7 1260.16 2230.84 1259.02 2232.25 1259.02 cv
2233.65 1259.02 2234.79 1260.16 2234.79 1261.57 cv
2234.79 1263.51 li
2234.79 1264.92 2233.65 1266.06 2232.25 1266.06 cv
cp
2232.25 1279.64 mo
2230.84 1279.64 2229.7 1278.5 2229.7 1277.09 cv
2229.7 1275.15 li
2229.7 1273.74 2230.84 1272.6 2232.25 1272.6 cv
2233.65 1272.6 2234.79 1273.74 2234.79 1275.15 cv
2234.79 1277.09 li
2234.79 1278.5 2233.65 1279.64 2232.25 1279.64 cv
cp
2232.25 1293.22 mo
2230.84 1293.22 2229.7 1292.08 2229.7 1290.67 cv
2229.7 1288.73 li
2229.7 1287.32 2230.84 1286.18 2232.25 1286.18 cv
2233.65 1286.18 2234.79 1287.32 2234.79 1288.73 cv
2234.79 1290.67 li
2234.79 1292.08 2233.65 1293.22 2232.25 1293.22 cv
cp
2232.25 1306.8 mo
2230.84 1306.8 2229.7 1305.66 2229.7 1304.25 cv
2229.7 1302.31 li
2229.7 1300.9 2230.84 1299.76 2232.25 1299.76 cv
2233.65 1299.76 2234.79 1300.9 2234.79 1302.31 cv
2234.79 1304.25 li
2234.79 1305.66 2233.65 1306.8 2232.25 1306.8 cv
cp
2232.25 1320.38 mo
2230.84 1320.38 2229.7 1319.24 2229.7 1317.83 cv
2229.7 1315.89 li
2229.7 1314.48 2230.84 1313.34 2232.25 1313.34 cv
2233.65 1313.34 2234.79 1314.48 2234.79 1315.89 cv
2234.79 1317.83 li
2234.79 1319.24 2233.65 1320.38 2232.25 1320.38 cv
cp
2232.25 1333.96 mo
2230.84 1333.96 2229.7 1332.82 2229.7 1331.41 cv
2229.7 1329.47 li
2229.7 1328.06 2230.84 1326.92 2232.25 1326.92 cv
2233.65 1326.92 2234.79 1328.06 2234.79 1329.47 cv
2234.79 1331.41 li
2234.79 1332.82 2233.65 1333.96 2232.25 1333.96 cv
cp
2232.25 1347.54 mo
2230.84 1347.54 2229.7 1346.4 2229.7 1344.99 cv
2229.7 1343.05 li
2229.7 1341.64 2230.84 1340.5 2232.25 1340.5 cv
2233.65 1340.5 2234.79 1341.64 2234.79 1343.05 cv
2234.79 1344.99 li
2234.79 1346.4 2233.65 1347.54 2232.25 1347.54 cv
cp
2232.25 1361.12 mo
2230.84 1361.12 2229.7 1359.98 2229.7 1358.57 cv
2229.7 1356.63 li
2229.7 1355.22 2230.84 1354.08 2232.25 1354.08 cv
2233.65 1354.08 2234.79 1355.22 2234.79 1356.63 cv
2234.79 1358.57 li
2234.79 1359.98 2233.65 1361.12 2232.25 1361.12 cv
cp
2232.25 1374.7 mo
2230.84 1374.7 2229.7 1373.55 2229.7 1372.15 cv
2229.7 1370.21 li
2229.7 1368.8 2230.84 1367.66 2232.25 1367.66 cv
2233.65 1367.66 2234.79 1368.8 2234.79 1370.21 cv
2234.79 1372.15 li
2234.79 1373.55 2233.65 1374.7 2232.25 1374.7 cv
cp
2232.25 1388.28 mo
2230.84 1388.28 2229.7 1387.13 2229.7 1385.73 cv
2229.7 1383.79 li
2229.7 1382.38 2230.84 1381.24 2232.25 1381.24 cv
2233.65 1381.24 2234.79 1382.38 2234.79 1383.79 cv
2234.79 1385.73 li
2234.79 1387.13 2233.65 1388.28 2232.25 1388.28 cv
cp
2232.25 1401.86 mo
2230.84 1401.86 2229.7 1400.71 2229.7 1399.31 cv
2229.7 1397.37 li
2229.7 1395.96 2230.84 1394.82 2232.25 1394.82 cv
2233.65 1394.82 2234.79 1395.96 2234.79 1397.37 cv
2234.79 1399.31 li
2234.79 1400.71 2233.65 1401.86 2232.25 1401.86 cv
cp
2232.25 1415.43 mo
2230.84 1415.43 2229.7 1414.29 2229.7 1412.88 cv
2229.7 1410.95 li
2229.7 1409.54 2230.84 1408.4 2232.25 1408.4 cv
2233.65 1408.4 2234.79 1409.54 2234.79 1410.95 cv
2234.79 1412.88 li
2234.79 1414.29 2233.65 1415.43 2232.25 1415.43 cv
cp
2232.25 1429.01 mo
2230.84 1429.01 2229.7 1427.87 2229.7 1426.46 cv
2229.7 1424.52 li
2229.7 1423.12 2230.84 1421.97 2232.25 1421.97 cv
2233.65 1421.97 2234.79 1423.12 2234.79 1424.52 cv
2234.79 1426.46 li
2234.79 1427.87 2233.65 1429.01 2232.25 1429.01 cv
cp
2232.25 1442.59 mo
2230.84 1442.59 2229.7 1441.45 2229.7 1440.04 cv
2229.7 1438.1 li
2229.7 1436.7 2230.84 1435.55 2232.25 1435.55 cv
2233.65 1435.55 2234.79 1436.7 2234.79 1438.1 cv
2234.79 1440.04 li
2234.79 1441.45 2233.65 1442.59 2232.25 1442.59 cv
cp
2232.25 1456.17 mo
2230.84 1456.17 2229.7 1455.03 2229.7 1453.62 cv
2229.7 1451.68 li
2229.7 1450.28 2230.84 1449.13 2232.25 1449.13 cv
2233.65 1449.13 2234.79 1450.28 2234.79 1451.68 cv
2234.79 1453.62 li
2234.79 1455.03 2233.65 1456.17 2232.25 1456.17 cv
cp
2232.25 1469.75 mo
2230.84 1469.75 2229.7 1468.61 2229.7 1467.2 cv
2229.7 1465.26 li
2229.7 1463.85 2230.84 1462.71 2232.25 1462.71 cv
2233.65 1462.71 2234.79 1463.85 2234.79 1465.26 cv
2234.79 1467.2 li
2234.79 1468.61 2233.65 1469.75 2232.25 1469.75 cv
cp
2232.25 1483.33 mo
2230.84 1483.33 2229.7 1482.19 2229.7 1480.78 cv
2229.7 1478.84 li
2229.7 1477.43 2230.84 1476.29 2232.25 1476.29 cv
2233.65 1476.29 2234.79 1477.43 2234.79 1478.84 cv
2234.79 1480.78 li
2234.79 1482.19 2233.65 1483.33 2232.25 1483.33 cv
cp
2232.25 1496.91 mo
2230.84 1496.91 2229.7 1495.77 2229.7 1494.36 cv
2229.7 1492.42 li
2229.7 1491.01 2230.84 1489.87 2232.25 1489.87 cv
2233.65 1489.87 2234.79 1491.01 2234.79 1492.42 cv
2234.79 1494.36 li
2234.79 1495.77 2233.65 1496.91 2232.25 1496.91 cv
cp
2232.25 1510.49 mo
2230.84 1510.49 2229.7 1509.35 2229.7 1507.94 cv
2229.7 1506 li
2229.7 1504.59 2230.84 1503.45 2232.25 1503.45 cv
2233.65 1503.45 2234.79 1504.59 2234.79 1506 cv
2234.79 1507.94 li
2234.79 1509.35 2233.65 1510.49 2232.25 1510.49 cv
cp
.367163 .00891127 .102876 3.0518e-5 cmyk
f
2363.07 1530.66 mo
2192.79 1530.66 li
2191.72 1530.66 2190.85 1529.79 2190.85 1528.72 cv
2190.85 1527.65 2191.72 1526.78 2192.79 1526.78 cv
2363.07 1526.78 li
2364.14 1526.78 2365.01 1527.65 2365.01 1528.72 cv
2365.01 1529.79 2364.14 1530.66 2363.07 1530.66 cv
cp
f
2271.7 1187.85 mo
2192.79 1187.85 li
2191.72 1187.85 2190.85 1186.98 2190.85 1185.91 cv
2190.85 1184.83 2191.72 1183.97 2192.79 1183.97 cv
2271.7 1183.97 li
2272.77 1183.97 2273.64 1184.83 2273.64 1185.91 cv
2273.64 1186.98 2272.77 1187.85 2271.7 1187.85 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 14.0.0
%%For: (min) ()
%%Title: (network_simple_cooperation5.eps)
%%CreationDate: 7/3/2012 6:13 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9'/qsa42lgd-U"U0UCaYHFiPcb:D+Q0tABN(k::$n[qhi%MIJ+!3*ajr>>,DVR`X&p^Th"s!nA76YEpR7@No/u49[AKnF
%MT/Xrd;8TOhS$8"n=k*eFXH`0puPi"CN^6CIbF%/np]D5GLi#VDmu_4]B=.P<Bb[#])PFFe_TdBN61LTVkmSQ/,ARegJrJfV+1EJ
%#/BE<.$t"L;nI1`dt"<*YM047?uB.,^]38(Hqe;"fM".S"28HGA(hp;BT+quHr3m<2jM@W9i]m'A;75I2OWYXiCm&+ZDfUCg"9)E
%*!<r0c/Q0#,?7`V30\,6fYPBBj5FC`dL9;HLCZ#`FCn\S@r3'`W>^c(U4kJeckqZqB&FMc4/t`BR"hRQbY6VsY_-Fol>WiM/]Mp:
%`c`3:KiQC+G]I5Vj20$YKs_2"SM==`K2)-!?YnP;qOk8.@h%p^_7CNpei5qZ:fjMu1^gd06,70<Xj^ZQK8jQKC,<o'Y.@4)S#W,I
%Cog"bJmWJu*KC<qR>M8*>B>V<.Q;3+\M2BsBWVrMc#>?q%*f,EgZ0UpbgJ<u\[$p!R8"'iH8J[3//(VA(gJq;Li/Ra9`foXfc#kS
%P&,%T37Q?mO`K_A?P_O)e@JsG^bSn!YB%hF[SC1/:"+&uQ#T/or,h"jf/h`rgTC:r0/P;n_hIe(HS&<(!.A!K(jm+XU/LK\DQhn3
%C8F>3i+mO.&PF4QYba^^J@%-M!0JAn)tLN-Zbl3Me8=[oIb,9>0uQ,.LBUpM'-4T_JG*[G@0=Ec#>eJ;#tQlc-XNQJGInpL,A*mI
%6a4:"s!N:*#(WZbSO#CoT\g6$YV[K#"7!t;@q?('NOIr!g,k<7(KiZbB?g=]VS)ERMV"-u/DKS6fDZ#0MG,037=!jj=81EeR^FaZ
%P#Ihp=L7Ht]K/:i9i.k%AC"_0dneZW`,2,n>qj*D]n`+\;s\Ig=1uVFqqFJ:X3!d?>$gg=InQH;fX_7]J]'=m(10=9i=@Wh!2NU+
%F'p;s`XFP[@!c?V%MlkuEP>g,b<cCSJh]H&f?S0V26_GKrr@?1FLthZ7#'D^T$e-9.q?X!3Pdod4j]qXopPo0R!+qUO-tAQZ[[pl
%(Rp]&ha"VlnCJXn65/->h*76-UL34'9[RWIFK"0jPn*t39q;"HSQFg>I<o#a_8YfMheVU9X8^p:MqNu;js_Zp[gYEbK<t#Q))Po%
%2FQG_H_A"h\(4`O0GS!Jp(VK]L=<?qIhhuZ1EKL4*+h$YBIu,lH?Ht;RlG5(Rhb%UgMWjUr35TIh6oWd_R]DU5N.J-`/8/fg/:Z2
%Ft^Z"Hd,/1S5oL@2kt%[1Ze/q`gL2;FW04lnWrZk9'Eim]6Va;@((EQ$g#>$lf$'nK=hmq^>0N6VIkspo<8DViq-!;GO+qUH/!1A
%eB5\k+*'MLBZ/P&;H,!C%pLc6.9p\.`,r)5KW`mpi0b9771nYZ7LN^MjnQ]0@5IU.`Hk#FR\sORj-F[rjmF.FA"%D\\_VEZ2))[Y
%b2Sn&dqs=Ej]j\m)"%fJ--)XYgqE=Dm[]?LG?");r%LU_&GMSB="VsWpb*#IS=3LeC/HQ;'r#+GJis4QEerBk*ckGLj]J)h=:q9@
%Ll``)ddQ&?%*d9Q%AH/`A@7qnf*Y\Y.mYT/F:B32GW-Xp2r3%*4fdc<4F@K^;(ife_$nT8%0HYlDHMX13(EW0*@#4XNIk"a8cTng
%2%tR@pm<B2RZLQ\c((1\$YId;EKr<cKQV0OPB.60!dAl)4uo4t"^^799=;R+=dl0kL1OO.Z2tt/Ng7"m<o,<.7B9rd3,E@g!,07O
%2C':ScT67#cG:lH([Rl%Ee$Cb!u,k_@a;T0*7KJC`N^H]PBCn@hC1EQVrX)J5c1WKe[%`r"AiL"XIXL>fk_-^H2&)Z7JN*f5jTK6
%BfR;-%cXc6TToVpEu$BtK.14/rlN'U!2!`'PUkjH6$Zj)?DA#D'8Vo4klXK>/c#J"GOOSnW&uYg;rkoi!domp.HO3HmlZNO`#nk4
%0I)e]JoAJ$7WK@GVT$8`;&d`XKrl98XtG2BiD5*e3V[<C5<8ZMITl@S_C53:-HQdI3qP*#R?^!6-aH#0*9dZB#O7*>$$lXpqT/_,
%dMW=16#RTRN^ikt)MC.^_G:_Dcm&oTaasJun.Pp)rm/L.!pUMJ$EV0<KHrsN3/+5^Sf./T8^fZ_RP"1a#9&p46-+W&'snV;>nP20
%bNe)J$2V^,""J9a%d9R<!XG/BoFO55cp^F8W/Zmq3/@-f"+oY9eHN>_H<^"JBFHV-86;U':/WtddPW,A.XXKL8n<WTUojQiKf%<s
%BM9LbnUHH\87e8AQ:"\GHuej.0N'!e2prUY?5!8?]i@XNZ'6SbiZC>EK.a]cr8<__id\c`Ma#3*TJu?G^LbMF$Mu7HQ.)N9"4%<b
%1%A0LG_k6Ja@jIpJ>]&E#RGF:5U%7:DD/P;co4mDh$gi4!r%!8$%B4W9\A?/psUQomDs5>^LekU1J[\'/G]K);(@igV#iW?>U^'+
%cRr?H?8>.XQkU"Z8hH?d`F8if:(Eec;m_H`OVc9:;:InU)5qq^:b3<r.HLoiJl;YP.p)s]0FJ(%-4NpR"]&,$T9TWlQ3DbMK6QA6
%lO5IS)CVlu?Ejdm0b9j2$U3#Ds2i*@)IVV_:jBc%>69:Y!&p8I0C43J[_OPci1G-GSd`h?#s<D4S7N0m\H>%O!oImIT@^ot12mLF
%L]@e?;KEB_3&\PX&H[_Y_#WTD^sK#\$0$aB38PXbHO&O<$R-#n+q>Ve!<Y,[JlnfKmPtNWM$$V4"jr26;2Yp]"-WDjGK^]<1BhaW
%3J_Sn#X^/!G"d^<F>3P"$u?70T`Vb#S<8LRabFJc6Vq<D_J<N^<NtFNYiL)8lji;3l*s=Y!:>J4QDHjT-VIL^,-,::?"7RDaSY&?
%,<=h_3*B:Qr#*XFM/7:*XLCQ_SWiHmaYTkMR6[`:\Nn9XPB<IFA4]6e8l/86Oqj2sP9^?D#,Od6a^O76BpuYXMFE]&!_F$I&kZ)g
%,RS,*-FlIb6J4+c^/2[g@8tXm$b(]fi?TOWi_Q-k%qRCencodu+,cp+jj58U1k_Vl6VWSn>SWr5,j?jFZrNdoMS_6.\K$c5Rj?RZ
%fSianAruBE,ek6X,BA9)U)]jrd9[k<_L,,Vac^0r,i'm+(<)-#,"@21>pj@<KSr3a9#MK5.Zj"LoReLO8-_s!*7=tZi_p2P5pK2R
%%+5O5$r&cXPr&VdUe#f`RZ]%8JJi/Gn]*!$Yt04<Io(cV!LX5S+taa)kn*EJP`\4'KUdRg^l4D_#^ISMM57"NN(K"j)^.4mlj2h^
%jThU*$Df.'7tE51V(!ij;Q@g$"]>LGOKr,`F<r5,aB2?c!_F'2-DW5X30:FD.!8GYUtc-:Q]i#r'9bXbAd+;*#'("IM903LO&@0u
%9ZEol,a1ESA1",d/.Y<c;G)Y58m*I.0U.:?>as/>/5;R8qh,_90qO+/\IM`4adYn)fedO\bV^1)<T\6oH=7"39&ZTGF<6)]=,<%4
%+;msPg8&L`9otX;=K3uh%rQUUY,XbXX"*Rfh7_:T00pWXrGVUN(VY<Q[U4oclmn^BW(I4_]K`uSB*GA!;n23KV1HC4h9LQBYXR#I
%?^#29_"Mis/d;f"&d+U+#m#*tS:DGAV[Y,.CUusRA&sm//\\(@=INs^-'!Z.BMZjW<C;'#i]K^j&#@KUZY3jfeAN.D>oo/7G>-JZ
%N@($K[YQbPEb_;)h]n7=VXj%*TOg+`3Ns-8i#1(N,mD)\$&kVP^&E1:_[T^FO=)s4W:jnrZbEDTQ8'L&PJiN:"RZ.d=a%ddRLF^'
%W]`8dRH25<r@IJ)Je,i2T14Zk7fbZ.7`/pIJA)'QJ@e;>hu+/7=YV)@a=rFQ:ctE^W+R7A)Q:#O`7h'7)]8`E*@.>Ld2gu'm>dTS
%*'r;'qiLUUDTA($*,L9g^hh]Z:F^8B/ts']"MpH_f\Sjihdc>@q$4]/X?0$T7hB>Z5qO=6,rcSVgq\jB+2mp?%uGpV^h>FMrSjIP
%)\'%@rSjKN*,M9bog>qK2E1cm*,$Fas.<t4K)CU9@7](rI^\I/SP^9RqT1`1cr#TflR(7G"J.j"QItOY<JaR/Xt$2\0FYs0Z\Ja1
%OR8%T<&foM[=@7tqFso*)oULu%(#WB1tcK\e@<uRRN_;#6.QHqVB<sV!?G_n;Eu=4HT$H`'9k@j:Cp96(7l'k`lN6diVki]LFh-i
%HkOM&HNM9^_"YC^^@)b$6F`El+4H"1MIH-IQ;#E/d`%P(LbEnT0UrQ!&7ieu`8ET/6L,:-)iY`c*Y1#+#un.%"2_-S67cN#&XZ6"
%prW22qd*VkE'iYiBO8Q$7^^;!Bh#K*,Bb4S?N_AdF9apA5;kE7)RgDpj].Mb5SK-cY+)]9Ee&q]RF0VH697#A]THSM%oUKUR&qX2
%%EOic+_WE^DFjgJmi5t23:-\d@#!r(aLjBt9jM&e+fJ8KEAa-pa,Fb/b'^FXST,(g(mO_b<KbcOWE)os_g+_Zs!uM=6'mi0G^Cj)
%?kP%imh9(Z")58'..)2td$Zeb)?J7m-&NW$dN5;_.$ii!8HG,2oLXB8E4g7^+lTd1FLWZ3\,X1L&$I,>\t3>"bXNtKCb5b7bt;Zc
%?rKtMs+l?m)4Tq-;tf[;G`nK'(0eE`fJ@EOT\VM"C!SUuG"7NoRg^3D0l5?*!%]q3LmmSlU>97.NLX$..E7+<L8i[Y0JM=KNL8sp
%K36`I<*cruJ=("lC_7Z'Zoi#BS,`Up$fp)NO8rs_BNJ3_OIZIZ1peUGUjZ2R1:D/5RVd6V[5&e-FPFQq2/HK%@3D,@jmXR-osibr
%F*3DO>ddo*23.SeSOZs`QEfa:rWnToEa8[.6H7HG>9L'W]l6,3WWM25bViph[03MVY1c!K/0dcV&:k^-,8[VX#qDmY3+I[>iIDTc
%'ei[TNM^UaOKlYr5bhcB0uhpJd*A$s1=gF*Zk<RPXi1DO5S5fl>1J`8CO4'(/O3Ds9P#UeY(s9n"GPV1(2Gd5\4>*-:7S_(d&n<k
%W1LG61mf1>E\8@cr3PCaeK(%ZK38L`)]3p[1G'`NC'BT_@Dl;a8/#mo((47a`'FD4`*00U!"=mjnMk<p/HIas8`H3!8CU<pZl;Rt
%>RPVjFWH/5hdET1<g8=r``u6L@a2:IOL_6),dS7?=0mR,B6_`kN4G\5[%/>XjdIJ?)@,%aaBCrWXVb--BL82'"Uqd)+QnuI'3Bh=
%Jo#1\X-uEa4A3Um/&99X6chq5i-MmOTM8J_]"&0Q&MnRo[4%Q%;AY6a-ct=k))Gum,Q/Yp/Sp)kU<u@4#m7.lAIW%@jocQRXuaEH
%kubNY0W;E')]^/hGaPoggC7-g!Ch=B-6#;hn-H`?^gLn3ZOs,e!";_]ll;B%*K^b>`'-6[ETZ6nEa8YX+oaKg.j`cjJ4Qq)F1%[s
%ZCR)f>l$XAaTCU^.%*F6(Ig*s>UGYaN<QDK3b*m6$aJ9IrAY2XQ<:0km<TVI4-gOR)F/hSAX8"bZLg+lFm506<=NOG?naBsWeINK
%;W1e]Ws*KqKol<bXL3Z.'T9h<+=DB/UEjUmYZ?sIL962i>a8<#MO>^?)R`=T%,H`,CBh>?*Yo1"nH=i+@E"UL3D?mASnu2I@4#Ac
%i?q3`D-OB0'oqgM"mM<gk(-bF*&pbVPcl>MY(sL&\dfAAg3JU'Od\,5(+^Nrf#/7f7``AUiD^sQG/WNn.CLpAUFhWh(h;i>H492,
%Y]:`PVR0oIdo9nRU"P`*DH4rE@C'CH;"5\]<_Y%-L+/sOj.16h(W"<"1Ji*<?uR),c/=+/b)d\=jlNk(,7V&WnR1'73rF9cEkFD1
%`lP%4@(pgHE^s$^J[@D^>V0UocP\Js#b6%&KoNMn@q<aiP8@\G&.WKQ'm)?n+<9O@TngiLUcmYk2WN$3K$KYqnBlD!fbhSVb[k&!
%l'eTjRB$Pm)`!7;k&MmlN[`u[5rr6YF,ds[fa.D]1Dcbo?'hi+afH9.>>3M18nr?KT?nbBE27Cu/%1Th_f0%)b@,Zc%g^?X&Z4Qp
%9FXlJ`su\]UFI3W`^6_B5^"6jP,V"d%`p)218bFeJ4@]f@#0XE[+d\CfMN[Bfi/+s!B%n')Z/afkEu]N8DJK8m,=D#40FH"oZj$7
%7u!B\/fqd`0%K5m]]F8nr/Lc\^>Igpj]=S@T#>3aV0-A>Y=?23(KUUPG3uB_of@a@OJM:;pF0J!lBSe*nCEiSSRsglLd/JcnZF4K
%\B%Wl+\&tdVk7k?-[T-D[I]=ELjiIVUi$/ucuF?2dJ6eCF>$O",Q$:2120S\.g6i@9fEEo;kWXWk"tR3p>sr%4=4Q;-$?+)fi-gp
%k^?B3Ap7"Vp""hDasNlbX/*N<4"[@_GhQtC\(<h0e\,SJRnO2EC*GOPa_q<UVLRC'Fj$OR?4<A7ou"g6UljG#n!cX=RuC@Rf/P1&
%h4L[.MKcchZO+1cA@0Y;N`TtB5C+HPBoH_4s-l=beS?p\D6MEhV[5A8N[]t4.%&[IQmZ*cmpqU/Lqu3Fni+E"]RPACP((Si]3W1B
%JgjRKS!('e^Xk)bgYrME.=Bhtr"D8r3UL!KCQ:0*8Na@!f,&bO6AHVnO@!6U#muR&-3LJUn>aY-4I)C&FQTRX1ncU!jeaJl1ZkZA
%[I$:3?[q1h3qHm"#*QM2,!1G!>`+um4I;Q#Eq<ORT$,B"\Tof_acCGREk,05bXa@qU>:E;/fbR'T$K^"POj6Lp#?Fhir>Hc?)<FN
%45ENFqcT*f,>t<@na8=T!DlsH$iL$-]f4)4c#D1FmIiT3RbQ&G`brBJjqPs:8Rp=%2e^gli/ksY=)QBdVc/YUf5eW0m<IGAg+^FU
%IR(EfUm@q2=RYn9<O_<8QectVH=4&U9o3'p6[V"m=Jg<=r43`9O!UNOhs#(orT5Hc+/.(rH0'\8.)#G3p>BO<]+cFn8GDCe47>*i
%?+64+X2,r<L7anU_;\fR^Zf#1_.^oK-6+P5WhpodZtI;KOSbHlLEWWmKuX-jT^fc9O"h.C>-ki-Y/7SoI:+$f<S`l<FXDa4>IPo?
%g659[9Q7u!``;^8VOKBJQLe?uQXe`#JD75L0,e.Ubm)lq=b7>"k[b[/\\(5!8`@!/8)]lOJPA'FoJAPke'3YF't+5T`_H>ogTt%3
%"]%AU^9M#1deb-LcLDtgJ(f;9<@Y[`dC5TUke>Y4pQ1Oo)==5$[+i]`CP?5Hb%H1GB.,h-2P'Cn;rBFuA^+3F2<@9Os3+1VH/Ggg
%g7J&R'\df?r>\b4<d3#/?d;]K,*V"mFaQ2L09+Tg*H*j^]IcXZdbo'JSXWY"AhC.?pY2eX^[@_lE)KW%L<Rope=3_t@(aqC9JZ"T
%lPA>H2WMemj]7lt]aa9*LMq!r=sR]S_.WNWm/4luft&n%`Mqr:]J2T=+??2U`i$,q;t"s/n7VS<:RZ*2`Z3<`5G2E60p&o%:4)HK
%c/*R4hbj"05?r2o6EI'A>,=JnAo8)=9!O#7^MoZ:YC>ig]lL[kf\hj\_CqBfF7&8f%1]pWDc<TW>'7=@28!OFhegW6bA"I??&Gc%
%RE0JL-28kj?WlCSA;'2_RZ&ER36db/qH`J1IO<t%+u*jFFWPIih&g8TVVAh]\IW`s+8h6n@A[As;cI\4?gCW5EEua4D;&#bGtb,>
%X4Pgk5cW]]A*^P"kGC5L%%29ahbS:n2:hGtO@isJ@]5!=^EOpMin)f^VN>WjbnNM.iiB;0@h'\.0T1(f.C@eMV&Lj;X&Niig<W`C
%KjAU(.s"[O*T'UdoAh1El_`$JlbD64.8U$Qhf[[&I=^U-A"6,Q(A_a.6N?1e8.kl%gO:B,1SSbGQJ/2IXYY@B?CIu=dI0O\$b'8S
%Up@YVf*/uBGVIm04[4cY'o>W[2Om0,K>ajV0BOWZVPub+X&#IcGp:fJ*_!WY0AK33[AVmSgkN-`Bon]>f/)H";,W(51NF8m^SBr?
%Ihnl.)pY1R6"59YAUYD+IMV$[XLd5#;:pBV/4qD`54u)P2Om3-K>ai[eFU!p"-N7US4-#G0N51J\)Al1)C/ohli6#ubq,Hc8L9a*
%d&rl!j_R.D0@b'M3@AG-i=rW9Lhh_(-6]m!cS*N1S/1;p2lD/8gbk#hlW-48-VXb`<hAr)N=X%C;8[^fVp*BPg/[JXTA-bXC"H8P
%F`,gnG4#"V[:1(Yk2G$b71T]EbH0D[>+8a(s0,Lm#A^fsWm,%]\Q/N&>.+-cd-2Y/XIhrAQ@]8>FC0<j2?;oTFEKIHk%^-4"EQGh
%X&22qr\H4d3NW2@eIV!6n'g$1X.uXDAr:YrK(qj8NaBa%cD^\WHOYJc1F$N!i@UT95/(S`1,JUmQ:^X,Ir`^dbiV]=\L+C[RYOeb
%+5Lsa*Z&iQ;Pp[@9i[Pe5?.mdXi#AXIiU-i\*2\*>-m3gCX(81MG?]ObB(:L<2p]!H_VJ"<M&t@D5#@lO;ct`g%DedX7.[rMoMYX
%3D#"GJ,'r]%GBoK[XXN>?)ConYIo!7rAVjqNL&IQ5iA:o9#5/m&EEr[B$q$rm997YiH<V*g.YY%'P4u$1n&K2K8PkeUj"g+cNF_o
%](n&F4Au:dICf5.C==qhK/"lGGXf>Vl:?E%I,ll,DW)[YP-_Y1ECJa0b[I1?SUU2/hq?oe]a`:,SF?If+j-q@s1O[Nn!NSD9'#.3
%^[qE]q>Ti4A,hmC2=:H[l?Z(;4l>k%n+k9'I/ckdBZfXEo0(tCrb!.L=>R_TS)T!+SR/o8U"s_BB;$]a:Udi.^%,6>eS6b^gJOhS
%s&3D_1X?g9mFCP%YK7(#CZcL>kcdt)Vn8fkXFJ$FANsmsQ.@c;H;?7r;HEC<'9\kt)He$sOjYmWRld!=aJQX;QHGZ?b@L3"ftV6!
%kARl$Qc]6'G\d8jm<Qs!M!r%M>-h*gpXaoGr4:KcDgRal^[3pLDZ7rIBCkuQ+#SCgMFt#J^KRDa*VDb?KH1SLhNY,3'^0dapap&7
%0\5uQb;=nkL#mXu45K,RP_-sip1+^nRpnUc),57uW71=[&E^F)m;2_1D8iB63f3YI')03c2]"l[8$Mbi$hC&C+W([!\_LgsNUdSr
%bN=MFH/W=@GaT@Sk(T.IiFQ>?q'.a&/@1/LMlaclrFK;[R292lKpP"<>24]mrcnMn<13%RjB/:#1L3;XFUsqN;TWM8$V7bo:>0J:
%Lu"k<RQkUt.P3uU#6[`t_^<eoW+"C%2N`_)o7p'<><_.P?@O]ca'!&j5LsW+6anso2du+okK\)H,c8=dPc*=tcC`$3*R6CQ!M4VP
%Gf<@$ApiY:#u%ho#u"FYlhp!?o;=7tPaMG_T"];oiE#k`J,7\WZY5b)4FLsn=8n3"3V2"YV_VgYnY4+I-l\U7%J/2rM,kN7;S6k3
%3_d)09YHbheS<.jU,KBl8kRPiCH?r13;s_8JA9"XgR/ID)eX'SbHg:Kg9&QFR'&&8QI$!mh8u@pj%Xe]Au%`U=07YNA=`(2;ol$o
%1BfOJikZQB#LaiY-6Tt;GjrIKa8!Q5OIjGTMU1T*1Q^S>lPNP<!8FuUNfaO$Go^C01Yl3_q0<uj?H8EkcHPSko/amMe1pqa)-YWd
%Fe\H8k@`>R>OK)q=+2aG0kN.X,!Eg-Ds5jXa5'q.4K:0%a?6`b8ZeTL?K=NCRmJaP")s^B`W7ddB.C"BSSnia23[%!2eR$K/%*&4
%4g/!`P;)Y%^F@s\J,!j5boh!F?A=aMM<dcXVTnJR+#GeqTppPY:`=C6J'QCpbi[4h\gFN@Nu8l'$uYhp6^\X,EU*C76?dq%_n^$A
%DkunoeEs+eR6NUng<2,*8[!QnX+PVdc(a-uHhp=6*+@P7SSNW:a\A(9YBH,]]MLXl:mcR@%Xb*>B1<AYV*S\8O*d]h@=HjE3joZq
%5id%:D=[_#%>F5GY\_%EYWP)'#q8X4bi!AjH@*+7:q^c(WL\;e2dNt!3[pP2F#TjGo5&<9c-<T*Gr@V-k,pY49+aVLp2"Vq4D_Is
%\J.i!R)+/&"]k5:DP#.ue%'`b2c&W!l.dI=Dc\ud$Cr&+k>p4e8EeJF0i.&2,GfbMqj$c]S&VSfp3\J],X'&+A%4ZTQ:Q;Aq6]%"
%0n6@E<$jTrk@;f0/+LZP4E(\PebfFc;f/tCFU7'HMq?S+l>HE<>nKe[b:V>W^Xl@`$9R)$oe]Z`g$beK1$/;oVd?9!i\>4`<'nEj
%8M.Mre]kIi1)k-'WXnTeqKM+EkZN`;>@PnW$R*B'^Fq7ZY'm5"Y.A35\Ep)N";9PRahg8/,Q0,KVqi&_`oQUPs,CFYlQXk"X*+6h
%q3>rk2i^u>J=FD/p$:A\>)#H6.E4u;C>NlP]'dWu$ms+@r?G5:UhTE)9MaUXh#GnC]i:J6@F(EP2Q>,AGT%)gnK9?c%_njqLPYW:
%iUEgC,F-qT\%B;#SUce3mn)h,O65TPg`K>[Y4A==R>HPoGgl``/%F*F+ZG-_$JQLb>PtP`2n^^b(_-9O"L@WlBM*lNGt^&UM'`=F
%/8`m1#=Z,)KR^u8`D:bUFH,IJVk6'B@e[XZ)Rj#<?8T;oO#!=VMibdh?D^Sib8\s#'PYMIW'1M-fQ?^ne5L8u39\hN_l/24#onnn
%p*mK6J8>!uT]u33oih+:Xc6#:kK\)8*<1H-1@<@ANDZ9jkEpu7F6>MW#'fG3iY=9.\Sn!dh`-N/jS?t'V`!\K*a:Tcr4#cUAl9i8
%cg[@)BDC9)=1mAOB<pBsGJR(&Gg?f=Cbu&uU4s')V0G\O9\=<]W:Db2>M(\K>Paf.%L*qd6*mHF9PhW1cBoi#1MeB$?D[U?\i/AV
%ic[QIj0na9gO0UcbWd=^jYf4H@jORj4nVUm\@sHANM(@^+1QrFL*&0jld"'e+],e9\haGX,e0+i8=ePYVZG-;+TdtlV6i#r:1$`\
%VVX5Ld7J>1jK*(CbQlY,aUb)H]rubL;QYA"ooEhIE7[6G_qg`Z:23CY>o5p'D;+PjUA#+$P>\Se5+5&!Egq_5@k"EugVmuU/nR$o
%B'f41ZeUN]%\XRADg=N\]?O).c'oEE;!)\%l/QMeg=/W`=2"oM-41grX.,*EkG=5Jgn>s2fm8(<iVZu,SKG,LSg0QQ"Mkg[K!^Wq
%@HqR3=UAGi6u=8/S\FZaLG0*!/S%;YkIgCi1OeHRSQ@DSArCG[ocF#nTGOp75hV$EjsdiaYB-E(]1r%TCF]YW$G\XcU*?c&h0QbX
%/f]W4HK+hp<CKhih2H@SaKH*<\tlFc*:X'lfE"@NME+:O[l\S[:'6OG75W-#@ZDTVXAL2Hqat+\3B/;=mN+1qh<m^@m[W$JHL7@9
%>Xn$RE&<@B#1`?qad.=V?*8Mp=>D+h$A+@Mkr":;#fKRIi^hPe8-]!mWo>-!-BD>iL\bpU&BU>B?c*CU/0eDh?/+(Z5Opj_!n:_P
%CKXn=*lVKfD(:.a%fO*?Pp;IPb)BA,iMN=WR^6d5h!1fJ"eR<or(jB70L\M$KW5DF=-Y^=[.+mak7A)(n3NFC'p@,*hnP0S=e[&t
%Lj[%3'cMpo@Mn?5L".+u_B.EGXV->D>^Be+TujesU,h3O0_lPmg!G;#l"/?DeYM(VC0Jh>rMH;D'9Ddu!dI.1"X2o%0C6&<Yr]sC
%oNK/Or.S?j.\]R-"pZC\ZHr+2@E2Z_I!PBnBi`EfSQ\%Y<851[`XgM]Qhj!PG$aSER"6T5pW+l^&3NqUWotj&'0DNWrqG51Wj3#i
%^-gX.@-PDrl&2Q@m_Z@V]E\C;E-_qS'F;5b@oJ*/'<I2PPHoMu[_"oSb141;AHF=#UHgU\1!ig+&;**6@5Qp&Z,lge9!?edKgBbK
%*tek?oKOK=FNoA6;&8&2]])_jGu0XL6c4c\LdZn0h0+(R2(6;.ia6$&LTlSm_-:=Em-H*5G9Oa$'">3f[772<fi_<8J0,XDroa@Q
%kV(rehSgWd8K#]N28%3dLYFk<;)JeZc8[<67Ndgr*&'uK+V77DK@W9gV4/eFfTBqMG8,*LP<IEh>PGp/$ctUq9+UdVV^!&9l*fhU
%aHn44kkkB'<Ke6ehDm,oQ%Fq_k^f,;d$0c:8PHseK`el'=XK/N%'CMq0r#\biBU))d<*jCE=1O122j:HN2r7=IDhJkUJ8d+[PnYm
%j>J#Q@X&3;oNesVL(_+3^*L-F;b[YYcqMKe3I]?m,G8&%5_X-RXm-CJDlLt>%"VCZ,\G[/'=423[)ji73ejIK1oUs,>`\-nZE-%<
%VO/?(E?H7;9=Cf\2Qk%V)eRW"%;+.XPut6i>-O`ug<;9b!SsRO@5cYlY@q(oY_ZehBbPt9*WOKL%S`uKfeqS\0%kGC/=AR5JrQDX
%"bmeN5m.Jh5c*Uo$>E/lbrdP#;bug$LZWV2qiDsE7U4sr$]"f3/JLpEgGZAO-o&XHBkMM36Adk!"i1C_#-]8i7'MXr8q#<C21[3R
%=@%-N"2?P7ic]onL5"]He'l;`7rXLL_6JhY]T7-UCZ1^#'9'46@tY9K%9c(\1e\XhJj(N*,5m'.TF$.0oBM-iK)u'OQ<Z1j.9'Tj
%i/DW\@91fP9@KtqYiqd*JkugD**aFa"@35[Cm#$':TW2m.9KG[%$ZY32c[^c[<9AYd$<W5i[(gl[)WLGO'*t&9-o%d8L429"`"1Z
%9LT\/[cW[SWuMtCO<:0:+`>@n*=.QrJo[!Jl,521Z"3mB&5@$s0$psGL'o\8ZRqb6PC\CUd8H\)+t=q[H'sN\C45*jG>5/aR#=((
%k\mVi,jg.M8N?'&G:1!"c('`lio9Ls`gL2SWW$8;?J=!lC'=oc_(YO$?mc;!(L5D*l"\RqnHAi[W;].OChmG"jjAd*kT#oBs/g#7
%cmke?iX;YoG;L(1(EYLrVa'!\B78c_#'@im'9<BOcubGcc9/(pIWP(W&+lq"j\'OO_kma'T^2/J+F$q&ik++rhfK6S6"Z.jmOQ.$
%"etPTIo7]o3Dme6)D.JV,=N'f_kb_>1n;:"6+FL'=SnNC/7@B"&9u."h!9(\`Y=fTCDG7)Nf/0BqG>PVoTK&hkfrYYHc>u$G]&it
%GH/ET5e^mHP'?3!o'J0l)HTpMouM4?@o0o/d_(fqTEr,(L$dIX'Zg6Q<@5JtKRf.IVZO9JGYPj@>c^+8poL8(`/45^'*Q(J"=Ft$
%P`3QDbjRl'Z0,-!#OU7@jJ-)cbi#.n#pIAJMUQK(go:-[B(EC+LV&>\m?6@E\<A#K#ed:H\i7'A;D@+dVa:F6+dWiJG2;l&f7d<6
%.ls5l67Oes#Ml6a!hP"35d_[s[pJBtZ\;iFW=Xm-(=@&CCQ7'J;O0d]]r(orFWu9/Iif3cN-j0)'#ip^WPEQE6&GT:0k$'B@G@/-
%>UOU"eb7>D?Dga!RBF\tkW^XY:5HOO<M\:PGk?*<.,KAU0V#pIYAr])G4PIH[Z>;_'q,57VBueB(hW]X7?aOfSdLRTkF_nj;[$:$
%qJ.S=BR!glic[gT4m+<13<'h_#8Oe?QV&o@^&&SdmP(Mk>D'`c?Af;$GJ0m*<XuqsHX.r+!>/MT>i#!$Qu]m"JMgiUF<:'m\Woe%
%m:j)$bPnqFbO>/66,48g$S/GsPu]I]gC2b7p?V)OkNn4lm<*j=aR+)_2M=KsZY"D$V<,,cbtbCgX%*\dM1c&E\F&^Pn$X`=3Tbu4
%f53\;'[SN%2Li</j(L#^R^tM"/qk`e&aa%H!D<KK.@3cDI-LC:b'Db1[DqsCFaQHlK3:@kP3V3JK!=]d/jc!<cH;7Sj*EHP:!M&O
%d9p`^4,bg?Fp625ML>PfK3l"jBMAIqMp:(sqh/0k)]r;oo@>D,\<,2R!Juqb,$X%l:[B&5K-f/:b1$@S.4<tZ?):Z&FksB-/G3C?
%3:!4Im^^U6SpTlSLOLc!p6bCk@9kUjIEBY[IOflp$ncGLrA1p3jL'=,:./_>L8!+HZk'?/ZD?i45J;@sP8u8tkdBs:.sNCg)u+DF
%+;OqA7[@X[B/CZd^2^,QQ"jud5l0fSVPeP"=EJ0]Z/`N%!SRFD?Fto(,<F6M!PRLqg*D5"563V!-d]l0LCK:JWEcX75QGbEkV!Kt
%F!,!@,o0dJL;8[&,GSl1Nu>IOmZ`%jH6<W7JRmu)]4(1nOIR]YVdlq0_X5504hp@7d;F0,_sh=ilj[Lqg,k!VhtZjXgu-#FLIta1
%b&;9.Mt,r>oM3LQ[8)+^V1_f\OAa^=hgjSO@__j2nOS'))^;0=*%t(\pQQeH&I4"OM#rbnY'\>D"2S@>@#k.sf<()8U)uP5oioPK
%j\%GXbn8Uq1s>P5`;B#t%nBC\,_.trdNKZQp;d7biU[\H'*o>;c`5+h,ACD&TK/YW.E;>B`Je2tIDpb@@"Hdd!sV6_i6"m]n]5/:
%3^\a*kd=duHJ`C,cF\%FetSf\.1pJZT!Hg1)h6X)X86tO$WYo7)E,X2D^e&qhXS*l5a_BS!._jQ,:UDucu$Y(5`dhi9#Kurn"+-U
%p@ht%!qJES)AWTHg//1H@oli+%1lIA1lMmqNsVS?!C7fe;G%$.NcMbSRqD&ki>+-(CYp]S=,M7#GI;&%s4-@h2qFgk#cPT]KSi/J
%8nEc+m83[eCp^dgo3T*o`1mhQ!\KGf<=80r0"hX9U7ME-;YPUKFV<HD:!jteIk60m$iRNK#N8cMbk_VFh7&F6A2'qoP7]\WZBN-e
%gaIU`h[*X3g3&Xq%7;>FT@qM_qsCk`1aM?48)eBZUCi<)V[=sX'Q,k*&[s;!:DlqJ2AG1RV`s1ZIdrXFfjQae:K&@G#4?b/L<>qd
%M=H.U7?8)o[5t>B8JJI"<0COA"PL%"W-EPL@2@OoJ!rqW"a[Kn<>8NLqe$d;b3C]&NT`f(\b5fLX:03h-U^3L2JL%RAZ^(ZM8SH'
%GjsFK8$tFMhi=6*,T)/]ZSN3GTP#8&oe79&41081Z^k^Y=(7jcMjHf"IZu]=[3fHEnkhLn0_r*E<GK3:/5Q;/Lf/n&N%6"[a<Do8
%H'q8F,uQ28m#s>)/6I<N;RKaR<F]XB]HFe(#PZBNTOjked9g7JN0+[uE@C):^rh!Pn<!(bb*;o:XNUk_AIKjh3tGEO35n;#oHY+K
%;p[(PY8EQ,iP2/9X]@M.Ngc!U(@5!4pLFD,#KP&%!K?t_j+iq:K4Q$L<6rM1Xi5ln"XGV@fl*_6#-Sp%^Zuup*)\MNpF5h=1:gNg
%Lg`-7?;ql5BH`OH%F.pkB,Z514QPm%`c%J^`WIhT"\4lH3jK\fh)LpA@`P,$^o(M@HMR:P@1f'Qc-BFS6DlGhQLPUQT\,eo/i0'f
%7c6"lcEKnrWDg@p\&Q3hD0@_#HBL?W4*>j^+`@.\`B'E5XI;'^SkeFLL3bnp:X_CL]@!MCLgFZ-fqhn<`c\;f1<#o=(8e9FkJ@DS
%)(u%$m=o2]VUl\>Mt(\7[5,j5h_;?'-`m!#JKB.4Xg10j7qWeFW(3\Nc6r8oS=n=B%KJM8c14us5eYrbdi[?g)X'*,*g[gc/$bQ:
%+X!g6V1\01XR7L/(O(lM'W,lf>1(nX<AcrnNPH#NC*e%d[Ge/P[,TW)itON]W&eS!DSmL8;!]\n[JO7^.&.)(%fW,ZHWU0&Aq/Dd
%^,i$Y`5gUT^Q#DKSHJucXFcO?q!J(b%WFfpMWPPXNA02hA_h4"Yk#*[34hlHc"gbtGq_<!["BW10rC#r$`rXE\rd$=B]`-DJ:/S-
%^jrE1kmdq6_u:PWb*2\0@h0HEB\tNZ4EK8JE?pP!KjUs6SZWH%gdh,,q?-U_UH>rK6,fYfie2/JD]7$<iO1C$I?:Aj*C69kEua`b
%h%Pk\N?/ahp,X7jh6a:=:6UAjDRHPE?p/bMs#!u%\nSg5J8=bfI;V\Z7lZG#J7YHOITY4n<(7;PS?QGX_(:"Z8$O!lan$e.I]0jo
%*_PQrSc3r`J3OUWHf`99Z,STbl$"eT_Kp1i[dq^*>CB_VGlI!BIg3>nP_6r$Jk'NJ15?lPZ.#f[8I1aYE6[A5@X$KYk.o%0D,nr\
%eskotBT4sZfN$SXW98+m!9jZ(80mP!L5em27-@+?0cO%=oT!_[pnUUU:T3rR'[)gr<L]4`p%KCD'i_h@mC_Zn3M%o]ei8iur[12^
%IAc19'q9$d4&N>po#ZH-rP4@]*7k,[lA&]XlBMTIF&)bZ/[lUp%DhZ/$7/gd6!oR@aS]YJ^EU&NT.($);S6gT=\`d'51qNrQ*QjZ
%"XSffEIMQ@2@Eh/:JTnLj8$Nd:JWq+D*D9Mh_4H`Nt,32>OCgt`S,V/hJVT7o&A\Wc-:>Oni&4Zr5%+<S*akc`q-UOc]@h0g:adl
%.VekS!],c?WnJnL0:X\r&%C-)AtEgU/@RZESX8%[/@2auGHW%Zg?n%J?bG7Mg+^2"Hu8IX\WFoq4s*mBYOV]0ZjNX`2=':G\+'>h
%cM4oTS8J%JSa=XApYtEnrh*=B(_>Nc^=OIAK4PBiFn]_9C_&+qC;#&ol#ZPDT6WMEeTej:03]B^V(Z%gSP8'X@<nPJ>268[@2Ye@
%l.bGgY>G2gcH=\HlL3?)\VkA)_YV=d'`%I$:hG&=[Pj^AIO?HDTKDtQk?iZ4p?5"TVm:@s[pji:Qp"c$ckJaXG:PgY`qd@DZs5/O
%Y8?dH`p*=hG!UWM2"tb\gXE;&j#<gIf6d)TmI#UbolAa!`,E&]`Tl<6=IQ4iY19[<r3fZ'\m*;,(S3itBg;RObO-B8qLJo'D6<85
%kcbJ&J,<e-gFPR,4Pee"?aUfE2f"_eg8XAjG'Sj+]j,(+Pi]c"k:KNUHL+f'FLADTbHJLmA@B7`\?bJ_lIKB2i:(/n@4T+!n_d\m
%feN"?<e[)?r4t0>msfbsn[A"&9fm^kL$!g7>QC"[nL"j//YDf"rjmr^HBu0Ji[[nlhcBGMp>s,>@Fa1Y<4_hr@iLcnGi:0t6=!t:
%p$D[<6,,O1<n`Ym2Vo0UMZ3G5i\rT]p-IF6$%B'AIJ0bPX;.>!Dp!pnD/QFV^;'M:g^G?\q$qFWYRL0Hm=la2M*PI,Rn),S1T8R2
%QReR=\I2a,\\UN$n)`n-iVV(jFnOjWU?b!lR,_gt?>mJ)S3G,f>a2kR_h[@Pm"qU7#\:%j+!/4jb/`N=DpNbRQ%\WRV"O%b1n.ds
%ZsNr0qqr9ja2JCJ']sP)Sj%M*r_@D=B80uTVsN[&SFM';[+0&$]J8"2h`W>>fk.A2JV-aaTB:OaCHj\?W5hIOO@h2CVh/L2T5O?<
%98,FMWOq:2r7G%c@\RN5bhlSgl/'aXlum`.eEl4-N:[/Fhm`&_gBlT@+.6<@T2`KKa"&`*C+\O#psI.ARC_pai3h=_Wctt`*^V&!
%&s?aC4+"Q^8EMg2^6MN+?Y0X,h^qo5!Pqe5pda@Up>B_(^Qbqig+%Gp<[m,\N=TPkL[\_6=6H(AU<.\)Dt@K,`Q<bW4s45NJAXGs
%CgSf>Yh&+L1cDpK?$k`F_V<tO%,[A_gTC?cNq7AKGh#<Joc4>-o<h>QPNc?JFJpcSfQe(f[I1.[C4K&$/YS9n5Mb,n\/VMqrY]O@
%%TaJ?SnrUH.uioc\)"o9D0)s--E'+W_6YNdrqY."P9%,3ZsUS'AN$-[`Qo\r>/b(QPu`4LfA6ViHVUhnq;Y>V!\$at'k[<iVoO-l
%.lSP_O6WhpnU@[t(LRRl)qNEUP>(]3LZ9^4'=6mgLXW@=ld8"In&G`-\<&)!$J"M'Y6gP7<%=Fkh7Fdt^]6;V:bD:?mqNsHf\nUE
%H"+[`J6Uk'Mp!L09d&N_GG*sa+$P+]a`Y1`4^Qu[k%hBV'h%I2Fu_"aI/.6JZr&ZHkUL"^rhM">TBpJJjQa?l#5Rp@;H1hg?@--t
%]ffT-%U\QEZ*UWPZML>C%u]/i_ln?oS_r2=DpL\sfr"&*XZ^=?MtuOEgG;qY3Cn7g2Z,Ff(,AZ1kuW>HVnL*NRl!64+cgJ#0i`C,
%V.>uEKd6!WA#kDk2UFd#Ir$QeCZVePX(W]^$ndp;@k.]^=ZBl]\f`tf";:fefYBmX!=WEeE(7'n5UY3m::!C4clE!`6D0+99"tQu
%_^UY1"JnEMGa/hc*`5jX7d'suS*0+@6R!K`8],*tin-X=Ho@;*WL;/S$!='c).F0*/"2t>+]9U8Z:T:0^X?*?db>?FYY:4Rc\;b_
%=LJL.l!&t1=>fqT9%m,380Jr)Gq[)dP*^X>Q.V%kf;??K1ao$<AqW$b4r?c@5*^h568EHP@2b;?/NLlC,WPU5/7%XI2;h3)J2+T+
%YkD3F][RgUOWC/OlQM(>Tc"H:.^:E7/SX(KjGj6q<bR<S-iur_E:RYZX<A`'lKHcOOa&(,[LoZ-:`aVG/KN1s_1E5"MndM9_46#,
%V'C)fc0S=#r$;K903`l(,CB"TA[Ab_fHi)T]s)nlA2+mG/7RkW?J$ZsG#+]GXfI6OSeg4tIhDIaQ%uU],8Ma#Vbuu5.+">?LnFsb
%o$^_3`Z.N_?KV#mL^BD3ND-g_ooFHrXFBtaQa28i8l$maJ7WPH=1*o9b>k>,o(`e@^.dtEb8rO%hdhe[4,r7K^"(*_eTtrQ=_It!
%a3deLSr"2*5+VVm*oqBt'\UR+X-'%aUo>3%-#no5+P(l7bu*'g]R*W1D*RhSCkAbailb*jjh'+]6VH(g/6m(:%_T6/$28ZS>l!PV
%Qs+%?V\\=a$48eFe,j9hX>aM!Q\F_jcLGZ:n.UK)`?0@;N9f3r:ZJdXOf8sE'@2sg5t0j&,5scQ:b$jBGFG^`kH!q!`kj`h^/#T-
%jk2T93i_r\h+AA>aU%XNr["!?"^92p]+PYR,V0ot/"Edo4VoW]et7AC!:Jcbro30tr+bWPk*k@4P#R9;jV"@R;i7klZtXMD*53O2
%^oI55X>9,Kfp=H4K4Is,n`ZAPpIGf)?dph#LsgodD@cp#\b'4j!N!rfd^R\<:1=$P<J@NfW2\LZZ/7e7l[)9sqf3N&BuOK=Dm'Q!
%2c$p!C6o:];Pbd@Oj[BS$'$]K?T0$3Nm]S]o_$Ck#Gkn9pJ"k2)Km5))p8an5M9(_D`@FeE!roGd!-iE!PK!Og"3Efhj+UBQ/FtS
%oDTub]'Pt.Wd?DF>#?X&?_#J,?6X=Y(SC/u4ajbeH5alVQOL)Qo.kO#rtGP7_eQ![CKQktR_.'-mmS&0Jq:L6C"-/T.Beik+/?CQ
%-A=ffs3jWa!:!QhM-HD":S5CEIfq9l=Bk)E5MV#.oAX(snq6<!G3(gTB!\UV]t*;;+,C5mM`o<P_5kufZt[i>3^)K0o,::R/G%DG
%3DMWSdhY%">(?-''.^(sB)V^T[<MC/Hh,2T!%Y/$e^EV4*Pcs*'&)XM;?te%l6X2+8o@b`od!AophVD0=AKVSa(qu\na*$fRGf/^
%<9"f@W5e!Kd&!SVqKf,KIajrQqs`^hi05[j!O6qE@VVFf41uc",&a(Ch-M7G<*@mXHhI=moN<R>I]8a%eO0tbQ.?J\<`jdb^(lb%
%Z+#&<IJnmGm7?HL$_,S7^=tKlo4tnV_)$1KM/_O@OZVdk++`3;S`8*G]Gbj"On>>4nV7X(fNW.[IalrL0@%kPf%ubQ;[N=Q;LIX9
%ld4k72jQ\t(GpE]T?FD&,,Fhd1@XenHGOA;lqr_X+7'jUYY?X\4P@IkX`(nTn"#!lHiC6oW]%U+W[@s$&/U]3rEe(1b'kh+&*ll:
%;3\.oShF?#F`m+VS^ge[ZR:*(W/o6H+SZn6>O<0'QT[H7rN]K$C0,uPn"(Y?@Sr3U:ReC-2g\=CD#+"+FLlq+g:sZ]lph.;I=?,#
%a7HSQ>sNl3ZM%Ge4MtL<?']?CArP26*r]7j/c*ajh_fSc\"cB5KJ"'lI^P?>2q0;_c/hIpD!g/uep>MJK?2/``#IoTfrt?%,C<:S
%[7]QIa'b6p.g=K!ppcR_pgs/pi3HVDIUK51nrMMUg;3)90eI9Z#%WR62`AkJ5CrA>p9R7:><`;qj?Y/#gYD76Xd'Z,rg^a\cG.N:
%I3+-&4Rb;\7]lTfYZ!_HbSflVmK!!r5.CjC7"&?EgjQp"]_GasaoGR"1'?P0P-;WJR&q.L++,fE[8nUb5uR)A1mJ=OEOMn1U[3E_
%=F.JrMF,$S4Bqd:8quF/2Z)R__rK20K1Et4iR?,lYMZs'.U*CGFLta>b<9!]A_-RIlCY@0-]d[A7-=;?3:EFiC.[+2'.,a7p%&G<
%H1@Plc[LGtEGGf[K;HHUM&DTs"h`,l[WmtCS>1/Gpm,[qRQ5M$(\A(fk#+i&c/k-CCkFk;jR)Q^Xc6sFga:1oS*HalF*P7=a5,RA
%n_sJ:(Rq%Va/O$CnR#ak`QVsuk&TW"UaJSqY(1oC8,p)W"]@V<e/pp[n^33U=C_'<=/D`(LY_=?&$-CJFn=^q8tj[PQ4l>$!8A\7
%rI`;ba;PGMm!lW$@k&GcI0fHAoTfHi:j$sIKsN/7"_[:.H_Zh-2t'ZS[81I4"E6_Im8\W.F5c6(NE$S.Bs3S!8jucd/?NKEmK[!F
%[g8#PA<h)!ZHmQ=Tk,!_h"nm<.B4IB!Hl*rTjc1[?LHUh6<Bd+D(PDk5ErV+mO9j(GuhNNA=5`TqZ[9c)JG63%J92$*Lg,[ZFD.m
%;!Z'r)Jjn?/bEo=8NNr>(3^["kMl*6#Go;rrc)YGAUp=skFHPU\W94UPVP:ODc,:Y)hD/Xpd%(Os'BMYXCRWO08$qZD.A_(1\<0^
%K?EoG12AH'h@pbfB4'#_Y^UntS`PpN"OQ(l&#5IOhTKV+eWZ\JYfF?j9WVT5rJQ:Un^M<Db*)CP8`<bT#j_2VBEnS6V%qeGmEaMp
%gL"b.R`f$=F*Fh["[lba+iPh9eO_JPhqB_o%PBYK_Y]9FqkYZ5b8d6$@f\?EXZGiPY'Wq>Xk^tW]5Q]=`bQ=8[F4pBr@#u6PdIqN
%DcNg6`L#=SSC8ahY<P7e$h`lV=fX"b8r_^mcSb.FhdZ]:er/+?:d$%Q6d*-k2dC.sotb)1\G&H3F>.==Yg]On^lRRq!+MLc^?mR5
%USEEn[1+[/jnC9P%u0[<#W-A<?S*)?r"gjsqOK`ppSI)&gUWql4FIq8fqG4\@ZooXh?1B*Z#]nnZc*Vt!*=7rePfl:M^L_3*8c#V
%3b^@HhqO4LQQGg'?I%cr+;KK]4I3QWQc>a/jtp#<kIuF1ga_Yi??ZdhMi/n::YcUE:YE>6TSTT"IC+&K=F(dm=,4`%Hc(G>)<&"G
%<)EFWZ`g!kK$Pu,=PPn)p:BP7VsTI-[0X!fYbc`Qp?LsHYOq4_ej)gU_nGl,EIlj9E\VK_)D<MDTO*'K?h&TM:jpi>^q283S#+S[
%Ai7+mmHa='E2<*D>5S0g(jD49p@Ca\C?c?U(iIoLr7H5G]9fR$Hb7bGEsN?@mC;Vo3_Sr1(LHNYq,-W>^>=p<-8L0k#.X&8$S9E_
%<PEX"n0m[C*:#l`p#8F)[/4F2[.W'58abe^dMHV6K"U%R]_0juKaeDBDf:-4:HfT@:9s<qkN8OCT-Xl)=CAm1a"9uNA4r';JYsT/
%.l2\FC#_]4HaqU0g[Fe4A2TM@+3Z_pPk4<SiCRmoCi/B)YP>B6;[c<feE%Nhs1!`rb0AWjRJU)Dfd7(RLj&R@3r/JY[8c@$Bm]G/
%KHZCX$Dh?X+$Ai1;XSRR@mu,(I8c_iYrhBE<2.8Q_D98*?f01t9-l]5;lm&8c=<_MFuXai.4r[9-@=hBIH/Y&/7$7/CF!uhn]"mT
%q+L,sN7AhD8XJWEhY;.$M>$;VPMO+/Hg_6imb*Nc&#ZOJA2$A.)F==`6*df+$0HW3oRODX^N^4hd;q"o07W$gVQckr]jC'"<,M+`
%LQtk9ff.*N"h"]ip$8C7_X>+;)TP-cDDD.a7l<p\U9q.;Xn>C0G",%R4o0E[/6)R$:T;\t[.#Y!J'Q'6o#Z&.e,#M]q/ON:6i`8^
%4>)qHpV5De0D#oJ?f#'ASM%Z_lc1?BkbRG:\anfLht#qHV8p*$DC9rE-YW&;XT,'%MFU,G$=@Ni*[J2.,?(hTlb;298<?BN?UJYB
%?[BAu:jULpo-VPOhEB'sG+UrPj%J"9%u]PUjU*#$Gc*]kc&MU]OSbpmaDE2;jBo!jorfmZlq-%pL!6n*M>6@nS+X*o.=t==U+^-1
%\(8=,a]ZlZ'3=mKr^F`9^i=d<24+hHa'f,cZ*jZm-_f+"l-]32.lus[\bF0jbP?&CS=cm1po"qrXlNM9RMGRjF8i<O^qRT3YN/g"
%G43mie=3@3b!-6u_j)RZI.L\D$%nJ9E?C?p2eUlIDI$ZHs#l:c(FG3t($Mo7_)]L(:2BU%\)461CTY17mCN``4Aa]1<1i2_G]Uj"
%)ubR6DoOSmLP=1@^>JS+(N$qG(&VE5nKN^=HO>PbfQ2c0q[>PRMpt#m_um%/d5]CRI%VXS?9IlG[I=[4Ta/pH$kDJpBaIT9lM^;.
%Q[@-Ug"<Enae@sjcnu;N]&u1OLU?TuGllhQgfbD"&NpRq*;#2\i&$003fc'N@NF9CT0;dq:*=u-V_%?m$VLPSa6m<cL--2Y1ro+q
%ZuhMU:'EUaX4F"L[E%:=h0+:/&_3q=b#.Lf[&/hEnd+!Nds3@<?72>(4FZ*3\lW&nGVWI2h"K(Lm[j=1CQH5UFb3?mnsIRi%$upR
%Z0,Za]p\u/&jgnP`dfP9OT48M5._`/\OlP1`;)Dk'Lpl>RJo3qj&R45l!p5$YB>9Q5NE%KSN9RhDpe^Q++)W-5J#SO<]>!ji*N*3
%pY//f%R..0*+C;_>%8ZC@S.eWa'BL5K6B:+-f9m[qpkH\7jgO8DM1Odn7,7K$d=Gfd:f/&[N$Y9eN(X(d*4@;Tp&n\:*#(7_<Z2Y
%ir4qZr!f'K$3A;6;MBj_n<Md()W\`em_nNh*-'kG^F6dR5>#=X?Pn[B32f*HiW;3%gO7'gY3f^gM.b,bi_N^F+FlrqSt-Ds3FKPW
%H"V&2hQIXY(6bMH8Y6F;7)'nDK,Wor]p"@\j/hLr_C&24Sm6g/<89CqiJ"2N42$kRn=ZUb(LC&)L^.:t9a*-+&rd:c+1`]9mGPtI
%#+jcKYo.k`;O<^5LiJ9.J,;C*"jsXX#2V^MKiJZm1$Q5QCFZ`h(oP<2m]lm%LD)Lq$;/pjM9;DfUW:Tg9&16BIcHW0h3N;M*]fHZ
%YC(m$mkbDoo2RW8=BVd37.10+IPh2*ekpb<975?;Aor\FYd<,f[3k2\o`c=sm5^"f+(?3K_e0pbO[EPq:L[,29ehOT2&G(P4PnM\
%mL:)g$%a*l?,iaYa1X8;5l>6g#W\9(TR^jZje^B)+E!,E=&I%IhJJ+)ldi`$A$fX&aBA)-?Vd)Y/rI\F%M]qe5P7c1"#<elrtpB\
%lrT31ofosqDl7l[i1#+Zj>0ft]l4<7`3Y!`_)e5=DXt'3lU0T9^DjnE\F7DO$i'!p]RB6dm.J71ESnGC]F-oJn[N2"MWNc'<ACau
%n*KJ5`A8(r]d?Scgu,EG_n=YO!#;K.^ed1JSo;I^dBK;TH6j\u\$Z]0GV8gEf5Um**>.a=Hq/JuJ%Yf83+Z=hrSSUN@P;'2%UG@o
%^[\d=q">`^IOU#WYC-2@.[@VbmHEsYHI&%)K3&/%MQ_Bd7IYZpHLrf%>ePJs0D;,T_DqARkUWoumZgMg4k]SL);#>,Q_)iuY%LGR
%9P"BG*B%`Y5cVknRH>>(e[?KPfpl]b#o^7h3&$g>p^Cb%GNA5S]6?LE15=(Kfj_fp;r^>pQDcB?&-bV+\nu(rI!KuoQc:cj2tcrt
%5naZdJJGQ3^^m=^L+/),SI*-L:[S:<A+<8,mhDrRkJ?2kZmFBKOrEV7IeSlIS;bSZjm2D=$%Ik!)D7=kOGq&d*-(6ME=4Xa.0\3\
%Y$73KDf9h.Xr=6b\mZMQEM.69NHtfmOR?Zs^.Y'oLbGEHNWZ:o0[MpPlW62Kb(?L3)dcce"%t2ga_3.4B_8\7iGAs)Kdrtc<X.'F
%@Cp5=4.'F'c8,G@a**)J/B2N1)GL@"-IM4>V.g]'!o6koTgh;-_9@1.&UpuR4&?;YM4E6UJJ=Q51?8F3WaUd.%7nW`%K!17^4K2p
%m4*_,WBVr1!U2G3=^\F,C:&7UF1?j^HA6-#3WXFi=VHn\7RglGXU'jNRa%QAF\\,#(NoLEm3p/dAhiSS_r?tq[Xn<&!QY^#"6>%k
%2&eSqh53XN9d_i&(>;iY5Y'cjF94jO<$3ZsY[%D89MI3,Z[g]>NI[LYPu0,5([\((.hZn_ZSO'p;NofD+JI$c'#<0)QpCRdO@+eb
%A0=*%=)8"+l5!g,EkoU-Due(3@L.a'R2OOSD)!\?'a,/]S(u,)LJ'UW+$`nBGBh,I$pd,_r%MqB)#,3UUnRpD2IR5T$ijoAlX40P
%UViV-;$DeG5_.<$?.Cc8&>def"CZhj,:?6n"6,?;&`A\8YliQ2*=6W<EdH2&_$$51Ch09faB03S%iR;>/LF=LO^A6J)Nke3=#DE7
%Wf9V=1'R)$UK`b/7"s_gDZjVP.*#l(^QIJQ##tn-NWUOV@ddE08=>bEIFbV7KY^Oi'7i)##SBCt)CQ#Q9;5UMS64Au"uFM36-r6O
%DA_l$.:`m4@%4%[%u/IGr='H&O@p>`%Z$!#ScLb[188M3bFBgpa:>j0X^M\fVf$8!=\$RMqT'Y\\=e\=e.0sUKTN-g/k@='+39SD
%9>FO-:a_Y9g?:R7(ha#&@Kq)rLOi4$V?.-/J;Ic._a&Sr5f!@Tl'?j2WZf.Xo3s_Ue/$E\";(pU;]V>9QNf@ji(US3RGc#.$Zm"\
%%ic)3Vi5,S_TIFh@\B4?#Y*#`PGj'+C:\otL!l.O%YR5j6#%`l[fC=hV_/bg-$)VcJ`38VFoVe=Lrkc%((-0+QpIL(g52"Ycm-%+
%NE-85et>L*%;L)nU+YgQ3$,;:NguMik#obr)`V_&HmbB1U^2k1W$dTT,tCDE6WUu,^!]aXTb18Tjp8ASa>9]',Hbns+Fq#%_h*/*
%;ZI/=$K;Gf@'OB6Mg0-W=&;n*?U1YIRVbk_+:KHr8Qc370Zd#A+:cWFED_6d1Uq*$UBBp")@[\qL5K5[<)$Ik;B#$ega$,)*i,t\
%C'V4)KH,qO#3[6S!I&4/b[<O/(U,0Z*R(4N3?#:-KGI'P[=JlCKGm.P5Vo&FCq4;C)fn8%<DXD2#r%A'@KqkTcOknb!F[u5gqiVp
%0\.$,&6%59BZGn?0EE9uXlM_tC=Y\0@7^\"%1KM@%=eOB!0)6R1^r&NCL"Zk9G@M:UdJVU#`:;E"MhnYmGKfi4(-?US,.bSJ.t8c
%%?(IBQu[WrnH$N<qJ2;fF+D,X0A:XUm&"9K)8K@*M%ng$!DR]:PF+^j,J=O?b#-9'3ZOA;O9Y3RTK&qt.I/Z?]7XCr.JRktZ<J*a
%!?,FnFM\68$`JgJ(Js9!M5>je*dk<p`'RlDXFYAMEOd3Z%.4sUYb3UC.(Wu_\I^Z$8$ca<NKV>)P"Zh4,c8p6TI6HGCck+4cj7o&
%g`@o)NDYpr7fXs\,]@5rc#cl6UeZi3AOZ9BcqMGm$m5<jqI@lgEZ)WBgONstQA!o86rsDK5[r\f5gqE[`#)2NF@FDbK.V:$ef[LW
%[!uW7^aDDj,Fo:`DBKe5_Jo!MOs1b/WD"]u"rUYVU.'m*%%ZMc[3RCs+X@_3ZG?M*%XK(1F?igH.WQf0/Yg;$\91ROe--Iha@8lI
%>Ul_JLhflD<(8$2fM4%nGK>KlA2U+=/W`4A@%$@YfZq=`3fJGb1a<3CW&O7sK=3Ol,fi/;AauqEEf4(H@a8(c!e=B7!?.F]_IaYM
%AKoB_2jA$0J&/mn[AABc@QI<eE"Y\fFDg`o$E,otDB8Wh"@Y4/5E00[%m^?B!%SoILbLe5M*V%Wi)(UP0r2G#pn'NaU/fabS"\<>
%Cp;/&Vc^p8&-8##ke]%+"<,2Ln&6#rrY'r/<c#q?ZK6,1ETAL=r$XA_Tg1LiK*6g=S!MM.4GfoSajO9Z(A,0R7+tP)*@(jC2@;Pt
%9R0^\"]5na*Y=mMAQt"7:`7W+9X%ucDm;+`Z%HqSX?S6H`^B`CK#n1*bJC&ABec&_YjHHW4WFk[%011[n)2,m*/%[,Mfnq</t&t1
%(n6%dJIa]TpjmmFZ;P(#V3MS070qrpa,I#M)E>bGkJC#&Ne*&G:]eBX*eGXub2STTra#*l_J,(RXs52*Y5De_`4)<HQVK++r_rVt
%3;nIB3W`8)`$d'g/,r^HEV:nR.X(gsZ:_0'?!>-S'BPMSg+T_`GQjM#I!n@.Tkr1rJtY%2+gf+T@X<e)$k1bHK>e[828o8h,)%-R
%CH87?N++C@j7/:L6ElIB)?t3,p*Ma:-+=3><E-7IOML0\g^LHF.;Lb;1WYe1kTa%=1,NB(]Nm=1<CX2,bVG%eUIGO/!%,SpIO<ps
%0S7;h/XeSN@MiYO!WBa8;HB:f.elcn!&49UUOrDbaR"^:#1ZX'1Z#9#hO244P%7a]onTKNO"dh^"7ZF.`hoU-N9j5i1-oEaO-_b*
%[^[VlKCg$[YZNtXXbjKFb=L*fD3f!3^_X?\+rI#*1;p&L82QQKq%<655ulnWf#/\W*[!>-:>hZg29M:080,&NTe)3m'8T4&Tu)Cp
%X>,Q,]U`h9MPFmBr]4*9iZnsPqac^_53*WFe.rg-$m'>B)ur<0;0RQS'cM@)@tN3=46<CT'?6o/82QQKrM0qWpBEIP(N.)pRr)"G
%\WA[2)a,\WT*UZ9X"l)kZ+2;uL+:(D:fIWAI/u^PYRCV8*QgK]`t7>C/AjPWL8j<l@44Zs$8eL:L[I^tG;;.c6@#<#MfcqX1:\54
%M$M*%<>H"ekGdlXJif_i&h=j*-t@fqTQ&N&U*jP11`g+;DX5dgS.jMR>f!We,dJG07K=Jf%O&[@8/!a#:c-Ellc&rAgc%$Z4sE?U
%\6i7O.#A?VB`s-i(m2'A@+nXGO_pR[=^$Eu2V*3`a%-cp2IQfFo(=u-1$8XY2A9'0U(&n-FcOOZgL9J,8S;-AoYQI6)3=iBWeq-X
%5j+h?pnMq[,PH$3=74r(_h-'/hhUR4LeZ32;E>'B$H"(:An*^KJrC2X_9kt.;[D@#0N;!OA[<fNfqMBZ-RJk-%%0I=bm[ci;ZW(q
%&2"V]JXfVkC=n91B]++UL&j#SGg*4VAPui/?H/cZUkQ38;.;i2l!/'$J17oX\X&+Y`#Q:4@u?_`URG;,`N#gbMBF1X3_?N/;$,@R
%%0/7+;+eegUd9a_6,YdKTe*;>aJuHHQ3[8ClE-7I\_,T>6-#CeMW-3$Pne%G5Qk6UjV\_ID5^+7!JPAaVukOP-j[dD,S5Eg$HNLT
%@?@@*#A^B+>RP/L71s"%;rqPpD2Tm&<"?CBWZh;NNB7k%<CAer%dlI3*-@0u8c_aieNn+jDNJs;)l+6KT!VpT<R`t,`/Zm2F(-.d
%(L&fU;h8`d>>S`qe"!)?/df`Z(&CU=L2]E@?o"[JK>dt0!tAd3(nCn$*=MmHJjpSr>ChtIi';9&Po43<@16`J&Me0,/-]Y9Kt_W8
%(ljClCm7DoiQI?J@%FMWbsda'pS`2lRt>'2'5!fA8/<oCLX\t5aFLKfdTR,u5Z$<k>=Z+Mh*RtC!PGA5W1$O"CrVp6.eoY\+.004
%5\TZ<@`JVp8AH08K$_)cSK]0^MC=!_JZ/cY&I=[R^>l:CfqL0;Engblbf_c7#:BfY;[kK-(h)[e2*"5G!pjTn#UnFcqL!+s;B0A4
%V/]qrYt[_I8Q5['KR"Mf?ok!?UC`%Xd70<;m/c3IW,@`ML"$[8K%NMgN=^jn%,j+S%,a&O2c.bbD%LJ=Kd0$S-AG`4Jd`7rg`A=4
%M3s-b6em1-=i"`RL>CaERiSA9b;j7>K:36H(_k/e:Z2MVZ6dQt9sis#6#?(mM+#/+Ke.2uJn-u/f+b1of0BHV`<]!RE1OoQ'J.]K
%&D2`95Z4p@e3G]S6fm6>;&r<:+oNQ1i$aVc,8^WHlC@.U-LU'N@S[WT_U-4B!9blOg&_RDUc8FZ8f0g$!BsdG)dp`dYltL"N#=Nk
%+R52YF5S*5U-TGBOkB;\=AqZ:+p\DDKE]^,`l:ECV!OJW1G)TD"r"'&@TO7f%"g]5;oc"KYu/OqXk!p"e1hU`AI!F]lG.T4qLG=a
%g:5e]71`ELaU@FU,&:[r@G9:KWTgE3@VtB^MOR^$7fB,`N0M:&3#C=:-LK(igGubL?&-Uj]5UY>Pb"K>$]5<G'*Us.F?sif$oBRu
%lenqE'he!VkoL)l34=JUR:B.f(i?h'5ojoN=cfPu&S<Qu16dX'Cro'J!TZ/kGm(Ik\PPj"2[M<LCE+pf;94"$h?H"Y7p'MB2Lu6p
%N"@%S^p$Thd&^?f)=hebW#?AZM,LRTLZ[9_c"`,^dIV?,FbYX_157c.!?qY=/Kb.^Cl=,ZUluP/$\B]`.!;0rOP_`K&TV>"#e:9t
%#gjXu%!`JDlaTq]P$hZU+S<LeSOD_BnYh?lC/7)ui<KdMF+l9!*#A1r["DuE]Fu$0M!e\+N-<,LNTE-/T,-00?*cg5Cc(+X4BPgO
%:rU*ON1K]p<iY%Sk\>o:&VIO/`.e?s1Sue57'IQq0a2%]<<ZDJ:_6N\)EVgu3sYhTE)HHs^M)qf!!0$XnK:js\>YAR$,Xd$;DrB"
%R?H@@-Q/5FX&gSUW#-#`0K+fs%ROu^F-`;/(u_M*XFWL0$5L"#/D@rp)OS>J-9>87;^K.m5]A:4R#Wj7i&p4R!4FZ!B55CK(/8o5
%'M02im\u#U1Pc@Q:+-=eI8[>^"]Ask[KGcG+jMmc>s(ar*61Il&/?J?7oScs)7ZN?X0`Sp1+!M&(uQdW=&;AH+UmXd6(17!'ESb"
%"9rb+X/(ccV]F8d$r09H878KMGr-rc6,Zq:*]2<AnPP!HaPKf:0r8O"RGj1<L0J+6mUKIq:k7;CT_F>ccuV!?I:6YCaXT%`/V,,2
%,4`WCYptVF=eR+)N^8a17ZG@hC(N@^IG)DnX+luD,8@@3-:DC5@oC,XoLd"&OD,gN<@Y,T8.a.LCQ>153gMBiCP"F_E[iqV&2!U<
%0l0_WL^$0]aX@99ngG.l+OM_Gn&W>uU-OGk"^Qn?jYP[S`ATF/.%kkEoL+E=Z3@VS1IF,PSm*nImL+SB=<tb).2Kn?!#kWB-9/gj
%2),9Q?oJ'!"oT7.L_-sG3]W"FL&f.M=I2,1,KYMi2Gk:7[jI,@E.X8%Um;=9>hB5N5?uPJ&#U6g;ISci6m2f2!lJ%E%.O1Q,MPm7
%-tFcO\rXr[0H_(BF,UR<7;T=b\eJQSq@mNL;+NNR/X?ksi[!:pH9s"2F?p".+-'cd':dDm=Qp6GKi3gDF4!HIgb<>N1?oJ(#!:Fu
%MuiemblH-BGR+o+JcP"ZdQnWYE@6Cu<ksn,*b1'.$UEJSZ(3L8(O,g4e&2\5>>k\I$kY9<%,a<kg2?tg)oB3`5Rq&J-,T4haIW[E
%D*sPc5nE10+SCJ.L5WTbgj9#40RcH;[R0.B<90j/nZm&[U`*^8aohcV?^9@\?p/(]9R@KgQ-cKX-cd2l*"C[h5eR5C+nIeNGu04o
%i)qVX-,i>RP_+fR$CE.kM25)icm3hN&H[p!$pell<AgIu[Xlt)4&C&PcSSO<OnUjICf7g1H8FLq<p0YqK]eFPiK6;s*+/fhdP3/W
%%4B5*+Qs#al+4q_<H/dF=KruV!kO4E5GC*]5Y3:rlj,Cc@e(`e7fHM!X+UP"TJ1[HLf)9)RO\4Ra8o<5L`3cc*n)m`E=NX@M7BW"
%5]>0_MRJ(lU2(Dd8i7lO]r;mZ!/a<"9'R36Rp`*QJV"h$$kln$q9jC_FL2/9N'lYd2Y;@%IY+II*-'O2ZTqGIX&sM-2,68F,2rq4
%Qa@=;1e)IMH7X/gV]q1<aT*&k,*".rV@^U!To`ABYmjFW33BtE3BF1A+a-XlH&db&$k"h2QTnGJCo1)B"tN4H"%t^`UmX3[Kno>?
%[rYYo.3BRiTK&<32hPkIdLgD]Mk`)5<l;eq7$%jR5%"p72,VN"MmESlAk5*R;(.rrEdA0._J&24Xc06k)4V<GRr(9#Wf'JK0Oq19
%^3H_>!&L&u_IaYA6]OShXK57**oD/G8YC)sCsO!BYX55(*G:,pb+RZQ^>Z0JBO;3GHA\8I5Z&>[>I`5-nDp#a&!P)*jrk<7flI_B
%i59R\es:Gu^cHoO!pqeRC(\Yp]??9^M-rEZ]?G@ZIU`!mJfk_$24<+J10RClN$`fU!dUV(HFU5=-hhHQHap=SK6>nf:)nk9X<ejF
%gWJ`djR9IXX?r4a(d*'L64?2%)r"==V_8+5i"-#4_%[e4GEd6)p->-"$FZ.Rd5F)f0i4t>`U;EhVG0tl82^7PP/G;X7P^P[UB@(W
%I:NFC#jj36gW3f-h[WuB*,Hfh;hiI+!gFcu+%[@*]laa`_IIJeie_bI2<&1m81)+V,4Qeu,uT<!`?G]@jW1AElUVq5?UJLjfM:!H
%atOJjW0iD)+qtEo>/Rco'k5G((2c*A[+-+j6I:rm0ItdC7_W9WU5N<PE5*8r(q5e*^3%j=LF6bpG.XOFU2BE;.>"Gp:]g$DC98g8
%`:f-53PmpA1Z")"<p5Rr/e0d=UUC:,n`F5S2Oa4:ZhHAiQL%/.hRnDcLDU@":;KNbn"<-_d$#[[cq#rY#Rr#5rVkfcQI4N4gjSY9
%<_'#4TX"p'.*I&&F?4o1B$8c:1V3>5?)Er#]i)h^6&YWk_p#&9Df]"Zq.Y2!kq_.AmCUJ%!WEpsD>JWA8md'[rU]sV5A.GB<.Vu5
%s%$DS=I7Y#0VSJrs'KJ5>`rPeq_N!opf''AOgH*9MdQ(m5f=C:HHB:3'6FZ@8m(Z)MJbWKPltX++88<-''=1Ul:P(e2Q-&hG-:Dl
%HiMYr,muYW$sj-]q6XuU8eM5ak:&gs@pg%%d5C9%?ia`;p>n$5!fn.EK6q.\l</J"s83p@cL"0">pDH.Z/_b6aA/K':4tc#(>hbt
%j^VuoOK2=5f>t[Onc,d<JWFH[CMoPZ%;/;mhRWX5'RP5!15TLqSF:,:3f,W6_C;hJH^up-h/^Z&k:*_>C"t\5eb]*K&f)oaQbfc2
%_.4ii>O#t'(CfF#0]B==2WF^_RISdqXr79Z0(\oN1[a/PEuqcj8&>I8k2ft_T35h*UWmpmUZ1:K6bT(@)nGg-F&hkt2LiE-f1rAP
%D?'rd@RH8p`B/0#GDR&U.m(c#$hm]@m`SIt6+Mb^3Msu(<h/*V4o9=3l>=8UrdN6R?g4c-DN\^V\NBiT4T1oPgK!M6:W!XIU/b[!
%<#W^e5D<EIX1JsQ=2Lt*6)DhZJa9oBf8,?f7]<%m_d0<^rRu<ck!l?B7jT@Nm0BdgLYdFj[oAVa/rI^_Td%4=Hj*WuU.0iT>Eph$
%g.fG_=a9X4\\K1D@&m0Qot_).OVaJp_#K.WD0&G5bY>Gp@oI!X7[K,4"c8,RjCg/JbD#_B:^MfIcP!Vo70P^,oF&d$,77caIk/FI
%b[`;Kf*IU^W?f``"D&pM^32bj8Nqpn<@731\-a0@qC&G@[oGGdZ@'Q4>h4.#,oK%Mq/At%CLbAkaE)R>>ZU-]:-Mn()5%!q40k\f
%In<)m7[hF)X>cH)W5H/cBEZ">*A/.\96!'$:]TJB&(\Sq+c(Xt0>Xj<&Z'm@qmoHkjjeX)de,`^43C?kK[VpbQL/XGFkI6dEU&/X
%)lh2dlWqLJ%jOp.=MS1Z<:>Y=ln^+<:Y`5qT\#AU5WdL%@E!lq@mCl`&EHuFWjFW$c8E%Q-J;/N/8BY0&d_Y$b]n)(c:M68OPr3V
%2Ff$)rSP!5T?>X/eXQ7\K'rT%R5/JkiUHNlr(bneR[W"G:0cRJS<":(9`Wf@&E)YX4cf$,N`o/7i6hia1V9$0Z"0G)X)jF1r)/*%
%b%dFCWt^c_OBX"A6>:PEW]D:T/kc?>5O3u\6Jmp#W%4oJ[mrUMg*lit9>d!H)$O0]`01BQ'd,;0pKZ;h+06.`XG$^S"gUM\fTp<G
%>-&a8`HF(J?W:jsS"SY4VECT/C@s@an?:so!-T9S7,);XYi'e7Y)RJj/8.GDmd<BPBf4$?D9XsRg8Yu"GQ:%@%uuiO"4X?D:+kA?
%UR:=JPfSiX23aI;26?+4P84-I2!V?u\H<U;:"S*jk;UpDTDn/a'iK&>/tD!ofHJk?YV*FuF<M=UeA<JR<+E&+25?Iuc_hnLhd[MO
%RKSMPJ".H%O;"<D0@k9]ScmW1/NK?0QC<EEh6i)5!cI)aDB$3@G]4(j&*p;4jRk#qX1IlpP_lBPg1G*8Nmk%ub;8sT24O@aQ_^WZ
%j)l!:p3GI`rqM<7aL+Ks<ES_&G-\i?Qq:3gnmd5#lM7i;Xjl`a5tC_Jlem.mAl([D4qqRk[I8[rU&aRWSf:=BnjP]D4/cmcf,pUf
%n>"6\GeZ-a*:UUVAEDr/n&Psi<o_eJj2tA;6dMd-#*Ns;_(QpY"L0=u3&7]K]V'F-NM0mug&S.^pmiX5Ap,?#S`I'-'kS7_+&pL*
%J8m/)CD9#9S'oL]H;N0,2g3eS+3qGY"l0;[VopWQ$?6fjLq#5CP0^nTeOG>`0Sept8+^UL&![nH`\N]oOf=^/YRf>g.L.K5q?'\f
%-!-8,[WjnE,2p)!W2HNFD90qYE5Fk3"lZ@Cn.ID3QTL6(o-(aSTZ40#-+gZdNo21Y3#*=Nc`L_SfMuKu;mmUs$2&kK<(XsE1Jm*#
%#r>ie6rJDkWspHC.ap,]oBJZ2Ei;P.'g594*[_7$"=bkn!m<U#VfV]3T2@e$!"o'X00lf%Y8A5]*5LI&XmbOujoXEF%$.:bSiNq^
%-H[l[%t1d[lLB$q#E#i`-<q.`&&EIM(8_!i7RG(V(<q,+[L4Y,H-f)BeIf\a:.FZc;PWK40*.YBksZff%2d0lE>Y7P%G!qsr[YJL
%dDVT<@N7r7nNJ$[hYOd`kgsQe8r/W4'o@On"L,apPI,]jB5_Sj.#-3Di%,6DpQH1<fTmbK"ah[CS=*'$D%t=hhJa=Ip^tlffS1%#
%`llHoM_Ccsp)t!MIQQPR+<p4.*jdA/ih/=^Ha#O='FHOaJj@-9YSCf0eUmq,%-KTT!mAIf%YaRkr6T!rbp[h)!CI?_2He\@*ImJ>
%3,QiDSRu4eMQh)&agYlB(6u*c?)>%q.)XB`i6R&#R&J-3mg[2:B4E_uJE>!p/?]"C;r[u$cTF*1L[\&AAleF5pBE`2GfLqX*-d15
%@lYH[LZJo@WUnH<P4GW(!*Pfa!@nJkQD52LEFO0Um^jEOnJ*q!-4V5e[<=`6o!WM98G\oL"h((JKN/uFj=bP:1Wm[.fP8T+Wuso?
%3qshc[t.`+o,qqP(X\?Vk"M@$YtJTX?"M^?63hQ'0lePc<@$IE%EBf>9?n4DlT0M$iN*,F#\.8-d/ifQAkqWK9HtK4QO2I%"2c\Q
%E#ld]RqdL:p.SGd2_*p81""C[rC6bb>5VBCrBjTVI94Zl1IH<g[Y_S@9%KM<$NNDH!S0hX8!`V/Me>g+Y);'^o>26'7X[7(D=-M:
%^rd853Ulta1ct3A;r%q0U+O'tg3lkDc+#Jp@t,'B*4,,!oelb14(9!=EUDiJQ@j#XGeIcT\.u)*WML&?A,+R!>YipZ1-E_apQ4^8
%U'rto2PE9F-4gCmbm3q.]*ICsQ(nT)XLm]%!A3GS#WP.)T7#pa%\B=$$Pb1u*;d;OUPNs^^;ZZ5-+`:jJm!\4b748t`oOjV&f.-N
%hui29P-_1mj\rPVYt![^'(/P%@Ae_J$s/n`knHOpYCg#d>JA;S!/q"/\ZQWOK<qGH!0G6]5lfeX)Kfp9Vf)?aLCUIU^actn"]@Z'
%?[skH6p)FX=IQ80]"Z*8#NX[Dpk9/*DN7<*Xh@&BYn!;bX0p41NqdLBpX^%SFq'Osn6J*F\tTYg,8*'6f_=_e_Q2Z-]GnPS/PrKZ
%]@'(u#'<fd;!G&K]NuU26g$)S*.0%960?:dgmH&K8\hbR;#120Wg%!_cp_#&hLIa6`QSG[[RQ8u+'e#="ldo%Em"DqFDZe'P+@5:
%#'&OYj$#hQ]u!b_h09`_H@QRX51R@BlRYoH!26C!5%Q<,OLJ@fnT'Q[4f\,2%i[blH+VsVno"'1NW/f[)s=\#P:+R9N=5O[oZQr6
%f6Z^Jd`YDiLfN9Ph;iF"H2;Bl4*ii2^X/Ho^OZXtoi6d8cO%c#VaKXYoEY\f:0R7Wk8]kdj+62pS3uh^p5B4XoK#WnNBBGL=%HFp
%IV!?ad.+^-Yk&j\-o7IIag"kq!.,#9MeL,^ODW#)1m,oQT\K)IZej8'jS<]_&UD)4rY"<-OUJ6B^P&2Np)SKdSp%I3p'<jcdld*)
%QtQ&ZoZP"5UO@lh+!YjIT:a,9f,d;+gE5>2IcGY0lhADls&j&'@AJ8O>^%'_lW*GAif\<9I=56'm-2j%mCKqu7Z#J/Ka"["j)?Hp
%BA@UGScqgFQa#597*&H/Z+M0V:B7HGZYu1mQAP:u.e9fn^"TZ]r+a!X/aaXcS_YsoR(ScJ-ZUc1`l>]Nd_eh9=;[Jpl=:s=C,n3a
%Bo4`EfJlKn<"2:>6`''#UJYi`MUTVd,/gRHs6UX#r+@<@<aUgC=Qaa'67oYQ7N6#2_:@+T+9]>(hkAbS[B$OnS`JKO)%bbumWmIU
%Y-Ual0KSdf06X"O_u>E&s6G-2lk%Om_sWC4!Ck960't-f/Q^bXim;=B&RSEo8rmZC#ma'HYBg`H;]H)U^D%9DLaSO[%lmpaOgqTR
%j0ZLfgsGa>4J?=^`dX_Ga2Y:J,/g@bN"oeJ:$8%[USoD&Gaho$!6*6'5;<JIZSn`S!ULdRh1_`\+f<$-irI('g,(7]cQ4YHD,t8:
%7YKT(`^IAhPYktORr&@+VipD"s,MV5ML+>?Z,tC^&\a_5"K`F886f<DhY+7B0'o>Ri1oE7n`2k&Nu1#7.7F9+d*I&5E#7C)je<gP
%5ZlRD$DXlmi1JJWDNOm!#/T+WK>k"ZI+!NFGZNTf]Vi>Z@6BNS>K4>/C,#(FF98'Tgl+bF`jVjX2@k<0?gPm+(q7C'_KNY/:>;qq
%fJ4LpVU7PXCdg@,Pj7[:a.VWf;l,1+84=qq"3PEZUG?S/XGF4d-EpA!&K+R5,^TuI_td3p0craTb0(WuV\kmV3/OZO@:k%b5@U6Z
%`%A)[%gf\VjdkE%"![uE1:-9BB.,^B@t8*qL_$`qF?8AL4#a^/6!:aW7mP@`3;A(.<TUC;&)>#6Z/%gU?uJ'GqIk.%hp]<dXn;o/
%c05g+>bg:4AN')Oc75ZKqL5)\](rqQ[X+,='0cQK8D(/9kqGE#3ul:<;<'A7X[n,SpW?MIPL^h<O%ni:3n_r]:Vl*s=Hjr.oI&nW
%P`h"lRugSRHU^g-]pB#?j8<$3KnL`L1&1*a@asA@*M93)Z@,GX=+.snW9gOqQcrPs<+Lsmn:Tb[,Yh6>KM/8aU_ktuli\oO$_CV=
%3Aae&dUeS&5B.V>L)n36`.qRN2b5Fo>^j8CAJ\7-ZoUKt/7SouWh-0%c90,3Fqb5DQCR$HSnKNH-6ZYmoE92$e)'0jE]XOtRG\+E
%b$q_a2ilIYluaP.UB`+jDY?7cM'irc->9Hk#s4h/c;D$R23NrH5=M[-A"JeU+"$e1.MG\-2%>)cC/&9)-0Y#UrY3#,=O!7FUu97A
%HWCb*-s8!9cNXI0#SC3Zb<sJmEcf`8Kk01T%>d,:AWP)Gf6EJdXi^HD0blLa;`3\eZlCZ&1\QY@N`C\Y;9Nd(nU!'coQjf^o,m>G
%rV4W5b&F,s>)]ZmaJnt>+*Jj0]5@^&3i?rL13QGu^PMsNlGsn/[F*/<bkTt_@BOV+DgS/2N.K[b>trN+;t"gcfcNK48<mEuhFONp
%gB_%fc>b0Rk=Q)^%pis13d_sSOA#f!TH4s'2&"6g>@$jW[77UB.BCG2`,:ZjWY$$X.sYB=G81=O?5OTg((SGiEopS.@sq_7-urER
%>)J$-jHJr@"FPSK]OorsmJYp8XN0D(=qE%PLa?N'bG4@[jQRM?Ol-ogAD8^TLRt[\,b]Eg@o..$F>RR*D<n\mW9S*"*+CkZcJfFE
%p9dCV5JWuUR';oAmLjeO);ATT'LSE8\ads^rOSaO.eu6P;O?M0/2-*tX>;4'e#ieTR\5hq'%-L'#\%-)Qg`WaDS+8bYg5G#j\Qs/
%NB[5Y)8Cqg'tgUAO)ZAqjZ:(3q_UM6n?CdjIPcDdg:MA"Q\86^G4FY@s3K'7Ith#'-)$T*r<>"Jpk=,hT8!qFr?98.D>jT]c1ZNK
%X_a(bgu;]F@*FC#JISN*+(e#FU1j'T42A.NI6Zrl%$*$SbbjKSD76"%g%;LUSbUaL3t0fmjt"1&/1Kk64@1YVl?g$R7g/'23)@/]
%/(I1)1KHtaA\EmTmDDUPKN@H):])%#!'.?j<n$*p.'UQ(qX0:?s"CO<6!u+f^5g/)rQ14D!9Ll0U5:;md@Ad8[GSX^DTB/3!5-5Y
%ANRk`25ZhHW3QTj>nl6;lS=cGpm2sOB*@VmYpD9;-S-?W2ba$t4+9;b.@JrH3GdlMhWeY_.1>WT'0q:V4M<Pr?r2t?RG&c4;&QjN
%N#u[RK>`&f,.t/R+X[Fr2r0<=fr6Ga't_iKWQ!,8mYWt+HZPuR7Nl1o<g.7]"]@8I/\-/,+Oh'>Q.t8j=*)7*/b_d<lZT2VV.56X
%+n*HC=f--@'6O2tJPmJ:L/%ZjY]iTd]TW8#`aX$8MgGmIA\4RL@0UYN,%pQW=-E-p<p]R")7f*d>4ONDmrS,+"&V0-/QcXB&8JbU
%1qR-En:?R42OB6+C>?E'GX[X%MIoZNl?8"*akfkpOVnj.MVA,`'?hH#k_noe,@bJ+g27'AL63o`OS2'Kp_H=i66OB1@V3ku([>pM
%?5%!;/mi$O2g(&hmN&*6#dW+df4bW2Sp.Be-(5[7q;N-WFP]nbWF`"MeEhB@J,-hHXD(*lnW$B*&YLB*6'ih\WUpH`0P%(3Dm6EL
%,i'm1MFIq!461PbI<<9aCtAGZ2bMe/L$0F'Vl#b'EH$=gER&X=>M-LF'L/i>(LapB3Bc`pC/%PTOpn7k=;VcK=*(rhfgsQ<4itZ2
%:CbsW"$Dl=Rf:\Vll471G5;e\_I>IGM]Op9W[+93g5c+=`25k)5u2=Pq@(R&bld!Mhtbo9LF$lY:i4FObcu)#e983V37eX9TA<A#
%AR',:&F2)DU.%@#9*(l1\8YHGVa*L%.AP<f%AQ028>\R@ah(^nN]i.\poHf0fhUI0j8k\R_P!Tm;6rL)Rb:lCMY2/90enS!pNQ;+
%#LAT\]kK"F!<aSU2Zho_^\Z[=N)S/^'VsIVj19nDHo%WH`N<!bZ<##WgYl`a/p!Gc!=1reT%*(&8K69SQ7InHSn^.Bp0[@eiGq@f
%gh^u(49/u^L^,KZ=U0Z.Yk(O)Q(r1!#Z!$*-cB??Bg"!>KZ?$d,7Au+l\-"1CE4#M]R'qBEHiN,DE^B%#KWu^7s-#+cV`F$nnQ2Y
%Wuc"\6'%.)";.>gSZI8ddt"E^4\]%6dg`KDUBP%)cs%/ZZ<??u^.=%M;)QY3Gi[R'pMABr8Qc]p*l/eH(TPU[(NZp<``Y:hQkiR0
%6+09/Eh$]&JKX.HN^RdM3;'n_,M_-'=Wc=KN-Oa^X6mp4!Im8qN`o2`#4;b>/ipj/iR`a@Fc]BDX$>s'Pd*<52`DeL6J^Te3)<#C
%[Pq8;a;?af)+YuP'/EUPIc1_B*U96W*=aEd+W6uW?gWXn`L`sH>o0G9l1KB8'PK[@&`d_a.%'$;&YE7+.,H7fL/MU!?i#_*+3et0
%C=G.TXBZ=2d->-3.-A8h5KC<I\)R/mFM\M5@'SO5]8J`*$2oZa`Xd`\jGZ_;N!.2[nIq="fs>2n?P]?jc"*cp[ekX1dH5%1R)+QF
%<ABG:a:+)oR["W1>"ZoeOH/^/TPU5Tqi9aZcp=<-Wg2,ar$=XYm;/Vp^J(h$7.*#Y9>aBP"N0)TJCKaB4+7Bac`KZ.S=n`[,^]\K
%Q)oW!TJTW67g'i$^3$5XBQkIUCf9H\R%/W_A+$GGlom!LgCW@NgL'H>A4<t^p=A9],=i-Cf$:kRE4>spL(]J)q87N"%`*m';7\^n
%pc5%%]'\:uEfXfXZaMdk[(RTbR!FREK!;9,,8"-K(I-rEkXd@uW_JuQL4hlhA[p#2N-+EfWZUTA^G[1%[c:"lgUdi2j7#1V0WLF!
%;,<=8_nR0-^="Co*:?D5=97!pS9A"5FXY'jW'm^!>O(1PmoThEn.)$uQ^=aPDAJ*_8KO!Br%_l&aYrE^D4`(l5?Smn6/]0;_miM/
%2s)tpB&\u/6rDF9ek*^]3uH8^Y*%sN)n`qoNRX4E>Mh2ck1VN"Nq-t?4/[.<ZYDGJg,]1HmlS^r[bLMPo%Zk@qq>9=#TKpbOr-uB
%1BfL=j!UVS6Ica[:Mmjl.?V'*5OOn",Gj[g*Q\\08/4V]Di&GlBi9)uW[WrC*U\r.:i5Zm5^d6"9uo31(h6X]lk4_YK779:IW"VE
%fi-AnXmnP`]T;UH8IGg8Ve3(%Tc;KSm`Ekh>3/ih2=S^.[dM<[<I"5dkk:Sm;X*DjU!1-I"b5QK(TQUi@e0D(d:EK.:W)9";J3e]
%U8F,a&^Oqta><5<hK>igdRDmA.FP3?H^)2'F5+n#>>j-YO2?Sr*NCV1-Jh(7,*?#;UJij=T#gKPCi$ffI`;Qf1d["af9JIM&4_h=
%`p^C-]6,YsG3LL\Pb^hf.E/H'pGXtD)sPnEOKS/fFW67tk+?YdG7fR)MJIq(MPPJ;U9u/uW6dkehW.^UT3JQ7qhF0T<66US8%I&-
%5(Q6d,@\qonDe4q`3M:S8:uLT00:l:2d>ZQmcHA$MI8n6SKsk7,#HMKq/Q1C"gBGK'uhgfCbN6O34hO>,]H]C`Gh+Wgr*O37=Kr=
%>*'l!dufb5X/b;_-=sj/cX\,CfRB:<`.>%]OG]k.gM#:C/1^WngcIKZ'^tmtPCT5Gm:hnW*br'8_kgE)@a*q#]KY^s7-4'I=`4"d
%3'I.X)8Bs:\EG@_5:05H+b6WHL[h2O:]&]$8$hrj]c2`>]'#\Tfg*,]4MpOd8`B02'Ft.5Ld#*#lVIQ>s7tRPcX2kp_X3cUoJqmP
%k55$.f/UjYmWh'LA+l82[?H>j]M+a:eOV/6I3oE*BD@WH[-?2<@0dsh-4Seh01eMqr&)`?p[pDgF2->%Oa@'LO*`Zbhu>rtoZ2Hf
%;EuA0Q.;b5>JaBb@0o"K<fM623)MHQK!6,oWVU!%"6J^R(EDVO(I46,G=?C:Kn/I7?d.U=U=\LYNd>O*hF::MG%$glLpO6g#e!Qt
%j!'>@.@\E95BI,m.B<A(JT)`\\.dI*+K21NgfO_0Z?olfj9Gf"&r;@f@2A1kLC*dT7B<04eR;+$j<4G._5Cg(s-,h7I6[Z7Xt^NH
%hG0I%@E#@G-p#6SK$iPM6[9`njJp(kMO[V&WS9mB]iU0t6lJmcU_iY-puTuGOXe\hHZL-dq0eZQf`do*"Y<Lp$b_Dclsa%f^+iO`
%dXCjd2(*C:.QNCQ'KNQOhaHr"3##0RB+<F)\@IU6e6UHT$ZE^&EgRB8-tP#eWf>i<Aj6qIOt.^5>QfoW<A8G88dDJjQ8(<&&"E-k
%T.o&EQZ.@DJ@jK3K.4DDh>"sX*2/9;dKib=\\f;P)o\Y8B8]s<2W[@V.gi6hESR_Ze,uX**#%7Qja;KEOM<mH/,ATGV"5ih*"u<]
%IGVa,^&rW(j^5?,K_@Iak((1V['E&pLT+NCc)%TfAp6oe\$S_ge:d.:<4SCjK;t*f["6N!p+8VJ`%0o&BOP#p(*3J3%?'JCCJ8;Z
%CXWMJ8n)ai\5Bg4A`eD>.%"gk*q:r4.#'M?ck?5]Ye]MM2)KQh>#9BA9Ua*bQ&j/,](PAll*G7[p1$U60ajOCX6_06b[e1BU?'\N
%0=p&ViB:(8jl6_]IlDW>nD,44O6\=NQ-'WB`J^!(+JoP5;@ZK#nN9/@ji-#Y0TOimKQYdVKXI6$+$b"#RLi\B*fB/b%.RSc:[]>=
%km)is$3Lb",G74qD[Qu60P^ZFZh__Wr7s\*$iGheOCTEP;f;q!ZU&UX`Xk(J!UJ-\8=+H,%'Dq::ClI)NY=\8T:L`XL0J_A9f$BK
%g!]![H?i@tcX-iC%%]qFTsfB/'8nmH:8[XU-s/`^N@?I\f2'dtO1^C\*uskrkVNCJ#5uI+m_MF1_AjPKl-Ycb3U3'jXAk$#fET+Q
%2qE;:>TQ4P3IQWBi1Qm*2IQq37U1j;M!agU/5P4>Wb_Eh?[";)HmnQ^iqm0ljrChk's'UWUDuaVO(OjH:FgrDlHdAjV,L\'E",@m
%di;NDBVbG<QboL.$-@4_;aJa3Y^ihU0kH+N=V5Je373H52_d5Z]B^64L^e`2U1,5+peYHg:7JN,H*MY>ftcO^e,YgaLR3^)p_"3A
%QaDV`Q@)4L-9lo*Y$p4?6ZN)hJ%LooH<0X!lNE3@m+n*W19ZCEBb"aI&FHi4?<kb&[Pm5cSBDL@0a#060";,_r9I2h-'+b0j>nW;
%>b?!t%^A5Ym5@>F!H@d9Ei_P]LgqC!n%oI+N-JH_YlRiF1.$fN"MZ_8RWPJK-UO_;/B#TWh6eBsAqScPW/;&$X)RGpi!/;A[I`+Y
%-@nDWILZu?cJFKcH07GAh7%eIq%fTAV&=(Ko@6O'Ja[!#$_O8k5k#$e0Tb_eZYeTfKA;00q<;]7ms6qgYjJ@ScYkV-:U7g_-EAbC
%q;pkqp3fSRr:8=W$XHK@H2%2fs/uD\obrc!:</36m,p$FLmRZb_5S4a.Zl==HFNh]Zp1]/^5%[3CcaQ]ai69)':D`FZA=V_l_`@E
%?,R[6>!=+>d#Da_s&4)9X8q1?qA>R4Dc*2R76k:uOTI6iPMi1bC(^q#@WqMXE2TK;C3Rc?Q&S7>_qXW-:7ZfIgl`F&KIY4mQ_4M*
%=oa5'1W_/0;,R'>,9eUT>i]lM*+0=3?\JQ^8i_>i$_]#<";Q`9q$':t^a<#%./eJ%mUZM+NU:k(U^;6m80472m`7I&k&_c#>164V
%7]dU%!t=ec.`(P)G;jo")L!sL\L'XddYg:heA:)=;qXI?Fa%*P'$FB_Z>ZKd`"F85a1PRU3$&fEGos[jgb%+k@:O<Xm_unX=\;7U
%41/q;"F,+eU0pgNRHWXH/5;`@QB$J*M)QdKdYb]\@<hO:U(iD]N*8`/Yr_%?6r;QbLC!X?]7(:\Nt_#8MlUG:U4LG>HJNDYO*+a&
%Ark7gSM'SgdZ>]H!66,CVZ8>Wq0M$T@mQ75g,"gP5ig2J'oEZ2*%l"<UP`ra?&'G'A:9b*'%"::Q^]gLI/V\/^JP'_J3$e;HW_Iq
%%nCC$BBaaDEc2;3h75qM![s[dQL;#\93-HP:UE']4@"`LgfSLb.H/6^&YhgE-9_JF4!WZ#lC`]2lq'(5#VBg-S)A!i7+hX__bR*j
%72`EtN,4DUL$hGiEQa,8%kT2n?L3R"n)?C^3LlRi<-[c6-kB%W9qS;rE:8qlacQ0l<9%&:bcgSnf8.3fWZrV,`0l5rMigWG*NG2P
%Qln8lJZL",:g7`_fS=5rKkro4e).%4N!G0XS;.:U/H!%gn;8oI`k-ng$b2*F_r2s]1J?LMS_Hp1_9*F:>\lTmRR08/(4dlmN$80e
%,ME5WZ_P[!,_W[>5GR>J5RcMbIgqp?<_.90gY(sBf\SN`)mG+kDVN-fdDJ/+2ND9`(R-b5E.$@[9RPtMc7"4ZSddrZQq'odG7@@f
%#"XPeA+.'%-)LS*iJ=)$\r2o]A.QFhX4*2APIRm*0@n4o;(:5C^FpHgh9pQ)Bt:.FfQSRdqhtC]P!-:\F$XX-7ut%'E.h3FIhWs)
%F$nh3.hIm(9b^M#N3hVfN.X&j)WWE/U'T7&;PaSPL84&QO_3G%rVNYb;0iti5.Hg9,TA;JjR./<>-[@InpJGs]/+\nqeW&ML\"\$
%AO!Gip[PoYBTCcC&?"oKbksq0*MJ7a7b/?B@hL`ANTF!8@brnIYOrbCLamf._O@@,UR/#4<@_UWD3ml^?@c=c;"gHEK2#?Gasu4/
%`eI&:2c2^UecYLrYcdZhF`%3]G(Ff+MttN?^5i`IC@-=kH8oD5\pZH=#qis:\s`Z!_W]-R[Q6cGj`\52$V3d-jQ!B:qXpp/,Q!k?
%p[r6@X.R/\M^heUr&8iu#c=4B\E`<mr#YHV>!V`U@t==Dj/^_.0tQ9YDS+jMp"N-GM$//GYC5%m[;bm7rpAabmT/5(_V8;75:rM;
%:+dPen46IJ(jVb.."]EDAdI.t_VDPQ#@fPDC6$q=?G)/0+h("sMlV37"EJe"icV3@5j,q<W-D0!,\[Zn6l0L?&:RRYM!)&?J0Q?u
%-X>P8UD-X1g`5'RX9Af52UXQ)fp1D&-$5<-C;nSgOj/^):LugO5G7lh&&@il&T\VB+/,Nu?l)LK"XP!*]+3QB<Ee:Y2+g_NQ)`Ch
%'=S^@<s`'HD+eZJGD][UDTW,OKW_?b,n>Nj.V:k7*-f'O*b#c.L1Jq19q>1n]'j=pFVR^!^i7B8U_F/0ngkAACXEbf0j1MI`,][`
%eBNS6&J(qVM73acbcuLQ2H^3GlEZ7KB@fkP7_LB#EFil`>K7.TAqL#m`V'J\6!t\Of?_%SO;a(l^R1Fpb!i$J\'^ULd:pAd@C::7
%>C7q4SJ\3Q\sjC"L;b=Nh&ouG6rlg2;1+/m,ta7m1HOp7@reQ7GSXe7iLKFSL5lf8,*GJreT_k:O;*Q^$%$OKUD>/'-p4OOIEW=V
%]4:V4n%*JT%uW]`I\#Q0&[NG>VP*-/@)5i8nc4rJN:Y5TL6<pe@X7!K;+]&!9.qItEJfS&rkb0`MN\::72>:-Kb#TJk"HI_oHQ88
%_8-4pSkbl]'KO.,:C.0<Y=eeL+D!+ud\73SdLF`EI1R8XNpVgId6>dR42&#)Y3EZ]4uH%0Qhc^ODQUaV,_:9"pP;k:*0tDrgibNe
%jiaS5gtkomqERVIg7;T;=XjSS--mgML#BU'.k#5CX]7jF=Yj.]j"*aS>[[XbDsLlGW)<$^JZcHFi]cCV*JCMoAD2Z2(a>G(:DM/0
%4I]FJ6[T[(lemCj=<3W;(Z9"UMpQQ5Ip<m?@TbCq3+O.hNdetrSku&:fN7*Y4\MkP0_c\TE%-7%WLS>LL,q4@-?-qn?Y2$SX/LAu
%10HE2&@NT7rXerp$4qV![m"[u,C,IS0$4$8Ege.OG2N$-BqI8H#&f+:AaZ]@>37].:q>n8UAb%c$-GA*o/W1)]9PXTqaPNoY#PS3
%lgqUtG]A?]W-/!-Ba,V]>oWZ%OJ2TuU0BandcGG+j$4<;$<;oV_8.71@_]8\?:"r7]#W&>D"gmVnLs#?]4\01q71o9#M3Zo1-BRj
%:!nLYQu[Ml;0EHDFc4VM@f_S*l1a#0U,lJB0_oD1=q0M+&u;C.ZRGX"-s2%#NHn>FBlb'YZ4^5h<a].[#Y<K.aA#'KWkFBeM1o@[
%_CEk#UZt%--5"WMpaS]`D"I;0`7-C23^Mo_jYSfN",\f69T#(+RWrkI$[;n#RPB$Zp9a?9Q3373o>M)I%u"8_<Z5t0&N^m,OY-]f
%Q:6'6M&B;n>dS"mRY[GW*8)iJY]`*(3:/!IiM.9Q?C+H!f!S,gAo+)3QTo>mTL<kf$^e%??cVE!+pUm>l=/#&@'0>kjenEHq@*=M
%k<cmDqB^f^@Ajm&o?UJo-%/.%0.X@Pp@Fr*9lRDhr31R04,uG<k79N!e[**H[\'Zd^WiJa*V*%0-:'p'/9O+&>PA">3dLbpI[Rga
%5JHk2cX%aX?oUp!;$;UYA?Q:$@4J6*p+ooo0`I[.`_j2l/o;jTa68jMM;*n6BpK:0/\@BY6n)_^9Vc*SBQ8T2QAE=)c:[Ng_g>*o
%lU4L=;.F+:B>gfT<$nd>IcZq#'6e8eWt:X""4`7nEQ#<rasC#&Wfih^p@hf:6q<B-q,22LY-U>a6&#1;>D+cX14qAZn?aWS5.?sO
%<5c;ZL\s?_q_$ERI^ZTqeW-eidQuN/!@VYC@3-mN>7$Wu4Ef)[M.aRkJli0dLD9ek8:=S"&E0BF?_2jW:SJU<OgocJh&B>HTcaF2
%,8!H5.LQu=EJljJDNbKUQUAP^/%__^2acF(5Am_VJr;$d];i`99NOP`iL-0lUb`X:o@=!l"F!?=I/'\2GLbdY)4u@.MLFe"q(=)L
%I/3EZp`=7Mb>RSX2_B.b\-s>s5d[I&mX`GD#pEHIH1!.K7,Rp9$9E5oO$:D##\QuPD!'g%<,JRO6t[XhZ0KU`5Pbf>1fT>1k/^h-
%PSoQg2O-W189:63>KV(fclt1iqY)Z4VTlG<&frO;_[:HlA+gVX#id<E?'"!<J4o(:*Ii]t>h><R8k+A^N+Gu?@tqfkTO$5cPqb>s
%9ai]3,*btld_-Y>>r(M#SBKk'm,e[-itbh`-hU>]%PZLfk_j1gf8Al.R18D_0Y]uK=ZOAH9p0[g"96P"m"3Nt>.JH`6.<]R^$]:k
%j@]"lQ#1R=0cGcVFYp,Q#_a#d>hAC>lU$N;@Qe@eHa"'0NVJo27-,)f"qX.s-cnZUe<_[]a=++A?gd(G(TMY*+B('1YR#42crIct
%m8%IXBAaFm$*Y70e[8!"DBDGb._1>"rb#Loah-a/%B=/EF>%:_YqBgKR[4Q$KW=:s\.Ep)@O;G*ojrNE2\6,$EX9N$=eHY9djoAD
%n3i'_*hb:=3[heml7@p@("1h<SQKlJp_GNI%.jT"@D2r0`q9p-,\bg2Zdjq%[DA*/l]+7]-phI$P#,#!$F"Zm4h,7Y"Z(<kc9^'s
%ZhfQs_HF#]<iS`D/of]iUJs^t%9Q.uXd"E1:b)]Yk1H7>MCA=?b_^D0qYPAk"k-=*Pe(5<HGdWrJc,315-KAJXY*[L=,DmH`:,%G
%.QT[?qNT%@$GU--[j/kJ[7Z[BK.O4anO[srgfn"spQ\&p]F%tbFR?:hr,639jUSs)5c5)N]D0<e;HQ_%VEW^-Q?Y_\l0*@Ph:,g'
%)d6VV=+(YUW1gVAmNC)9EXB]RH)K.`A>S@.3.6<LQr3e"T=7##WI,1N"W/14n8)f2io8u+U^BQ9>(c_[H+.C%!Td,>TFhE6P[<0H
%SE;]/QGt4OOLNTTH2&fM;:9"T+CKGEDP0'DUR-us:bhee!.<pREMQ)>NZ]*%#&6.g&$bB:RQk:/e'.%k.3FhV#=SC:h?@D*4OmF,
%dTYRAg&.U$-i4J]7S062@uA@T"f4bn)36q#SjJ0cN[E0G9r.O/puliV\tF)N:.RSip<kS//_u2;"._G\L_4B"r<a_X)aOWu)#o/b
%X2*V#Zn,PKBQ?h4ACMKB[-!:pBjO5\7+[kuT(D1*WIW0rSW*C_$@Gj"I=`OiD1hQ>#4DS;9P/6ODiTuc3#Hg8UI^g-R/7aYg6e-.
%)V;06%l!+Z!/W'iPeTXE^uf,,7L[>:^k+jD6>:)<Y*Y60!F%P*3sWu)cpC*(8<<s_-"4D.@8bomG97N@X2h)!d1KS_F4E0cK2`bF
%JGH-COe[R:"GuGAF:*>%DS//(YgZ\eo!51dC"Vr,I3Ue*1gS^)S:4O3&Plu!_):&d!+u>?hfuDXL=0i-gA:G--Ai@ILJ#%jdI`-_
%'NI?E5]I'"O4+D7i_,&JN^RdehJ_[%:3b-k/b0haHANse(oPNL9WG8=+:dM8=uC0/C4U>82(jDiUYZ#-oT>W-8^S]/%d%tX#s!^:
%g`sDU''Ha0U5n7Q0bsS=:7W\`,ToXdp52K6o')FCRpeAW?u?TT4/7oi1=sL\e&/29+1F!1a>C?BA.YVOe(*F,((B*3f^9^n<sl>F
%8,K"6[POlSlqI,cL0Ss:3T(`$?][_`%#+dl$4i//bZQ4,7#s/insW-4Ms&g#&T-[G;3Gd4&_EPnH)9siaA6a);r?J[8:m^nMp@5s
%?k`R9`[C(M@nb<))?u1BlZJ)IW(2uqXB/O?ZP98V[47ou\`$Fil^6Xh%bQ_?^jI<`I#MF!l!G[X[5J&heAJ7d'a5<7p*d2;j$="a
%K>pW/Ug:,51WS:h2+h/%`QueV:3*]G>!q%X2`-Ks&N0$Wb>FT$6TjG@qlZKI%JSXsAk>q$)gH%onYa7`>eDr3kELIf2`1b6>3r93
%dVYQW;B2/o*"XAS@DL5Blj%dmPqR`Aa7W:D"Ir!CVf\&EH+/#X@fOu?.:2kEar+1mbH>q@kMVj_(UA2YG.13p5Z>7S'.20ABA\?(
%KJUH.A1l@PHPM[VG#]$hMaplK>T=3ZF?A7f59)"h?KZ3L;6\<09s@?oKbTql$:^$7OiTQ.Vm^Hkb+ht0"5H?+,Kees7.Y"!"3E0(
%^]k5<]4dR>L!";!j$B>$0'$jK^3Y_N!>F)&l]*Y%p*2*Y-9UoKa!Fls$+pR""m9?[\W!F()9S`)?*g:VdqsH_Z/*uS"QRV[+PqJM
%FFHIN1/XSilc9V&Re86H4g4Q#[[.o[gO+59DXr7EGOPJgD>qk]][N)Sd[ih1Wp6gcfXm<iiR/r".XcqgTEsG8;D*=j*deq<5u$*j
%LnRtMTXQo:F\Q+6LZkf(O<ls-2/IGLKQcjFo&R^3ADT;_ZjE<gVDKDR5mZCS&UI/<CO;)IflSs,:#/E@]fip6E8B*j4\ZgBbU'cb
%fkDRZqJ`5QDLmmI8oe!h9Y9IMk&oDiADd3b.6Y4jS+DJD16#&>a]68ti^O2FbHkGdL)N5r?4pn/n%qJ;/in%#pT&bLcPob1Jet6n
%LA8=UVXt2BcF)L8rWhZG&<4Hm*CFXAgRQJg\'2scXq$1bd'#_e)o6%7HWe9^&^Oiu4ERl$6a"QTN\5kFVA)N:RW1=HM*1'&;9n*'
%+'/V[>Um7C[9)7"fPI+q)-cp"j3\LeK8MTAc@jsKq-s3g+IlCT+$\h;AXh72hdphm5c0(I'%VtH&J.n7,mWO.V&E^Cn0+#P3Zb+W
%(laW+Yps5BMd*It%%F5%#52E'^e_)V*nS"5h4@L]k%#>XVME1c49/&6FoO:nLo`V>lh\]AR:#)XmNXpo-:o2U9F@JQ#:72sro$F3
%aRURk3Cre"P\\G)ZF7]EJ4+A-+lp1X#Ju7NSC4jUYd(VXg'Z#CFYYeT-<F`O#fSH4$H5-I6Lq06MU.,n)B(Q)1SmmG1If*&!9ZGM
%XN=.:?]IdNEcADe*'S+oC;s:??!,&%AJIq>X@L2_bH<7a5WK+CMI.A2`O1V8PMHWk-CW_Qjdcn%P:RY^fLN`d6qO#aB)MHR[f0Y:
%7]F^E@;N'P`LrfF@pCbWdc@<o#stm*!JOo(5:!/?QLN6I_%en3acu#A[(MPBWJr&K:m#"U=h:B$0eO^C:Wb7-NSiT.PbF1P>6D`g
%\#ud.;XjCf2+.U(/GH9epR4k<CI:Sa^l:h%_:R^%*F$s6M,G_\^;5:U<;7N2HIFG-R&.4M;E\VP*\U`c6?(ZB'e<fPGbYg?,SHd8
%QpCH0AuJ[S/<+['d'9:VoF?#J\5Zr1+_o14O[[JpSX"JqDl0<g/K=hG)_kU13YA'6LgE[Cn4>NK"@M5.*J;$*+@DA\^mEcW5;C7o
%'jpPMlsO+iWgP[cmTC"'%Wc#E0t2rJTn>I:KJpRk:2<X>'1I("/GH#ggU-:DaDsFnMV,FW9A%%hbaYG"[aTBp\-!mT,H:D;Pu$$f
%]#WrISl[Lb1).39ZgM/'AhBP<_H_)=<h7!Yc$I$,(;T`:(XP2l,++#3NDFMJ4A<Af%]JTNRuWjqO0hLAL,6F?p_Nu:HN:!%.<&/?
%%WtNa7l4PV2NSe,LJ&kT"A9kD6iA3$P)a;B)rJ26[IiNRh=Lc_7.%'n8ch4G>#Yp'^@/@HcG$sp.#t%-P'clWlub9/;5m;"-%Q14
%O[a%?CZZ2[jn`HKkEF@^YgM=XE%.K]*Q<Kdqc10WK?L*mlq:Uu^d>e[m#F_sh)3d99A'g=iJlK4ee=`eZ)e*>5<6Q2VR>4-TJRFj
%ADK)IDd;A,qsO$Fp**CAMte[c4E0'd1Ip$TFbf.WEI6El`^/R4pQ91]7'74*_n/@_<cL8er1%X#rbqf_#V>PaW_]>rfW2R;o^^q<
%H2$iHn:$^JYPmVKK!V6@mu9mBE'I^SMXn9s&!;mi0iuIKKt'1AJ*?p:S:j;H-Em&/,e-HQ@ETu3<$m'_HBH*1L%&FI24+j)Sed?i
%Y5[&#+gBn8)4SfXg`'^DV`F'2dS%TIO0mq!C^Z(FBPf(jo;5fFXH]k:Ru043%&&!7A"[5_6cp30-4&i1Z(fTPef%@R_hTj0$$F1[
%TWWc:6ipQ&5n"m-V'7aO7Rt-:>gT4j*XD#`&o_$4&X+"HVT6\r)KEN_*nRq6(Qj3_JK<rokQm$nO_NL\cJ``$:A/+.,);9*LcQ%Y
%fQo:q:fXs]F80:%NYU/.6<YUS(Rmj(-9QKkpE!1+1DHTJ[nXg(b"&4jj2*Ghf94&ER[0`JeN>IQF7MjX!gY9C.lOFf+6P4GoNNhg
%*ULkMKGYAN'h9s+:c-X6Rd,XEc/`2YRa;;c4AMk!DHkG9pA6)30/+j,RAJ80*\&YFK0mqB(o;9<n\-L=;M:E([pJbe:XuuM2,Q^"
%4.]tY'34iL"MR3sqkep"pYGn%V2UAcEL9gr1*:a+qE-\!+-S_(e\4BV+%)6dAr&peC_eg$$e"%.!<Z/M<h?ruUkf&447t-7nd8J.
%OIb?EAl_upLPI1Z1BO<S)X%8Xq4L8Bdm\%(:!fQQVi%D78([=/n*[O.D9bm.&>uSP1]7OQDgD2+_^\f;3;*A!k4Y`?!`9fSHA,`K
%`bFqA*cu4M,9hH'n?T)Yf1!i>n=PX?mWu*P.n!3EX4a'hLJ&>kn?Ug#D9#(J_U+OGC6c6#G<lG=LZ/S=,WUUP7.=fVWuZILbmkPJ
%#AmaSpkm`E.nG,Hh>,ME\G>d+jO!S$./g!j@)TG,GV0Y9`m(X3Mlf[lZ<T>VNjIE&KC\$OF=^MUWsc9$WN`'B*u6pdrL3R+cDYd4
%^rT-W/&kuta`\s2Wgm/\0b4$MEJ=VGb*>4/CtaE*F-OpM6Q\M*re&iMbn/(tnno&Ik#>[>Kc^rXoC;q<EB(3WdM[j+$TnE<*idUM
%_pi)**!3U/0M.sehu2o3'&*aM!ZS#qGJBLQ8*2Gc(#2RH.rM;`iQ8B8.m%@4=J+7$F):8D![eX'E>7URp"Soq"6W8&4s\7^mh6nt
%IQ`_gMPXO%ZWGFH%`b2_X(Lfe\@r)C3TB%HdI^hJkX&,YD0/J!Eh0naVUWtf8rP^emGM<C#.Vf:UE%19m,VVi@#l,Yc?^LFqFm7M
%,qVKZ=)^%j_+3eRLpq58;e&rOA%N:hB3S3A3.(:khNtbg?qC[e7Kg:?eUhM&MMu\\RJLXT.+s5d#Vd6uLEgC*Y_=eU_!6s)I79@/
%*TkTg%lBK]Dg?C!g8m[Y,H&ir510GIg\H6c3Bl59P\s\2CD;USaR+F2-OWa!X:d?"i_&CI6!f5[aL6M@<%(@!n"4X"\*25qjO4l?
%s6`_42KRa["nZV/U'Bp7IQi27^.8)K3dUbsnNp<@Dr1F5-MNVq6G@-f85fD6Z'3VakJ&4W&Un1tS[VaEo*XHWXMjJiidr<c3U7B'
%s5kO/-n-Sbh*@5AWf$MJS'_!C<L2'J*Dh(9=[np=C*\V>fO"[71sg!;_FGd>F.]@87>Ac6o!GjACj2%6S[Bh9$LXo4d%c9(S+ZEh
%b"QBHQiY8[Pd^H>O*g%*fQ=kWat:V.)Gp-5iUA2:ZO-PN(HqBAQ9-DHW1]IqKl0\5.fmgT=TIKDK$>R#qKZmu3*]DT",ag6],f$H
%8t_=A2&B[]QTT$7+&+K,WaEO]K91@VhG8d7?#1of`F!0];7d@4.FfYk!J($V@`1(/;`gY'5Ud>IdC+Tp`Cu0I'E]]5A'R`EH\.qk
%o_R*AUDQ<L*&XfX(r<GJi!Q>L4qrAjJd%i%!q!#9;od(cf)4T\UcQW^b1?oASUlAl1-an=U[>Z46RTPp=]5G2pt*XU7G(q3^rqs*
%g/AaF9(3N,UI8@i?Ti=o#c[l)UA<2X!Xce7n8342VWK]pOZh*60ZWfkphLP'nA]LsV3Ik@l;TGg"me1Xk!!CjbML;JpZ1"UmR2SI
%^sjO9pn5nW_;JOX1+,c*.<5H;F,6Y`1\)6R;7)G^BaO9[hRQMlI"'lT3>1ghZ9I^g_0"?nEXgA0=id/(0JbjrN!9TPEhnSR9CG.)
%<4T2R7`nM&:Y,e0Y)(>>2(<#VG=4>eSQsT$g7-V.N2bTI6+^MD6'$eO1!iU?0Bo,?B>'$-5XF!^(SS3=0,@A&ar4^l$<-]"NpR@o
%7l\[]W_d]sW&o,^&9CR&WdQ\'D;AL/:uHW:)7i+nT,ptf+O0d_6>=Z)E\a>c9:\P?c,6&]Wnd?):"=rQGoBi0EnuCq>XQZ&o/#9,
%@CVPVZ$@!Zd]c>,BZ5:n4jd&`ILuo$hi36<.*r-e?mN"k!Y-<)6O>)RFe`fTV7u@@dX%KWdMT\!Uj&97Ns0hYUN]>W+p:(\AauH*
%VW9'<l`T!;<7cjX(T\?R#\8\(FR98GBhe30+-II)Yn`1<IAd8mpH\aGA*>k%<,V/I*+]Y`\]`b\_TEp5-CO&Z0Z&32-3JoqLY:^P
%3@-sF(e)p%EQ;fh'i0qV"uF]SN:\?pH?HS3S/l'I.ErLm<`f6J\L(caG<uYW7r\f_GY*u2!**Wgi<[FY9[.+:?8V0b\9GQn7<H#Z
%9`qrjVYGR5D#i7Ur!$96ifTuaT*W)$E!*;cX]_kAME<`F+b'AMnl6!*CqR[M[gW_F/'h>m][@R*Oi#d?)Ecai6%MA@+t\>EFN_(L
%O-tQDN_#gJHSROnW![f6_[Y=-:_LNS.qf6_kLiN_HC#PMK>X<_*'8MC"O-Qe9/2%dWe5F!]7d"i#f:`Y%Xl;3bQ71&`BT$drElV2
%G6jq\nu<HX]Zb1=4W)Um-hpf8[Nf`shnAL2bV:87g"djmTGtP8I@7fro$69?>4oShQb0qdmH)_Kp8aZaRuc0HoB*NkrSLq#3[aDG
%Z!+6f'P6.+50A7M7rJ5poG0^<6uQMp%eLP8&A?%+HAgfTDaBI\5uraIN0"YqJ[eHmZg)kuQ4c\?6Ss)C`0mcbX:i=l$JO3=A64,H
%?^(H`na,#Oh[c`Ug4bpcO3(R[^ONZfYW\V.S*us*D;Hr<k2!d:.Pm^Q"$$b&]uGeoHTB*p/ujSl29I&;=51pf>\78GMgfu[aW4-C
%iFhnn9r$/=nG2kD'N'V#*ESH6m<*Aco@;7#ai>@6Hi9<,l2PnjY^jh98ljEj&;h+j<S5#BSnr.nq7rT8;gg->8-6eIo8e+?If4ga
%rqZ$=)2P)p`M0oVSM?\e\KZL,&*Q?'@Tp1l=fRZRe9fr'9]TR!%R?Oj=hGjFg]%%"OTNDuo4[M5eL:4)=+fP7Bf7eL5O6Q*CJ\u"
%#\C\Bf5XU-IL`U;;4&Tb&(N"S&>NEM0OF)V/cX(B[H/^)q)>u'C]d.Q!E/$TeU%=cW-oTKFg5M"$RD8I-gb-6-jiaa'*p3[o(L,Y
%VZ65+i/h.RpkM9arpIbDpO36W[K+AEq/<.:K>CofV3^_M6QpW%<(!@"]D11.d1c/.a=NPGa8;b6k0;1oX)6t-IBr4dMX\QPng2!&
%`7*)a![(o%bOK>F,#r$t<*Z]C=kqnC+ol!Gj*f[3o4mTq4#tc=cRNG.1f@!![2cPX_X$E7g\ZX!-QaLU5_S*.`["ki("EkPB^o/N
%e+R._)Nk88ICS2-C/Dn1F0k+h)cQ2piQr?NGsG+j&K_KpJAK!VqJ+o%]7W10&[3@,der"8*`TB2GO6WG>>#?r3Le(WB5I.<pfa%,
%8:-IZSS*h<Gb,L0j#lVE*8mg.G5]IR[/W)R\!gL,i&A@,&@'*W9@'s]kbt>0BDSpAm65EoQ#lmFBA3Pt6jS1<hW>o0demIdh?gl%
%S\Jr9+Z0fL>_G^"J-<PlNNM8/U*d!36l15:MCVf?lN7II:r/<(HIeOuYInZNDr+9fp[?g<<!]9B4P*t@&aT+_JIN%ncpK+X6\e3$
%<2iFZ]*FZ+i?(Kh+X*_Ilc8n"s5qSG\fp7o[BE8dVD,:hV?8S>5@m#`Q_LFh#WTQJ=l<PBE=uaF5oqr5f!sZqaCT305MimJQ`gTL
%oGW8;[AOQt'"=kpqSs1_DH"c*MM77Jaao*M=_rpcTYk4lqMOT0KRY-q@;c'hhtGs?gA9ZA2>jma'*iA4pfm!(^KRrBYcum)k3l@Z
%oK'8UUM_m>3Wb((,*==gg)o)KRo^O2HDTNlC/S^,KGnL%YPa?'&3*XVh\"P&.8FUU\3?;-=_PZRb#K3PiQ(hms74DKYF>',D'J"<
%dia"0fIXCd87tuK1=V_s8eM\GF7^t7*jNdSKt!^K]&%N?%6r^YrAUpgp<]T6Y$GS:]%E;9aU/G@A",[dIIFepa1FQM4P,!mX&6tI
%&ZnG1FI+7?o&G/QJ+IFH/1LT0mioOE>AA3Yf>%9Np3?8jg]&a;\l#0u<-AOn6)lWj`A>7C@R4>&)Qg-)&98*We,T+`CNKHXs&#`4
%@dh4tg]<ur'W$>QW3eJ2+?s6#<7md^LNqNArNGu4E[dh*)g1b=3eS-3$P_rcJD?PZ9'"Yr(9^<n:JO9ZSjnQoNaULdfWTMpqS`pt
%2f[g>j%^6cOr&Q=m5!*F!`n]5r@onqiY$6Z2Y%j9lZ)C5q/_<BhL54?a8bVT-2^Ob_V_1XLf3G?ESkeM4T<=b7'Cm,I?]"g4DcOc
%^`i:D;JRqUj"?AQ-@A]1]bW![ZN!OJ,gk4CT44WM,*W&B;LKDf:OAEdr/'7s6rr8\ruY>i@T%NY9O-p;44NDB==0;(j^0X(?d=<l
%BU$[':3I^rH)28kWiiH851'>4D=M2ipNKD0I8$QIY*WVMTb!8Xbd%mFVC6EZ!U!M74!C@a1,TdImmQM])2Ya:0Vqf@I/Fg5[.-eq
%OEtL0TYCp1]>"5<E:2)&r]?.C?Y89em=4r@5HKS3ZgoL;2i=252?,L.mS%fIS@PX&'B&cNYBFnrBgH:[a!><884:BEB'67;<NIZu
%0&L2$,5GAn\MXb]'LXQ"pru"q^iR]?nB^JSBDCP&BO?="T4L6K3WV0\38S:h\anO+V'm+CnHb-$1UufB@3et9"bf-<5?%[F*&iOu
%i;psiSCiTlkK#A#U/\JU<Mo-&Z%5TjhM@dkUK$H4TU2gmd<o9D067lSOnaWUXrEspq6Q_s+`Y)-pTgS.HN[QA`OTOb+5\XU#(#BI
%d6VK*qKAJA4/nX_P_7o6-$tf?b<=Q36BkH4HBP):fcj!Z[<Api-GXW?%CR1##,C.uZ?nRVD83mAH9R9tRE36?/0hhq"uLt-1>Spg
%i8WRVj2(dH1V1[tVom.PqkLiAM$M`pH:Y`JE]Jd_GpqV?1dr0[\$<_6P!HHtCV!')[Ds^L*)&Ee]5Q8l":@deH\]K1M/=nm[\[t6
%4^D818`=AgG#G-B>[P\r#j?l"s,bl"jN4=P`Zj7:5c>!0B,u:]YslKt0Fa^3M<NB2<^@+m*63,!9/KKLBGT1[q+MM=jk&P"_C0Q?
%.B;kD6C_a'2jGM',&\AY=>,cC7g(:VUIV_*GJk;NLA5)g=JbYa[\j/K8soeSO\o17D[dF1*H_M[?]VR6Yi)JA>(TIR/<qFA\9]"G
%W"NJG&-Hp8<aq-SNoS6+M0c<X2CR(lGU^E37u;QoJR=5lS^]+\kfL_;EpajH_pt_..Mo`ca0:?-%)<gI6-(JBBB)$(#Gg"4b@_!j
%0iD)V5#+Is\8.$/Jh^5[CS<0G4ecCO6Rs>@%msS[e#NOE!>=V=A<(U)@O=m9oV#Ejq7OZrk_G8K+l5WmXgrQcGe7V+l,)m"MeR(O
%(FE?Dh#'tM@,'YZ+!Km:rQR0)9j+Yh$34.%Gk$]@R*:KXr+EBE)I=pkp-?4Yqs'28(b`m8:Vll%TfPd)dBS:a9t@(jAra*K_]DX;
%H$F/41UQF!!16u]Z"t\uAl>l=>\%$te,>Xd#56Vj=E>ne=5pqX7E4LDK6,2H:1P;il)pm9Arp08H:_"di(lZ<,=o'I8<^E=;]I?e
%.="S``=C@V(\XU:5WehQPs7Y*:OE*rO%hteWCZg]f".LN?$%3;`kbQI_JqomGTCAFc$Gk77Q!f!FE$J6je:LPU"O)!\\CKZ*0@"2
%*.jcd-a:U2S?QGNH2\[oD&q2fAgm8"FnCQ'#cX[oe_4[-Sda`>*J*(,P1U@*#;oE*MhF[\Fe/@lq7ND;M$i[sE'JA_&MAbfaU*.$
%/+j0_-=":P%6WQI.PURf-Efpsc6)17=m*9m,7+F#KQ-BO:I%R`!aK9P6"DC!ll:T"9*!N%M+BtD*0DgbPjJaULNB6i"?P:\Q+;5<
%'(`Kd86;o$@9Cf/DM;_np^gqblaqU/:aZ=T#?%G=4ne%lG!LdG?fu^F$>;DO4A=\t9QGV%^MA_YC[,hb`Xf"b]JTLpgjN!,%spt+
%l!Km5f`0;Vs6.?Y$@VL/nGVCfX6jNVNl.L*U]+sGUX2kn&"["8Xh'YHZEZ-N4e^0MP0*V]-%Jn-(dTAT^W+`O6F2UBaJ79!mL6*7
%T3\scC&iuQ]0>tMi?KmsL9FW"[[/$tm<<dC<Za!gAe^h%WL#5LX&FA0n3$q8^$P((X,ClZ@WE%SC&DP,DYr.>FIdY7S)M;\3;020
%gZW&Yo)JBlZgF=DdH\XEdY6HTkjR'ej2Kl6_E5D0AI,=O_&t6KO]8>TU@U$]"_;s"!ndAjS#_cAN`Z+=5AC/`+2L]PQ#t$TVrj\K
%pl'X-I:1s_BF2uHH?s=)+]b>cKm#fZS2"BkKG+d_gAdXE`bu#WBehPe9&a/CYc[YpP/pY2oXEr\I_a<cr8"G`K-9UBpLZs&p23ID
%++M`<hn7ib"]A@#LCH"N>*h!j]\b#_T/iH$'n-njW3mq,#ZPlt.4mGJ-iDeFe3Er.rP*`phi+J5B+<gm[6f#[)in.JAsCn&B32)-
%2:=sq@i$$(f<t4='m+Wrb!5m$q7h3gh[6B`B+IG',];ihr6Xc/%Mq5![m@E"7=]\D)8^`-e!#T<>XdA/rPtP;s#9E@>EMqXb9U+&
%s-Ou-kC/IiI3:B4<IVo->3EKCZG:AHjk$OXa966[EBjGurP*`ph[H\t].dr'K"Cf1Nn#mD?4+^CA%JC;^CS<%;ZW(II]uP8l\rcG
%CJTEW8c+#/I_QV)KsoUEo?03U'=n`05FX&A2"$NgM#'k;jpqh>oA4Tos!m24+0C7WEX$pX?1WR;HG:2$KjrBUIAWXi'S1Qn(tVM9
%Rr/04V^JjMobon),Z<l)o$dTu:YPilp\W51.bO[DPcAOn?Pa?i+/DNCVa)!S>"FCAe5I=pk4=k?*D8J6.qEs`q#8=+[/W)RpKR/f
%ph>:d4/pLK)lNF_C17!SkJ[M/m"b=#0>CIQ30N0kkHu=iZ+$&YmJkH.rDo._'<,FN2cRZ'_V>4;GH\HLLu1N+Rjg6kET>e;GKcIB
%5ZIhLhREKN0DCrU<_\.230Pd^Mb>]PAg.0;mb0;RbZ]0p:[b8r+U!Tp<uR93aG6[jp;`d^s#7.U>Hq4'Q)OC1#Q79hlQm4:,7Ti(
%3f(7d%K#EC_80IHO4UK3N'7Ohc&Y)'rbl-3\)OORf9Uk%^Ir;2H<ZqRfnU<:^LAXO&9h.l1kM)paS32(FHb8SplkFOo)4"nlAD\f
%F96K8hD/h!&3UUiW\6W[KC#`%W+Lj`_IO;aZUH4I^?B$jpW<E3rP*Wmh[7%`dNsbJG!5j^PP*6]!eP,2;aAg7pY]RXqn9sNZ]Dh^
%DogLOMi5KBpAa:Rr\aJOIpL&4NUL[07A:T[/,suSMet[&YDGf_E!'dZeJXM1,XN_ADkr%XQ5EfuOLn(^ps%^%e,ot@9:o07"[jF'
%JTd`oceri2.39gA.#H]=Hu[WtUuGn$f`XC$/?lZhFC$`)+u;V>Rd>+(I%*[V18I^A%2>WE`n[)S%cgIe9U\-$ANhXto2-s(D"]\@
%=<TIii7`)UV$oprNF+UX11gei/Vo$/LnZ:X.4QZ%m2Y%:otd_M&n]!8Dp\e^T7k*7EX[+5`+kB$bI<KOTlC/0ft,ecFlJgVqN-RK
%C;<FmO@9EY$6COSCW1fo*5.Mo4+eq-'?52`VmKj.Po8unnYaaAZYqB\NDQs'X8A$9c5WUF/?5ciDDYYg_n.4W"TeB,#XB+4CoLsZ
%b>++j5n`g)5'eoXdn%YDod>/aX"\bh<%&tC5_8U8EJ9UVa.Wp(Yd5P"4.BgO&h.VXS]=*=7]n+b>[mN8)-H0cUpg\cp90ZK(aKnM
%VMc^K'6/CChR=g42BaS%i_2XHLaYS&^%RoUY2ue'$V\6*@8[X%iE(RR(=ePCC>-sl*]nJa"I<:t&lF6;[L"L`A04*^Ug5P4/q.ti
%0U07Ah9tXM(s.td[OoEtZK9MGQLokV`),'Ffc[B"knAjhM@C(]J[nN$_UpZ0lT@j3/1E:(1P`t4kS7bQQMGb2\O2N6XSQ'Q2DB>,
%96a@I&\B;U_0[WYVX@'\1mIg$N\BtSOR4;cpRD>'WacR^<_=*t)e^V#Qf/D,S1M0#Bae,VK-5RAJM9hO;(m]m3Sc)D(b5(kMj3jW
%.JP(VP:-ZPW1JJqaCTF+=T[ho^#@9\0F4g>agW2dMJ/V[GolKdU6?*fZL*%Q<+A<3MU\P>j$so6'eM\f%)Y_irgqK\7i.Y&$E7.h
%`2+1Q"$o`SITC(!W+;06T?MCU>9P1Q>LHB1G/K0JA@`ZM.8EO]Ea#]i`8npg!q<Ki$ho%gT3G$F)I3*_T))i$/hH+MFV^I-<8U-^
%=*J5+$;?X%@7d+p%;/EJSeI,S9@-:.6%gjQXDIiIYQekr<D@5AV+FWX;H,sk6c.V9,t%>B+dZ%aMZR$oCE!_^m3*QH^0%1+6Fk;*
%;?fcqSdu[B,_*-6]&m5D`$f>t7=1h3D*Bn5leJ<JBZ(-%ce=K^s)^J#iX"4"_Pt.OKbF>XMT\WI]YW<5,*bgfT:<4QGSNqMUS<WE
%O[a4)ThlM'ZF$j8Eo)24=W02dSOb#[e1G<4-CQo=KS\gIE]Q+\@:qBg-5jp'T1L(YY/&e/OPj?gnZ[3/lPro"]!Jld[[Ei*<,Qj'
%1m.rtoD'0V,D(SiR3=mQ*e7^8M+srW0KVWbnU[RGBL1uDE$-iJ9`M4AS)H=gP[-c"C@3o;)E8p_qEUdb%J^:37E1>(@X-J=amft6
%bHa\c`3TJ'8Kn$CP`%2>(f"(od_kVqiOc6of7Y;L3t.TtM`stf2'eD\)(GLDo'4FiN@&pXDS9m-C0X?/94dP_]bgKekM\2+X/:sm
%laakRq(pTbftf>J:*Qme<4@DO2G#nmDmk46Xl^L4/%OBOZ-$?I`qAQ=p,sB9Be;Gr.ctdHK^U60[cbOMk,Xu4-Ejn(pYp+9li)`d
%@T=O?ne$r(Ct(-#inQTl&qIb_OQ<"87_.p;.p_ikMjH0A\^olHE!D5m9j1-6aJMgeP4",uC@'&TNa(qF2bAFSq;]2@V^HpgP&K(?
%AWO4R1g>k_msl#s,`_7K4"cm?WD6qr->7KS%eCs>dY@caYGVP^@5a7]c%J9TfL#eM6!f9:BPu*Hl4u@Rn3*[YG-mnBa:r/RiFM34
%`R`/'CEd/`k/Vok^TQ_1c8d9_0e;&;2"=`8gW3X/DIJ94B3e-EJ[?&rW>h/A+V69c.C'-F8.9X-$pZ_]>0*sk'Co6-DkCJC#53+^
%D+gtg^Z5silfM?h'CJjs/Sn>>jWH,j0#Y3G5[`dWX,4?XR&+K(+:G!<rN!Kt@!;h@47%8hV..G^Ro41pl--(Ji^D#[Fd6G=mBZNU
%/9$/uYetC8rZ/gG`DoX,gDZ[.7u.r6NZomDY^_'<;X8=@lZBRESp@4.5!fcQa^W9Y:31i2RLpsbolPDRi!cA-d)[Cq/82]Sr@kdZ
%"9mgp5*7m&EMV`h=N+83)*ok]0Wt/gZ*NrIZ4R>MMTmE8Bfmts^1jV:[fS_3!m#`!*)STZeYNpRk'fIsL()dh=NU+J)7V)`5!5p$
%-=VsP#D(`,;G/B$"DT9O7@W%O+b8f\Za^i$qq<s9*PUdjJK@,+.72laM#0;=O18dkT<Ze7e_JN9O@jZCqr6:\'`Da;=4brXA%bKA
%#AABHUc5j+i9/4'2/?/4O[[/g,8`@-8T-XraN#Nnc#ZgC5/]/j&`gJoql3YO0K3o>1:K7@Q[*iUjSL2-@juB%"pqH0iO>^KFto&K
%iWP"%Lj7m)<9[IP5A3LIX1Q10#Ss_5^;kuVBF!NXCCWo6\[2@)bta?&$6$l5iqW,*g,LfB4Ta(0gNbA=@H(:,_f^ZQ\g5d+WIM(5
%&eS20Q-V=n?eHhGPnZl':_+36mF)GhjLQ"6U2SF?YBN%tZiZ8r+I9bI!1u4.r9Qa_NgFEF<<q?W;4FI_in"H$5'W;$QI9(d'#.j5
%>b9LF4fTjuDaqOHSlSh7HJ)$bd+qRHE5!C5f`G?e**6K/Ri,J+blim$E0Vd>PNT"h;XG&eCEnG%l/dMESp?f8#@nfi%@K#V-5M;D
%a<c_`_3Mn@U8<`6F[&JZYN?&P4:L$f\g?]a*59j0gQ1(R3,<&c__\9\*a7\ATao>XNr1s-4]@+s!Cb(\PQ%'n"'q<hQS2rRh1mgO
%O*%p('S(IBPG3nS+uZF`=pV#^OYZD&P7g;n3>LAC$C[7QdI+4(?g/L<-VddU/>W+pOIY_]?f=fbqa>Trppg3%I1h?s4>,oDCWi^(
%5)QeafIks"0+FF#Q;WgLRpVY%D&unakDue,_oF.W[D'h?Z'm(grUa:Yj$FF%b`4Dm0<mMXM:MF+p$T3FGAf+gbb7l&F7(CFX/$p:
%Gku"K*e$lFV66F7O#8L)Ho:`(4eM^-?QHhL]O0mI]>&L[s*8&NP=c3OBY!b-qtB3R))6mpjB6@m&,-[=)-+1aZc6M2<k=1kZE#\B
%N6<oO@kb'gBeq!F,8DjaJSV"`A'[T.ZF78BTS1#@;soZ#.6&pN;$/B&[prt?)$2'me3_S7ZUe>Z`Po=&e"&ckX\ZhbTKSafK:B:F
%'jkgn#6JZ#LT)h4h-GsKf,_Cl5XaS>,6sN<B0U]X\dU)nPdB&r8R2n+K\n;D1Ks0cBkG*g/me=%X]VRX8I;5m/Bjk=N8'c529RP"
%CtaE#Z:>H.BE-25pluC0b.*5dNa4QYb3RR'P/12oRqEbZ`<R:*DoKRX>"TQtG>*OCZ/V64#U/)mPNj'rWANF%cCO=\gu9;ickB82
%m6ld44H6BA]1YWnGtO]em#M4fNfEDPHA,mMa!FRW&2!.Mk0oi(C?/&i0W1A^?Y6Q.B9Z2>c)4p+`FQ>SXA+_@\R60;KDa%5`TK,L
%Zc\)oSS2;%E?a+A,+sj]db$DXe>DJJf5RLINl`cZ+agh:OV5`54Oq0VY&r6m;5C9+X24>![o^pH-!!(3oWZoqPritG@KVH*g-isC
%95Rn,QmO@HNlUCG9b;_;l5CQh)5nlHUP/+VqJ'm(6t[c:%cKqt$+=m)H,(_UC2"F'^V6EnA?CaKYd,N3KtFfj-S]2o^\'9NbEpP&
%BaLg!B=San)No@!"[A5G-ia8%=1r(SMXE;id#s)cD!lj_lH?l?k`)Mj;4?uBn-7fAe`7Q6dsE(R/sZi\_D9FV%q`0)QWfun"2tpD
%6=cW04O0&"o78Lt;s:5e_`-=N)o^!3_bC7KI*Y;Z7+]"U?mr&.%oO8(+TI>H3N\33`,NYH,s:04.af2Y4EV+F6?aNM?ALUKq(Y0)
%5G1jc8km8b8NmG3U[q$#Bp+.=\Cca`gmL"^#BUsp\<XqOhE&38&9\F;Pr7Q0-!TUpe$;u/BL10eRArGXo>sEms'jR`Ri"cq^9RJi
%qlTXG?S$A[Y=Ll-dOsDU=nZn'J`[Sn?gl9TXq?qlE?Rn>!-#5LMieSD'Ir(3l("H``TL$j[A1+/'PUOI)'t7f5utVK:2Le!ZU2ea
%Hk5o@et)<\F=**S0($W_A"uH1c(AdiD*_r=;ZRE,-lic2.%FgCO^+bW<9XE%R7E5hoH&\IQo"QVN8BI=K=OH"9=D;(mF:Y1=3c*e
%r=G4hFd8rV0qk7qfXr?6#QWhhc2\2H'ocP7Xq$C_RGbk>aojjQmOSZJ7:%b>MIH%/mJr8n+:Y1m`\?!]"`W`2a6?_alEE68f5Lqt
%Y/8LCpW\<6L9Kka#;ARZ8>$SaW%@FuEcY&^p=PfhkiMd+h,67VLPekDc$Yd@l<u(BX!gs4WcaroP6E+q,'<O?Pg%p^;jsC^4H>Bl
%`7!jA][Ua)iQq"V"SH!]l8npJn>Xu:'/Ac\]Ya**,tc6Foi^>,-u_fn'*9I'+Q^C1e+a%%>f@05kV^IB%5B($E1['m6p@C@WU;6[
%aJP1uq\^nU\c:ES:"1Ok/o!#;mX3[Fc#)7"'oB]MYQc?Pr+H^4'r?@#:VU`'_p]4Hj5[%?3KF$cjMU\=qJEr.H8g,ad$o7Z6d=4I
%:URohOB3?^jDsh,$\>'1G$/V:dV/FKEg1JUIVYQ.GIstW%`-jnmcFLI/-kusB`.nf/V[rb+Db^9==*6Ik;GIFG[%ACh2P_=s5SHT
%^3fYt)L:/<Y5bf%>[,FPh!0h;a(88U<).u\8<c0mVO*FUXM'?Tn_Mu>XR"QeD>A',,8\:*<ko6/OhMaG/C0)X`iF0)>LtD'nPqg2
%^&O.[Ms'Uc8AG?tYcEp<FK#2EY+p1]F2W&:%b,NHT;G,.+4b`tZ[4XO*MNX"]H2E&et7-E+E.GOhfX4Bj4W.'H9Cn0h>OsT]ADP.
%Du9?J#i89"P*ZNF1-W;,S51Z2\rHlVr7(9/0KhLD>D]"L(B8&c9Z+C.a)297$@c=2/`QV4?0>&8<T.][2E`./>He%^c!>8XLU[50
%2[&k;ME/$iBoCsNLQIm<rX`+G>JKCBBjF.NQVqsrZE*j!X:OWX\*a%9+k<d-ljpUsKP1*p`Bal.(J47P,!#10l)YYS$<"rKL*Z`'
%B&el"]PZ72PWu<5\i.%EHPj>C#a>QDaUSQKUnZd7-%-PQ=O(/!@4Ip,;OKc+2B0t@Ee%#e,]sAPrsTbcl*OE(HPo\r"sFJ.%n^gF
%"o>NBSeYDnG1(lQD:];_qEV1:oTSCKIQDrGY^5]UKJEo.QcSs-,q5:V,fC;i>.4=Q5Q@V:GbDEb2<RsePsRd36ks=Wc1(3UVnikn
%[BGLDUU%2&d(Z<0FbA&&^1hdUOOul;%`g'Rp[cAHqT2riMU[nL/DtZK_/6Uf[0f\$0Mg_uG4u)7?TFIN&X@`.h7l>@6/?6j$-fFo
%`#l5GUL"6iq90p7H0Z7Gj))Eu^jJTS?L6(_V:Pg[Fc,;hW7,AO(m8t4Fa%*;3FT-%L#^*>jXR/emD^\'<$LW"TeGK2/f6<!$:/L-
%)nG*@%Ik<M"%POK9WNF'!`o[Kq;Z>(nN^3"($4F%/C?s/8Ff1M(J-rP1IONemfr?C,m<`Q?A])=L?aDGfARh+NK%QG\e:qT-`lgU
%5:slYX>;VlMZO2!LVghNs&Uf;QWqN\r.FrhF\mcPDq^0UQ;&\L-JRffD&9D+3$6^)T-R>]YK1&<i$mMNiduV`J%TXM%r=T*-M:o<
%N=R[6=0-dQRQrDs?a`!_$lSG=bT/<>KiNm^2Q%>iRs*hC<35A*/YA$h.M!fFVX'IG0?r42(SFY_Kh8^L+K(;u@$8m^VTOA:XIiR&
%S<3q0YVXh*YNH3GC0k2=Zr&3jIMVJp1[<tF@#F$EDFrjSrpdGQGT`E,.Js]=1kZZi?l?4&Fd:a/<=&:J?ojqICp&Mh]$5G83Q/hC
%^2M_b#81(arOng8WTJb"'Sg*f__G8^jsHk)(\,*hKE`i+fr*@%+Od2ZqPN(n@$ZnU*5CIVo?S4'*_,gEXG!YX&E16lTmHF:%b68H
%.t,n7IR@_Y"2LhFFa,%N"(l$V!7Dsi6@;[J41d<KN1;N5bHHR3c\0V_)VlM)#]($:!JQ/[VfA@:10OilnV:kqXq-#5'Q*M?UZh#r
%=rSo&s*3:54DmQY6uXpgAFVXuh3lTN:Zc-O(Wn%e-n_ROL-H!\E_?G54;X@Ya4kcI"VR7:d]!fR8ZDL-3.h[HTO<1-2lQT_TM!`C
%L^*e#f1RWU=46Ae]mm\32]gV\1iX+$Z0Dc;e4`L&Wc0(%fI9OV<,\0JOT+>W`"FG*]>A)ChR:%?;/kXMaUj0V[>?g)N,It5dqX9E
%?,!@jbP:+'X7<P4Z+)Z.MtNN`>e@9OLfFY9+T]u6G_1s6*))JD+\8)a#[PX49tT.!4lSYZI#_%)o!dp3SH]'m6S+h*/W(r])%cmu
%q7s=H-]i>?iK!o2h=uN5Y[c=H#D.reO*;7"/h*aibN"[".@I42X(srV[Mf5TA6/e\^UP;Pb&F<*f-"e4<RZE3$n+'FF"541KDP5\
%gNL@2PjJ1s195n*r'n&8U1BFbXq1O'1:t?]0Ojeb1W#6:"KU=XgP-`1',4KXU+1g9V"OEaPcRB]3e90b*8EQ[o,u35Qd,5+&=Te8
%!!A<$(A1m?^uj5(,Fq(o_YQ.%GMfWW)&+;P,%up;NKmCI[U`qQ_[W&.LXf9eNJ131ntT/29Ak-;4c/q/BdBkK]41^:QdbaDEOks4
%i9i2EGkD<A]L-1Woj!<AXYT^"9nLR2GK-#'*+TA?j#qp"`YqV@[<nj_b34_+Ih=g;6Sr?QG/Hi`Y)-(g5E??RY\I56.G*IL`$t:(
%e/Jo"h70V?hqXcsR[n>(kbI#mcFqR&N]CQjD2[jt4EO41(#O;Y&UWlE1t:RJEXae<N2.Wp.7R:fX^bgho-Yas`IA]&&V&T5\/RPQ
%TgjE("C%Y*kaF>0$b#KfFZh4OiOF2uV2'=c7d'(6k;C"s=+@mH@l8L1jqcgferGJ=9"?"dC_-5\3UUhV>e0]WB7P7+\GX)_cl%Wo
%KtpSLi:)`h@8.p1VVL.pEt`q8ksDQJ<ca\Ca-aiYhI_W0#]+N?ppBEYld'K*,t:hFb1.d:jdB:t4T$s_2se`$]RP1@bAQdn9E0nn
%1H@n0f.;M_!W@;sgEu$pn/Kk[>e7T(jO^hm&*TLFmq`(g_MmbQ1[hGO9?%tT(W5+4ZW!iXZldMfHI`P@+Ng*G,Ubl:n$:F\oe>CK
%)u\E#-S==qC.B]8ANX8Uq&sKc`K$0Wm+mh,VskN^Ag8"9F1scb2'R`r;#[6g5QU(r2C#gf.t7BmR?HM9p:mYP'#:`UnU?a/gJcCU
%cLu_[e=q-[Q_D8l.K0U"BYU:4A,,H[mf492=E4-8@O+*84.i/>1GZg[ne5B-_o'3dO.U[+1FQPm4'?qqPh64W:bUW,pBr,8j]t+T
%1-D24n"0#s,0U^1AMjMq;"#cHD"T[;J(@Wp#eN9RTTun5L`j\bX)8pJ#P+5\^5%]m"iHtaHk7upI(*e\^TQgb0CtbFpM@I1nU/$I
%k2Vm(,_#CRT(1F5HsS<k]G`H,r`E%$6ff%BT0p4lg0UrVGL43uq=TZN$b-o5qRiGMZC<uMq";+(CI=2p)sdFn(V?W7cfpKF680B"
%kcP4aWl%s8bG\Si%a34/^OJogfTco,Afo%K#IX'*:Ml\&]\UiL;ldKuB-/bdpK6q4iQ%!$YBDl%AfTZDr8Q`V6]tFu'VKsT@\sDd
%.*!ar*YL])ndK9Hbbp+,<+UBS$64/@0db\sOpQlBKock3Ls3LN-@q.&'K/2X\$B/VM_bB7`/Hs!P5h<#i%UX<r0gNSR?AL$@A?(`
%U#@g1OsJ%dlaC::$11`L?DYCuL?l\+.RalLLL7,^g$?eigTVRba*`0$.(3c;kuAI$meM*YcR<:IRD\@V;@hAPqK6al%`HdQP[D$<
%^7R'2?DFU`q/P\.r5JUT5GMgL;&B&O=+?Ul/]IR"KEOj1[lL%8!$"2rUK_MX[TiKN!<D7diTG[G!#p>l6^%RiFQU$VHQ].Deh/HG
%,LSH4)[2NET10)+\A]lThHs-@auHm#*VLj^`Bd7gBO:;jr.B:@VQ5][5hgSD4W\fAcptRJ\U;*,k;DjXqt5B@Fn-NAHVNmIgl"[l
%k&\W4AU8hDX_@BLJ&K\-gVRHe>pI,P3gh4U,*L`5n+C*Y5tpD7N;Q'Rjo\),gk=>oac0V;gV1_,=bZ_Bdlra+IC+6ep9X_<gIb&.
%8LNs"UfNWDbG2Q6HS"":jo*[*D=/bNpu6e=Vh@S=cO+\@Gj(mqZhfnlA&#1gAkp"@Kb^I';8W)Kimig@h!fUp\pmqP!s1^Cc*@$O
%OeqrcQO+W:=L;mLg&Br6Q:$=G=*(k8q:paJGOTM<HAslPqu*+DO'ZDRC3?M.N+?N@5208*L,f=IVV8c=oJ.>o[;4O]hsTXBJS%Nn
%*kg8ShC,!n]64,bNW@nuY3$e&k@e,OX+PV;f5&$Ehj4Yj4k..!,jcir9"ZgnXk;pV9"[s-Qo\E431N0(iKt5,osXjEgTEJgjcj(4
%M8@*G#G@O\<'H;dmP*T5_&l<N.-Y;I>Ls6/&WrAgj8JMVdBC;3dd<g$s#AEmEoTk.'*l$'jq$cKVY-d<U<l`F<Jc&=?/8QT.O?<g
%]P[Brq[Lg3dJn1j;@dR/7WE=>.Z]n@-D7ieB9NS/``X@fOS]E)?BrFV`c%=EbAN6o./i2MPb*>/YS#^DG_(36g$6EEoHUC@bdBk`
%ih!0:ouGg1s0COuW;-tQMO@l8)HZ76=/GKl*.A;s"a;5iB92AF'9ukTT^*QpGh;6<FF"Rgq1lNI7&k2g-h5N"m&pn7,sMf>d637l
%XOhk"nZLEWm'K<icLDDu8.V`/J\>FgI#O;6!EVSDK6lo%cgd'eji?+6s0Bt9Lfki":J(6Y?d!bs0*K=ViX_^3nsQ#c]$7@pGcbmR
%c.E<Hc?b&&<Cs'NN<CqAG<E*E]q53P2ZSE_T\fFh%LXG2C(p/EHk/f6C,m?cpO/BC,]Wh+][jBkqntFh;#Y$2L&cjD6acG)Xo[!$
%/0B67h\1Ot<GmjL-!qjqGuM`J6P>US0I7n<H51f*C6mH!HoCP,XJX%rH5\l($b,S2JaX(#eGTI@i.)uu*IGN&\3*4'i3<U8**E"(
%i6WN:R89/s50"XUf]3G7\"S[aX@`/!r$2eH+d)ZkpuYAYAk7r;h2S)a*.b0Ro9L=DMQga.7(P1s\*#:6kt9dXf,#2oBl<g%p[C^Z
%aJ#?k@"R-+c<S;tCQaWoriZ.aJ;<C4dsQVaJHUm"kkrig;/f-QMg\?_(NZOB4rTRZSpT)\*cpu=eNKCGs$'kgrpstK$fsB,pSupL
%)9ZZr^MD%8lh($3pPRg7nal^^n@6>Xmep`MJ:2E!c;-7UARm,*pFYQdO:B/Mi2&oOlI*+hpRiNs/C+2m0#f*4HSkQ&mAKR=:G\Zk
%FFJQp$2nEQl/h0ap>*o9GP(aro0%;]Dr1G"9,EglHW!Ro_OSe]C3m-PD\670$2tY_/!?ob>#b0s\S;]+LGYOAJFtR$TZ1Pr0b7\K
%R$8S!c6,6CkknB^e7H-u#S4u2%A,rO[c[%#%?0Yl,D$_c'!BKqR.,Ej\SDZuf?/CdhQU-lJLVdc_fa`^\W,;Te.Lmji:Z)\0G[&&
%+sg[kZ[]Bl*K7beZ+U95fCP[B=C$FD*1>k)V>Vb+aFWiQ(ZY,3&+QO@IZ7;TXRZ1%rP`P_D*J(or:gW_K$@^-Pj<[)1mdG)EL"cg
%,:(iHk/,ReZ;^2Kh$V(=RhtYk8>'T!.a2Pg:8sGRD_H$L2C%QPIsLY6DYXj)P_k_,A8PqukK&7M$!r\f$Gd'<q:MZBF+5jG0gGtM
%4t[S"]u;8--UV4pbB``IQ1sA8`I:Ukh2Z.62)4Q45%a<?]>o$NYOZrj&$n^;]_Z+u]aWH)qY&"u<OPuor>?YlqYjl`%:F\AcTg)R
%Sq4I@e1:l?T^`CTeVg!X<A:*B(1iqH>O%lWg<$70DX)*:*b1Rh$KD%>3,Hd_5+6m:G9>VWD+F=0hQN8X6.%PVfZu`tj7c[B]>OB(
%+0TiHqdpiI`Hgrp+>b"jBr";cE+\BDVhfOb8KpKIX][@pf<q3^:B%J(lA(TnL#5^dY-?J!Jl\Q%NH$2[dud)t*.#!=Q5?T#1+iS9
%>V.ndmXJ&4I?ha6fJ7h$+d.(i-V3OjfKU0^JnQ]^;5sWCjVje1W]$/Dm0>n2ST,gh_.]l)\3E@d!R*r//DZ6f1N1f>L#p.Wk$9j8
%MZLsB;gO"s],Fm'W?4AN`,K8G3ouN\fFN')>d.S13.VcrB[+78qJEC1=#9C@j>,S*`9&9om]Ye6oISk#X'\H*DcsKaq\;;=-3o8"
%QPW]N-+iI=0g&:11Hb7`R/>J[C"2jd-c-8JjKJ$YCo?Oq*oBkd83k/cl^(CGPTTJ0SeEE4;TO#`26lG*!C@3>K\gRi_DF[bD#)7;
%?U_Ogk3M**+4LZ;Sc>u4?L3%/pka2VXkamVc\J6RRO'cbkT6hiN:+m$5fD&^,R!R[LDP*r]_4>L1eRj1GRc6'(ocq^c1MC-:N*p&
%2m.(qK<Co@p@tf9Yig19.610+*?q=$O8PX&=*<`*Ra9*Z4iqf?Z(.tUPUE7:[?4?X2U<_K#b,f9q\c_F&(Dn;VCNnP.^)6`qSH[r
%9B[2h[GpUtCu;;bIcb,Xhn=@fq>4/U?Zq6l=+>$7015EbJ*s#<]`p%crXOu`mJ^S@*Urp<T._/GbB.uHYkQpufo@r=p5\n"]D&[[
%g#_r2IQ8&7D#aEsUZEe-GDgGf8Yi9*f1DUg=5Rjj;[TPaI?G!m3R&A8`&M%[qdN'E?uC[62`l^dDs=5+HJ*IAH?Di$Rkk](lMu?I
%o>ULg^l*X8p<i0s^"s17>8Q4&\&Ui`rupMA!d5r1fS9j]plAY[1nWk23-'c^ck!YeLKoAi$&'&WAe.4B0tI`!`roC*1E</Ac@:tJ
%3l;*]HV6`I/8cWTP-2LC3>eFtU>N6[ZUt^H%]9g.3uKGqQC,e)$kp[0%*5DWf>tJB;s6qJX]&1.AXk?;gF`##BKb!h@%Jc6RA48<
%5?tYbocis?d>6kb,-rU?nXpD4+*@*P!F*o6moJ$`)RM5N%+oqqnk^S=TuJ@a`O&V]Q8WNsEfOcEKtA6``'45LIZK(@e#;1E$@q3;
%V7*A#7(fNa+2q);[gKUELm8!5VpJSdol\4iAV*5aDR7E'CnB7^CS[2/>O$Ytl`+J2L!q?1CHg"f)E%XCCI$CSafZ3m4+_W<+.EGA
%9,W+UDS_;[!)\MT.IY)@35NQ"R.mBXKOqT7bX\iQimQ/BL(7%gMU.D+2PHBIJe6Q%lVGj#.P5I.Uu,+5c>@;B0P?1&-U&q4(/M%.
%KSGL:PCG;'j)=l#Fn:Xb\[iW8?Hl;aq[4_-n\s./W&1WWI.[V88O\:HZhY)$8jPt-ZLlWpU8sB99ebE^GrbE+F/u`g,b$f.grUA#
%B22;t>5#6LSEkeJ!Y%^%Lq2<HnQdnI,?\Bm%KeM0PaO/F+N/inE'NN?XO\U3ZIns,##WsR'X#tap0]Lol`)\-rFVoN.W4Oj/uj!d
%AMl#f_u\3L2t;p!?)_Fl9_0;\TW#C)(!:[\!';X:]!mH<5pp*p''D^sX`(qu?,ZQ+o*27i@sY-t;d?t,A3a^m'N-jF9K[d8?tSeS
%UuFn7SoB'tb?j>tU,dG"RQXY4.QGq&=:fXks4,s&CP+d2*4tm(M`o=#DqDS*XGmL]"_]m?H[fqA/#'R:pAZc6CK`8lP3hlOr?'mn
%2hETt^E]&5b6S4WdR&<.P[:a#R6@9K:La=:r#@M:2tufGq51$h1a)!j\kh-=2a7o5T4Z-4CSLHS)mDtFh5Hhsg29H7V,$3S7L)PB
%#Jf^jT)qQ=j9?dB)Oa(@T>Djn8WkKcqtT6>K*:<76Yjer7i%A:3VgP"=+TX+]HkF++/4%#W8WL'iLHHi&[Y4kBqQ6\?MJ?U#h4Vm
%Nf?I^"h/hXRB<[(dh3j;L4Zpmml>'%0fKX[Puepan7rVH7FdBf>ooVBAh#Zu_c%)B/L'.*.RRj8n&M.#WL*SuR?K=.WoY@c2hao"
%BL@m)dO\Q"1-d,\+"nuGTVh75e,=O>#H#^MYn'b*?)Eb5I"eI*OUKqk?b&.h!*QkdfS*ab2.;#,KnhB2GH;7rQV>iiVleAU0jMa1
%'<P;EWO,M_M(j#<!^9^<8E!ZN:I8b(N-Q^@3"P>i`R*Rgn>i2?W.gcBf0P+s?I=uI4A?lqEQY<b'Ht."NZ-c8j8W'KZ>l2nF<0Jg
%Q7\.p5Nk:aZS?Y3I.1:2"m>=?<HX0J2)<Y4-<](0;*6s4_BAeK88H2JWR9h(Z3LL@I*akl6KaJ`;,K%`=f^JeOK[c/pUW"d,lJWg
%Mb8-5Jk,:CSL>up$nkSgLWYWdQY#<@[SDf4#QRGe4_C!efTXIH/%#%5Th8;5d#9C,,uubBl9L8M+.#qH?l0$o@?qcTSGJB_GM[]r
%1%8)Y&o0TAkCe.HEIqGIE)]bue'1edeV8@=QQ*=lMk6d,-6U]Ec;8Z"VYT^43aa\$er]M$XL"_>#bMQ(a/k]IKM&d=]A@8SB3iVb
%<7)OI`Nrr7=?"kEgN!P2Mo1qHb.ZDr*=T@GFJsi%`[R0>4V+k:nIIo!L3UdMEp20[?@gHjoa)^Gqk1'2!%3fQW5_fH#/G6TEU(04
%Bcc[>LPgs@9oZ;%&QHQ*=_dP2O@AgMP%d9^8p%f3AccjB"q(6^?4DSuUsljb@21<nGNgcEKIRXVUo%_I51HAR6XZJpV$XT9N\.X_
%pu]&5$BP'(R8ArnZRTp+QN:mEI>&8*bL)4)$&eM&0/@[?mSfHQbue&RW_bl:"b\%L$oJQO$J.uSIk6J@r;MbC[WBS;"d^",m\IY"
%3ch_uNPItP=kZXH_YW%2]SZe3hP.e03OkiH)Fd7Vna0Jj<`g0AEZHW6@i@3qQngQ$UNG=k.j9YE2jgGJ":hPk&7c%Z^I73!Sh*[e
%U==]jGD!c=qW9Vn+7bQU]q9`\<K!XNH02b2]jgFKeeUCSWTR".#n>\:W\U;4P*bk%"ChRUC8>Fl$7rH41OQR?!;[8Z>d0ZiN9n(D
%_-H)a2P^0F!0,r<%gn.QR563S`*ST6LNC\q7%#G=cY.9%BC`u7^aO4C!kSrC2\jV9O,3YGbUt)_iU(/1.BhV3'I.bk7?W[,mEOr5
%$456-M@SXJ(_hGBP?mu\c?:t!MM7.\'j0qMjH(t`>N&Q?ZNuZXlX)m:]'j*6+RB.4dq^+HbirgbeYGq\/o\P%-,2,l,lLi5;j;nE
%0$[f>QI4g\eR9ro>CeJ'=.TY@?8[cu`*F`N6]kT@Q8"l$P,?KV^G]tU8Pa$_Jbnd^7+fFt+2l>R)3BdN"*QsXqkt)Q'9)70P2uC7
%k67Z36Zn0eM0/d>Z6-Y`j-_1!$;chELH=E5Zlurl!QFGD#4,071UBDQkpR'_\WUTf/O#r.1K0E7#sM#)F`DQ]1DA_L9!ZNZZDhV?
%lWTNGW?C@Ij4u/qCid=ik5o5s*T3]0&TEFV&f<Hg6jYXaVsF9]2&j9o-&Tqm3n<6B"[TMoMq=bY6Leh3313/Nc.=:W4N2-5q.6-d
%2^ulCO"a/]2;2YV@B%aG[8:7tkKP&hA5@'$US`t[V27s?&mT8G6RgS%'L#Mc8d;5P;p0IYRb.ZtE1!luKi!CKp&ep+@k!EVRWoJJ
%e*MnGYVm\(!.XgDW,2X;homC6aEIn*Zj%P.hT.DR?6S3,#Y.fVSmb;B=jj_g1T=3(]\,3I'>\4ATZU)PF^=V@"EU3Nq<gB+*N;\K
%Y6,4$%eKl,T70`/FVKPiBSKH4Pli-K,uBj;Ia$-KD-;-<+n4#O3?0i?a>M59\ohZ5\VmMF6beIkeln:<id.D6@1l^(?r%?`67HbU
%M:Kcq4'=3A@:QE\l2DOokR+(%ML5P^P^sIbI7'7&6^M2Drf<+ellr-QY>P=d8GL:fctc#UL'OUK[fmjXjo@cfRLY8F(Z<XSmVsf<
%ppNPn-1JDH!_uhD!sh@lE.t;Y?oZiTWjSs*Qc8R'nJJHRI3oYgJ(N"OMUHWL-7LrRcUF'm/_1WT5.?AHi0^<>Q8KPeo]ig=;=(VA
%jQc)qVOr/tR5?6"Am735GLW#H*SU/aB.#o@=ceC\(UIg$nLXDQB,sEL=\W9j.N=\d"0)_h/Z8F_!_`]VVjos^K6?*lZ8E^u&+$Vj
%9QFWU@#/Z7+ffM/@]&f!G<^l%d@5Kl9b*E\%+epDGTnYNX7+PH<j-HTqLMWZ6r#=GH0I$Kp7_-9Y_[*WVNb<2'`'B';c<+eUF^f9
%5i6Hs5Vj\jDE\P_VD"EV:[b(V-b%3e8Ks+fV(1B!V$f?\.SP^H"X6'R'Dj7_IE]_PkhF\VCK!LP(8+`Q+T+jR]o,e[P#Oa_9W[A`
%OJ!H`!]OUo4.2UAP#MX2'alc`M/n"V`NZu1f<;)GKikgDhjWr:p'NG\95\$?VB-.%K.<-VD)f66XfMTSLKRcL`M\<(&Fis>_`tQc
%_qWc1#JI/7NB3&HVd<d6HSI/\RG-#LIhsP&a"fZA8CX]#gEh-?0.?_5<Q(q/.6:3nN40*^o^Xnp^Y18=kUl5skI5lhXX6%u"e$3`
%`qnIQ,,E4S9BaY\ZB<3ILVs1@2)/hM&T*'n4-\jap81(<=fD5?r4>nL53c::r?Pj3MWh7X$d@[H^d6sAZtI@E(,Y3LC/j2\'h80E
%/_p>BDu50ieTF=e^H6H$K<AWeSXd\an@\U'\r`a<.gk2S>+ZB[UW/B>>)%X]qMf2IbCPkg9B8#jVSCiig<N\7Fl-uu5kK\.i&n4\
%]He.61Oh]<Kcm1XeN/.bUc@R82mFu)*E,en;WkV>e\p><[QisoVZ$G+`Xc$!k5de93!)^X^[&,lA]!OQ?3j%IU*R]OTo>1%/8b)h
%-ETWiE*h).m7i)W1K7ZLheNK`F^6H$aA\$j1/UmWXN:c+R+&(eW]SXa-mq4S3jc'AJD^(/^Y1P>lhjLf#kXf`'V-%F!FaaUY*iE*
%TQ`)UY%VS#2."`U10q(-O*E[Ee:Ig:<7Sq!m16eJ8btN.+]qk^/m0#=G2gg4?,VfQ,sbcRV4H`/%Dn/pd\r1J8jpk'r7XT3FV*N:
%f\>9V#@4D-b2U1b-rP#8EZRL_N@p)>!]#YU+i?aeiJ=:d5U2oU9>IMSnKP`+$7dn&F#ng*g\ts>&0c4^hk+QZ;:k)2p!@8*<B]EB
%62@\)^qb:(3@>gBBSX?WOu:DbQ+$EQ]c64hh=Lq896CA0he<cjL>*lVTNE5*d:po<0]QBi0uLQ/B24`*&9cWF3RRXi^+"^l,A?Xb
%Du50iSL5oNI]lPLjb)U)^;r?gc\@?\KIW9eg:PE_ZPSibCJh/-apsQH3OM'2gWo(c]7`_aoIi`Us.E#`[N^k>4F57Uh^"[Sb2kLo
%(#aa,nV04:&*%e3PR9&[',m^/_T)!K]h2r9Nka3:"%TLkdL_S_qnC7X/eXd)buL3CoQBF:./I-A0NXa`(fJE1@Fg^ah<YB;64f.V
%<t?/j-)LY8oCC<S2Xe<C_TM"+3F\pNTFr#9><<a\L0D<%MT$kL1#j#>piU@j:`P06<-"@YTKG/hUYQDGecjYmXS:;nKHu*[NO=>)
%<]esI)n(&72Ou]Q1rcBPO<Fs10N!j#`!m0Rf<W7k<Q.aqV.-)7oT3lQbiP!6o?hg5+=c0>4DD7&8F81tYaI;/-"EUm_-sKjA(0>[
%a\5*mMWdbZC,&7=FDR<,"+:?1XU>NEB!%R*'^AlMP<A-pD!_.mPF76-LI3,V(UJK[XD<&PV34qklPM&lIhaOLl6N5_p)E;@KD7dt
%N/cYcGVXmf7E4,AgPmHcquKm'N&JI%co1OtQd.-$N]OjNl^%h*2j(*kP\1]0RuQ6rGVTqQf"D\r#dVt6$Fk;Q+?[NgOt>l"cL_a%
%F]aeq'WFIIOsR2/eOk1)bl5P%R/du'aPnm>[=-`-UP05R@]sZXlWOd\o9Y\aN`dGH#0<`1"Y5VJD9`'u,FOW*mYcmTqR/pe$Tj(.
%=9cG`6nOHp0`['\BNpuT*`[537Z1^m5m4/FG(8Lc9L.BGc<_^#O!nQOi'2"010hJP@@+WW?I$//6=6(-po<%d&LHDHXl%e0M+9;q
%roJqD#opZMZ>`'P`$s4C;@`d<e?21fGjM?!)#rm`!-`(sabO-\gXbXc4G/JsPOFq/_X*_8)8?]MZZ&^0<U'rhSugUuE'8qekp406
%qtaNMHc]05A+q@B^VggdhA%d2\\8/$FYYqqJ=JW`VU`K\HqJnp,ep/EGt6c#Aq/g^90Bo;pm/Kl:^'[,6TH_cH(g=1:dC;/,.G%k
%Q#nd\U0[kC,Gg^5P7>OOmS>re_2>5;HV>m2;@XJj<X=8BS;$!bqeGne#o8eaR$,rKE$U\(bEAE[6riYlC\K3J[j7j3T:2<lB[+*K
%/sTWj30Ys,QH1h0qV*D9$:$?7Q:$H#TN1YCG(8LK$Yoc4Q;<JYrr+P(@_Alo;/<A^I9&6YXk]-j^,[P<lFqsBcYm$o5OjsAV4aX0
%/d-3b$Gt=nK9T3lH!Ze0/9Hb`CbJUR@YGYI;W6]+jtop/D.iPi*j7j):LXK1*:9!EDKMKUR2L(sV1la)lG*D+Ek#G'"<WnnR_Yqh
%#pX@m]0Gh=Kk6\a+O'\;PT-Jp@T(aUN(CH/FI>m\'#<aXed%!3n;'uH1lAfpgXbdg4CO(,WhN6o-IfRaMaAh0WMt;t],SbUE`bP+
%2[fL4Y@j;kXH(/qJo0?fGE!QRs1]SZ8-jm)Htn=].fdXIL5r"8PLM"2a98mn"uJbU=;^:iOOkHV*<NeRnteh)"%2P^l;4E!5_G1.
%EF#_LP8:L0+!'cu%ZA"ZRr7-#@7jI9?j.<PQ0)*^Ur3!n-IM)NOtiW*Ur@.09SY:fR*Sl`)&BEKPo#Bl%JhW0d3OFVUR:X`:"%8q
%BVr_`c,X8>oOZM=p!<kp6C-8(<+h8<e]JP;Xq2QK.`J;!1MS)1iAD%3Kj!LG]:j.I]CusT[*K0]eY827XS)BEl8(/t*^s"#QK#Zi
%B=,!Yl63/:)6Iq5H=;_i6L&Jn],r"^,`^X:1)0Y`2',OR*G/GK=je%TESrkk@NIODPt7DjoD\I#:,hI$#R^#ERuPISZn1=pmLMC.
%5W@tK`b3n@OE/^EJUsNfh!8b8oM]W60r&JuS:qQ&(_9ciD/=^K(J5j;Ds[qSQ_4f+<aT%"Znptm&\t;1^IrlUfjsQkZ_Be,ECcAQ
%Sa@N-/,r>YLELU^W%Cq)A?EW-e3g2KaZ7'@;3!YG:JSu:-c.%>Qn]7mHeTY7V)E9ul!+&5`tlgi?C+Da*&+P=_L6M<g!%%?$l[)3
%6]n=O2Y_--qhK#iJ!7J4;JCA<J9MUuPT9CRdXj4O&1*qA!+)LdHhJWie/m5rhY%2&aj@U-hq/b33ho`^BcdQU_G"?o"Z!9-@=Y`g
%J[H!j0Je@1oGP@0D?$h7gi$)^3c"4\)mJ13fF1'u6XMmH[K3GH;OXNnDf:!W+7o`Zf9cBcGH=#Z5)HpV7d\,JkjO_VoW7nBo<u((
%__sEf[;SA=dHHhoDI7EG9ogqoVKAHmc_jS=Dd0gqFJGX(bVr8ghltE+@HrCRnjoo;;M/]S;504U<JGY5%IU`LAn?/.0X;\b"@?`,
%[l[LaADh\i7't4+Aas%r%B&/P".?j<H51#.4f"S4r)9]M#rFh>G]S*b41_lZ_6!U5In04f=]F[dBSO4:*?q=I31@MCEBn9fJhp1)
%L]/t[Jg[l7S*YOI4uQ5^$6gd)E0$[G_]?R^S\UYkJN&?3Z_M:T*nK.t@q^]4L$>X/Kst+]913:pr^o;PP"6l@s0Yim3r9Pcj)7`[
%DtaDFBao4B979S#_h?BDmmBFj+<#h%4k_+&=r(g,bG>=2U4LK^PuQ%$\+Y=4%`)GlY]M)<$]W"IeOE\TLmql35mlc$nI/FT,bJn9
%W]@7dNCn6L*V:]<&PhT;`r;%S/(=ceC<eep'snS_1Ob-RhQ(D7Kd6.[preoA1-#!RfZq2oZ2Z%-%+CD*<\B%,hA9cK'%g!(HP2HB
%"TJ,U&8mFAqV)\\5B>@0I4H2OI'#cuh8`V>S)`X88LOu",UCXDKdo$Tkh!JPs!+u_Fr9ekMCFm@6Xs6_pc8iRdTff#mBG.1[jUm!
%jSj_!R$frqj%1qOn0fb*1GS2mW4?S3gQN0g@F8M0Ec4b?s2[of8!R9*0H8mV42`XH=[&3sTCZ-G"GHcV#d0B*q6o.Of`.'q$#&`m
%UG(BLm!Zjnker1u&OZ`7NFj]t7_cD[p4).H@X8Z(^3O(Q2=nl\,hdXP5.NR9]fiY#,<$Ce\'e:[n&r=]B)(UpBe+f.gM/6p[jUnL
%?Z.Z@G7fb2eEBd(7D'a^JU(p@F-6;F_?G?ElnWg/NkL-2Z*u\hNM8&2a5-mts7jR.m=28A5[<T-j?94p=EPPSU7<5-.6Hfl?:cCU
%lC*dn?P^Lo+bf:f8mP68"/X@e#I@Z6!Ksa8La\s#Pl>MhF:!'t.<"Ym\KE%N=ffF%dtr`iQ='pp/S$4c_C!Hlf]Q9>)s3lI*Y\"9
%jN9VX69Y>aJsD9T67l7QIK`\'hJGW_"aB\CReggH7LZH%TMBFh]CYsQZ7dl'cV7iZe9)%.=5F)qq;%&4P"]"FPS:0?!UC%!jP+0q
%.+%&ZARRo!-HF5tm]9tm!AQasV'*_a_2\@sjGEEp*e0@J3i(I8T2bAZ5gVkr9YtoqXOX7D&A^br+ZB>$o8QmUoJgeSc3n7.K.>L\
%nLtpt.^b4cX([^t*a`*amfGKtPjejPlD^`B"@Y?K/`I'H5!P@`XrAQlS0f-s$B7YnJ4,U*,_XN9[7R$_HXm>MeZL&mSs"L8n]MSl
%CnFpYTU4.HH9p[%7I9e7EDjlfWeLQffk<]p[$K8\;$H11FE"r&<*1Ws1rgmKM.MQ$C*FZ1H7KP*FI*1q155)$]QZqrkG75Z&4SOj
%+<R.76$SHd=tT<4=Q`MMAIZhL_J8"*rN6&jqE0X$3@K`IC6ihS-2c`OA__]25Qp;-fH)]6_EbE,)c@#s3k`lSQbS0Y(Z/M/Jt2$S
%PVWk(a)H]f'#K/EZN<]*/FK3Kne.LU&)i-4AR,Ta7A.s&mI<<I%o&ZCUgS.Zo9(OXW9^*SjDu7g+GkQ&p,_p?iX_@<J-m?e^9*EL
%4clWq8i_]FFa31B4a0F,nO<,7G[5b>;?mM5M_luj"=Y0XqH56Z2s:F%9kZhgUmR41jgGb#a<_V>SPeGdI?Tg6]W$[6Rm4=3CPADe
%,kX.p8VQ?'Is^*!"&&;[gRq6.5F]l7L?Ke6_YC#?l:F`[*11'pRGnhsp(/JU*)P]f3uBsLm)PaF`&`b7BG6*d&TW/Z]g;S`#sG`C
%9crT\1`[UI[$RACp^8W_1!rkjn4Zu7-jm/Vd)5E3J>1M&Z86548k+8.`oD]k;.0S0'_!`$:As%,5dC1.rD-4<GT#&9+AdS`-^OKn
%g,<^NJXm@G,(oc=,doRB74#@E9kDH0+nZQOTe(=;lMmg`*e))<&gS@Q;e>?ub]KZWd=rmEXu'%iM^JXU-Lq\>%oF&J$sH#m5_a5(
%U+-18n^5Rf4A;d,V9@#?T`%60#WreF6LdY_->\`+*:#Knk3nApZ$gT^6j"3V"[b2No'87]+hNP)j*9&#E&8jEg]uCN5G4h8DLct9
%Y?b\s8js+;CDZ]b,OW$-?I\1)O(21q7+j#7B`eEITj:dJ/38lCY/K4+!H]'>?$A)X:c"j0T-g[WOUC^ZlCVNsbL0"mNhuYRE-OJ^
%<Y?ll6]`.7Mjl-!R..\"FNn;=K[/QY"PS>"N?iGl<NY%mnLofT`[<I!XNuEs#qTtdTKdYN="cPs!l5BQe^Yt#r+QlD]8E18K*4k(
%nt$BGDpRUOI;8U<EM\;=k9X!R8']^QrB<=Y8idk5<<V+]67g_"I+3I>$0<4k9OqP*Y_iJh;b(L`#D[iE9SeP1ohQUf@Y$d<3QZTG
%53HYb03po8WH=dBaLP^08s!W(\cg8aN\3i?Tq9tSJN=\j<'5i?J8uI]Rj=4U\d1Tt3jSu;ocEY4]PkH=,/+`X7MVVB8X,g_,7^V(
%85\-,K'rQkQA\ug(EG+b,"3jle3rTc&m/ue!J)[c./AsE+[jS3!In(a&!4;tjH^tgp4OLAkGAb(KfBGEG=33E_%R>9*O6"kBS[L:
%UAiNubV6760=KUAfp#f4gq`JaQlQk4^2^ClT\dq&NsSG\/:$OM;[6aFfI/fF%fKVWAH9Oo\eA<@T*0]dX?H];*"nP>#]Z\/!WFoa
%Y2r`C$XWgL@_<15JW(N,B9:]\ci+(o]r<oH^WfWBY4[LbIL&/s.QEGJ9F;aaH_P\DhURtU](Bp3k/Sg-oT2C-lA$qM:dCG[H%?kt
%KiFb!9T\[_J!ZBbY2'/^%<u\KR(kk[a7d@6'?0H/eO0N_ZJrd6Uc;VX&3E^!GVE^sL"2e/'&cZpJ?/@S0p&Dq9E9_c$s)Q]e?hp3
%r:#>,lluT-"*Og7rEbSR#$l`Se"?p\#Ul&-5ZEL_LJa?Noi%QU5DF9EJWImVjkjCCp]9m2#E$Wn;(i>G7g'aZU_5#V..oL[;aDM=
%1n1;2%%oE8UQ(MTX-5"3p,WgJJTQcJF8VI2BVaK2?Igo*W=Y;iLE\`A&b5`Z@eJhmh<`^q3@BdV>Qf=K#D4E5n$`PofKM3=T(+d_
%Ef6#0dRA'7FGZ?hU[`#lLFAA3ngs>#WjfoUj#YQm9`L&<7cj_?@0uJT0B2:afi@reU*+'$Qq<Ac,9,TtLhoEcn^f(bPZiK$\fcoG
%+XQ5Xp/aZDP9O(J8<oFn&eS:=(uV,u6C8RFg%5m!iL[eNon";t/L#=`E=Wnc.U51a5RE]7C,]+$0X:m7!$#Xoj]fZ<lbIauhJtW:
%<WhWB<[]0q[!&0mjeDP]VM^RC$doTKGpA:-l*(]J2DMl%*meEof^sGY(#=+#M@5?uid',C+4?R37a;&PPu-D1"db<\8WhYlkd=mP
%B1\BY>^R\XL1b?X[.P8VDX,4ae!sp5!&=Uu2#_?X*R"m5"X6b#8u.h?FA]J6n6)A27dD7n2'-t4U%q'W&ha(nH\!.>b'809%a5p`
%`LN9=:i]l%pd"]sBBaYSq'$!0fWicCK>ldtTHq\@T-`HN8"g[B1<2lJf#Z$lZiT6liB<=eNS9fCGU^o#lf;Q,P]*,4J&,p?\jV;L
%q_NP7T:A)C;uie=)SQB)M@pm5,giLSW8u8EKVGQj&UQ)U1Etl?*=&:*PErpK`n,dA57q%]#i9f7C)G5t0JIgk[8uLQ"!]-241uO?
%d.G1GLLF3TmNenke0frP".Ypq"E+$m4Aner@f!nH8,=Fq,_3qN4IGtVEZ2_g$Oua;nEbXNH)X2cZ'!ej(M':Hc!$nk9gj(tCDLWd
%b[:GX#o[*.WFr(."sS=3W4FI.$aI;0>@+^N2Ln_,@Dc=`)3d4M^H\I5p;+ia`VLgaJdCoQH#1Il+k1;Mae2m.:i_:84l0#:5O+#+
%hd_W0PR_.0[hl%oMNa5"-WlXE$N"9nAI:+l1^pRi:_<kBr[hGaK`<5rQ@VS3+OLi.*?=asa#`L;3:I=,/p1$[-&k+SXr,=u#IR2U
%bN-kYfpo,pOF3/T[V.NeD:KlARpAAc"Q$:L\J!<lMQn/>&r.34f\:Rka0cK)(,:a!-'W&.^Xm]!&922jN^Qpb"*s9F84XOaJR,SJ
%0EQ9Sa@juJr;?pb[a.Yi.*AX47tIGh;ZcEl8YC%c5d@-"U-'..6Id_B+fLUjT>3Ls1*^5b^eN#\eneU\n;#5+`#=meW6g-dfj_A5
%J)oKfWgH2j'ecH.P`GH#`['N%M+(nC^'!ArMnc(u2-t1%[(2f#/Cd'g@Zil:6?%5@86;bBN5*>W&1=gb,r4hS;YG.B`6M5,40]\4
%fu?Y8M2hSiA[(>*(=B3qT5Y7^`E-HlN&j74a!RXq\6MN"!rpi04uuQlAk^='QA;=9p5C'I-`<$tdaJe+l_:89nLgOJ:,JMFr]k.u
%_f)8S3'%nIkc_lqS.2bf$8uT1_a:)j1G00B3BWEIQVcUsok:T*U4=iq<i;=B*cdU/R't?23oI1)XPXB5$[M(N3$l[)2R1ub5nk]5
%FY9UG%.;P=q--n!WLk"o0*nO>-hARW.U$o*M.%<P.qa]`5D#rZ*#nt.=Un\,CA,f.K_Sl2c%6b_Ue/'!P)$oS7eQ^O<2dQh5[4fj
%Dk/?i"0IW^5#?&>(r7q_^H\F4p:89IKu@K2K\G_R-.4)!Hn1.imjRi==`sk--/]mLLMoj,Ic4<da_E]n1,WOiMGjMT7.]>sNn8t^
%IIcKd/;d0s;c/T>7A(F>(;=t=M2%rjNXI-\"NN8[\:]U0Cbu."nJZ%JEoD_i)NGu/B+K@m(`M^<.:XCA6PCGCKHsoK7[Zso(B(Bt
%b?m$.@_DE#+Vg6TUh!NA&Z.Wi;n#<g(/`r9A_%t`ZB3+B+nUADR"SR<n?XN9b.EPCDm4i%\Bl>)hk/5)qpb7Xi_]O5GDDRh-"&1>
%Vomiubqc7EAHF6SOE2!GDEK8g8UhK^5?YYXE(_6Y`k%SuSC@!fj+s8l=$R!ccTY"gHXr.833W[hNrgLF3XQrIIDiI.VUPTd3;:JN
%U'r'CZLD8'2Gj\[\L6<t)@EhQP1rg'`ppFrZ`*/o%,-W0psl9E\![dfGOeKUcbDWMF=3*nGfE+3l\gph'9pO"R0q<26]hV2.[/@E
%iURn7ZG):k2R0n<=[m-;+<F;tipT\,Z$gN\5]NE[=LeRtEC!X9\-h4df"jC<8Id+TFXi:cL')BkVS&Jd#D"oOfE9g^On']TC%F<&
%jVeW2erf//a9<^l2f!Hl(>9>@PhM%&*>X5TCs+?>PG82D7H391@T[&AGG#Nt6\V!1=tB/Q!>4G0J0(:;ksNim8t=h_k3W0@6$,uf
%25d(u<8n2c2'?K,=^nF#49S?_YYK14n1&Z7H!OOgSSJN#M:pmp:bNF57"$QG7ET"[ic!0+Z$U/f4Wma6&.X[c^eHGZ8`!>'L7$rt
%OO`H-"%AT@/?&D@EU(Q]kh"YJIl2i<77.Br2=_6^C)HVH<W7[W9gOLNLZps5h0,;lK#RX)-O1rT!qOXVO7W8+rMHiXXH'&[S$N9t
%#!)])nEU3u?PWMF>nnS[i5NbIrkcHDSHK^@:lC:aT!Ostc`M@8:Z0pI(8`md9mpJuS"7ApQrY^Ec7O2A:Z0pE(8`<Y#rit>9TC*[
%fO_g2m<!Sj[2XAmcUP>sSN.1n9UqV5X3lPgqBe9+Sm1SOT"n![FtfFP0b_rRR@V1\_Qn6h1EE&j*CcX9Z]Qh5B2H#O-*S.t:m5-[
%?EB\-c`M@8:Z0pI(8`l"/&8g31T3/HjlCiqe)@jfDWD*d)qi)M#)cZ&X_29/X**=VR1@QFFsBf@`Q/Od1QHHLDKY)<$&->nLZ_^M
%OXKX7A.-9mjCChM^uPpH5dTt)ChLO^X2E!lGW)j]km[.^e%*1K"Z;9:F(hi-iORKVj9[pfftqh8JL2pG3]hs2@&BaGFuhapg5S4G
%B-UWJcG[;_o>g^Q?ifClDKN>9iORKVj9`KkBF!!(L3=THG6[$:\EdGeFEh]2)gMM27^b"A5tM10@%Ws?p8N`09QgV&\(Zg(JS/W(
%0V$7@UL:4-fpT^pY4ZcFG\V@<Gll;][P48'4F?_d4+h4GEgnF<3k*d:4Fq,a>F;QY0n5dHkXn6.?<R(EnD%b;ncW8[["ITOZIsKH
%3BK#4`06as+J)d(7\7E%OY*[3Nm10;gIR/XE]B2W19l5qLmVhD*DWl.Fuu_IIq")Lq"a4h1LFG49,.-j9nDh>bX:pS?0C$`YEBm+
%LB_CKTEmSPG+RZVSNZs`q'V]X[1",2FMh1H&G]5"L@\s=)*Za,j/Yg82GO25;SuS&E3cD=cH4?fI'U*!=-oR0[dcoIeKGnE`"6hr
%4N":h/\JZInD,4=9ln400+Ptt4U-DlhNqmMChJe^/k&BVptL/Fn^SpTFMuq7q@oRgm.&W&HqKsgeYS#(/g4'S3,\3.F55L&j/YhO
%b]&Cgl-sgm=-mkpI>Y&BAEOgog"GDd9.977Y1pS<n^SpMb#hA]T&Gm(4heL\_MMDNU?8<f?X9CRA@]H2cg]'%*a`26Zj+>2dP5J=
%=<*[ue@JtTG_XOfp@t!)Pb(+RY>$O]\qEe`^M`Ma;gbmWa&eU(Hd01W]@?B$,pXbG4%W6+aiYZS\papq(#F'S'h=dOkk[Zp+=g\6
%V^<n)k1<[tS+kOJOfpAYrmaMi8?MBL`J9P:OIT?q3,hb7/c%N%a<h0r<5k5L!a?Uj(q2Ai/5R!oG(l+?/:0>SJV?h!f#SNW)VN#8
%m.J?a$rWt*jB"DI[]LGm:LIsK%tB][Ir^6-4+gU&l:F]n$uB-*7\7EHa<'Ia.AMc%?[PM%R*?K#2EG[@;/9X!_@`*PFgq)KAUR"o
%B/3t)gSQ^r"J332L#EI2,Ec9g(L1V)NT*R*Kl*m1a:m2eZ\K-ZE$gFm>F\"1<@mJ5@U[`c2=^mY7eSO+5o>`EC"=.)Z4omI[rr0r
%>;\mA^t-RJefYqan2`QsXiYX\d_`FmA)mqY);2lGL/fcM7G0^($#V2s38$$jD:KJK!a?mrpkst,C,r-4):h0bD@@K:[VCa`JZY%t
%r'dH#Dm'S$rZo:.qRqSWUW1:p[3i=1j!pa"S&4G^^6jnnRPD$`dhm?3>9eJ3c6/'IC<fQ!+H@n_Psu/9<fN4hnC43bbTL@J@6of-
%!?2&`,M9f?<Fb(rClRf?0-\OliRG1iN9tet(WO8!<Fb(rClRf?03\*=K]]?l/@(H:8u75YX2`3ofK-?o^IYnlm)o1M0XH>X/[I5;
%2Q^.-:LIsK%tB]u%ORFc^6h?m2.L%Kkch<^Vs`our=WH/(+)HQDZ,]T0,f@$CGI<4J>F%0^gDq6&=^L!A$Ah2)'Erd+@fg*e.+e[
%S^4ZNn0!;DP?HBD8@:sO%h3n;4u]"G+Ufc(f5(S8*^trgNohm+I5CZ^LbV!&]]!`#c1$Ih>=?g7/>Z2kWhK;+Ek5*g=uNX&(CD`[
%b)HlA%6/LNik=g#lsRs10Mu\7SuBZE$e`/6#U4@,U'G6-lKIG`0fV5+@;PUO-2Bf,QrJL(8?S/%7T@i/E_kdSm:*`N?Csd[d"8\^
%'AiV'bRT)\%hm()kD<a$Er<!N`$iaWBpuB$-/.:0C1DE`^#<i$D5!E/BITN'eVpL%kr*W+YW/NU4njbQ(<p\h[/hYT/`->Ac$#DS
%&!gtrZ_\Rkp6$"qNF8VSfDJ*6T_6RfUEdeFkjjJ;e[LfY"IR4)OcaCs4M0o;F>0LEc#:3af]V5A4EO\ElAii1hi6=*P4;tTgA!d-
%NMp#^cIkb\;Z:9Cc@XV+K9)$0Z_P\_hH&MLWf`p'`-Hr]-]ZR0\:+])JdALHG]+B*"tE8)4LCdKc@i[@>I0kHl[u%fqE.X"6:$&A
%5a_!^cZoMY5YJN$#M$i\kjjJ;e[LfYA2pOYnjG?WGp'N!;N8P-o="ku<U+g'6lU(hg>\[eDKO6Ag7N%:r`YbiCNnk8Z_3=Q>c,CF
%[%8._FMjId*StbDqR4i=;&R^;efC?u^$B$)3$P2>iRoAMm$u*+$VnC?Gji3u4%L8B9LKh\-_aI\j-UX3*a3V>/3Flq3]>pD$"J$u
%G=1'KfYXpUZ_UkZ/3=-p>iiE`E!S5N@b/4uLCD$Mbi=E]D/Uc6p"Z#''NlM/cdlaPZTDAHO>R).al)<$@ficN"s4j?Ak/1H]WJoM
%<($T"htJ[^nr!0)$^Bt&.5A4L\=K-[%LZ%fZ$>`L0frJm5"nopT-pY4>&c0A('hN-^[,)Md/%ADd1Kl3FEtdYlJ"og[7p..iSfk8
%J)9oNW6Q%2Z=c0oHK&3'//GVKRIK'W@s5(eI$gij5#5-&+8q_]IbldiIVI&7QKS>[SrM"2o7jX&Z%Zg9O<-u#h,2>G-e93fq+^Ad
%*hk%O_A_tGQ)8pi]!UpWUlIg]c]CjO$5SZ-OP!@XJei5i!DDK5Z)R>V$LV%(\FAt76]1(mCA(!*5J>U)98Iq9(ZZ0j^ErPYTJ^t=
%dCqpcX<c(VOZ!@3Mj.9LPG`_DW/O[a.Ck8s]5YB?RXt%mP/[[g]h#EuVg?Vm)0KP8H,Q]SV%H&F<=k/W7pXalX!jP6nKGk#!+)Bk
%+WV-aAq1:!&d!sAf]=>;:i_s4'^@>HcfP-;+&<qqHgVJ[/\%=_R+NcTM^j[()Ae2Mp.UmfNZo<oF$*?/V1QSgJW-IIL,^C1c!M#G
%.X^:g(I/lQ$S!igP^cHi-.]/1\17NKg&$Ill\c#gcm)S\Akf1f0)g.IHrJ*6L[=]%7CC+/nU0;D@dF55!YmBR*M,;Sne*^il=faH
%Vl$)[FVY@9n?J:I]hVQgjI`?kg0'LKMlI;CCfq;L3(pt<>M!=bB9?"WO(;BCs,f?[P3(#\aqTA;?K-:fDG[aX5)n<LHgIA;HdY_5
%39`do7"^Cn)B2\R[!&rg\Q-R5Ah]>m_Zc0gGNf^&-F,#lD30p8*i_XQEf1&3O*u^Pk&O4RAM`VeGDOZZruB&qW1.cu_A0=Bjc'Y9
%eFIJ-*O[VW%Rab5'@,^cUC&\]fT;fl4F:6*Z(S;7Da*^A@BiJOh`2RLpu`r[&-Mr;;uiW]<A)"]&RuB6/-6W0S_]Dmc5IIH-,_!J
%!/&jSA(u7b=oLNu,ti!WVaKQ3OaIu@5!]Yd's]tP+`VarT#C#i4nd4-4_<i;?i9J^.XO0UR)R+d0<2j9b3-`&NU[Z*9GeDblAMA'
%%G6N'dH_2_R\=+n6F$FJ@*cD_%20A3,WFGL1-6F:Ht.2)X`Z[9@.j28L.A^B9;DB.VB1'cDq(BRYS!Wb;qk_J%$OkfDdb@?.mlI;
%VY6halWU5M@@qk1VBu3l6un8c%@a=S5OHB+P6TLeB55&^1UX)aUSZB:4&_2'JTkk&5DIKmTshe'QoZ"Um.610g0H[>C?tFNBuSL,
%p(G;P>OkSnjd7usC=kl?puro5Qo(2=^/3R3?)Se")D-s:hjJfW$+s4&1c/s@[_\7HY#OsP@jooMqM!Wic,OfF&;mR4V?*Ca8jnr'
%;]V@,2*^KH(m>0Qee`(jY7%b5>D(YWrB!r=4b5P,;0k74Z47-\[_tF_'d;r[bGpc::^`QH;n`kP6bpUY1/V8Rg8g`B006O<4+95(
%*$tpA>+_e]^<Y5sDN0rOp[:d=p&s6O%HZ'tgc?R"fFejLBHBq$+bEo+[8=Aa]_b#IM?FqT47ng]>ZF02]fXcKL"c(G6-M#s0Pu63
%[e[L241[:Q)Vr.ap"0q&UGcJG#b0,hG1[AD,(\h]1BsCQ\#p8tPuAr]G_2VL.'l9ZksTO[1(=L0S#J80mDKj*#1M.9C:g[Q$f&?O
%=rQ531\KB63%hl,>^L@AEXD)JPh"pnCr34U4<2Ps.e?QQs8$kVjRl"h]DU7Zo-<S'6(7>"X<dtjRSuT<&ar-LR2:'&k$+RJc*-s*
%8Fa]jOfu(],1SmV7C=Ca2'[Ql27aGVN!FMV]t4hhn;r1^bnmpQpicHbcOn6L<+"Nbpc:4g&DqkF`g"oMhl4e0jJ^s"Ld6s@]!4!>
%jSGH\0QP/5^"psGW2[t<8kj`YrrE6c/#M9uT'%o1YX4]@e0L0t13l!_CG=Y4`;56)G0kr]"UqU:)>#Umb4K?Gq1.e+n9#sg9i>*.
%5"s^W_]H.f%Am&8Clk-D@A,qH5>M^taLX4Tmej:J3dIXfZ"Hkh&gha+'P<q^KsZrkopp>=:2Wg*PQ%Z0P8@?=21sRW(q=d6QlN2d
%egFdZY7n*9D3G=K_a6a>mm=+lXA]>krXY3fT6I.RHNG.o.'deu2enDN:bblVrPNmAWC\Kc8jMrdc![sr#4<KQ-3l9#onhD]lU3<S
%&Q/;L=?r#g:H;*A#.%&B\GJKaNdfiQHL(r;C68NAdT[Bm#`Ff9Xbg3c7Q<Uq9dhpZ0#G231"-L<[gj@@SJ]heV:PEVWJ*b'EDC#!
%6_IdGdmU=WXA]>krXY3fT6I.RHNG.o$0mk&AMuCLP*t!JWG%T30qo#@GgSZ1R-fQXH[ggm_96M?@^`m0&IVn41l\esHp$CK5='p)
%QOMZ_mhSD@D_+&[gbi!q^fT]U)lqa50Fhr/'l'=k8Mm2.'R#Hk+EtR/B"MI/hV2IZYVKCS=<5+NZpHn$9`kX=W`A-7Zt(lVP_$IH
%_rU%ESZ0Z$^d`/]pjASqDG]Xr80X;.;!Y:j1!th]"M.RaV[:.JVAC"c*B#6+0rFW#g>V?c/VJaZ]u3`Oa6?FKr"'<LWASXmG*j9!
%hO/]V#ukY:_FDJnB55V``CslY1M"JQZo10KadL=/8m0A9CZ%tT0KH'PX]oP"YEi@F.@3#R*%4bmna?2r)U(6Ri9pV!3Vn#6lEM_@
%;2ZBKI,:f]eB(kF"s2cfrg]RW%n-hB=k='oHXYjhiF-a<1KpEL*PP:uihB$HS;)aYAF"):1734,^to$!EqJtKe729^UXh`HHMYQO
%/ZtD=h)\JmZ<%Z*0q*2YFjRX10\Zs;pC7^tK:('_7.'JdU6]N<AKFa2*g%=N3a+;+FiqMUs'a@Jo>]9i:S:VOY#bI8U)'l8!9[%X
%6O"J_!_8Faj`dL7H$@MBVAC"c*B#6+0rB(dXmsq>>9B0R[2TJiC-eE>6aW5'b.uj5@<2#3cI??"@&#VMXU6m`Rh7^peeNd(%2hd\
%RO1sr5RQhG_/(b5gcIVl%Uqon'=Ga0M-?Db?dnLAYtL@?9hP\s:)US=5>7)dhO/]V$#J*X6eAqmL#<$/Ph-Y%6eL8[Anl`m2)VNS
%bkAoh]u.bK+D.uE;*0/rW+E5g4B"<CP=J7MZVDCJq`dc7IbpK=lj7LX;C->Z`(;NpoZre)'U+OJqS4+2'IqR&AMMpE"8D3nPCo1P
%p-e69F/%4D!cJu<*.k7o*ndu30^FmQ]D'4=l/do$a.>Diomk\//F3$'.$UH.Vm$9gDo[58FJ.o["M8j//7s3:iRVFIZ4g_O\'u='
%/[Yg/Oj@b*W*%Fc=JdBs=f2\`r?!@V5OV9/p&m9g&[CAV)mp!+!V/:**=1XWDL.`V:0`^Lp9tgD]eFEon1ZkY)6H]a%UUSue#>+Z
%`WD<'@[NI+(:-aR\GJKaNdfiQHL(rSe9VfeMsKZdT_@$G*ZZ5l3EXa6msn^o[4dMT#.(usE:<9M3J\QT:Xfk]-YgQHZ6P*X&@@CW
%Busc6.0FeoLWRri4&_2'JW8CDO=7\s>(fZ5i0T!1ToU+Ah9ZOtL;p4l^PD7udOlFgN="(h7-3oTU([.Pb5D2[.,8shccfd_8HX/`
%]>[(sSX7Bg/g9ecA">j>Ef4n1(bH+b:-9^S/l+.sPu1I2fE'krL/!:Y6AN*Hk\/QZC4%jc+qTpRX6.`*MC-uPPsL?^")L.3>J4Zn
%@NJabPXgCck.&Y4Lq((G#ar5;1BE?pdq:bN>KD&,d+6*PXg?@n[2]\V/;GW/F^:;9`;*\?R3%TDN%YBP:(MEZCNj)+>IKbc#'lQ#
%7YGQ`35ib1F!rt,4Z#Q8ZQd`ba[!jkK=5(rF.J6:Y,-16BW6[S4DG"f5PLiXh"4&EA@sX1F*j;?S\&t7fJ4dQSeoOnXn2C7[OS0J
%k9gX<9d_nJaq?"=WO1#khP/^sA$0f[g,2hJ*t=Lu't"mqq"$Pp"s5C](,F_`[(/?Dp!2C(H#+?s.W^[Yi\QjU%Z]^E-#2,Fl,;^P
%8NrL-ctsrd]KoaTLUk^LB\--BI'cjb>]*9bpBbQKF.0coA@sX1F*j;?S\&t7fJ5@Z6u9f\M%hee&s(*:7/^g8A3`G-eqn5,M$,`,
%fV*Iu.HRoB;SX=5;`a,GS[?uT`-GZ\^PiB$MlPYGT]Sh$5_;4(#/1!Ea%!/\3fFqI)hfX[mJafEB^:F3@CgdFjKW8gf0ZH<@Dq\T
%690)n.&iD6_49Ck#+;^h9Z9in\ULt#VH%"GJ,FqM/X7!NrAQ<NRZ(12:5@>c+?)XIVfdcNle9IV_$6eAm_6CfE:6hGa`d^(e72:I
%;#@S/K9l9]*(d3PPe/QIJ'QP@'QK.\Hgth4X:\F'Kln5,d!u)l`6QtE@W73$#GU^+4Bfi"(_u^=-fq_"+l6$>?]"H<"qqCTlG%gs
%@cr).RJe'1)Obn:)B2;B^2%JdDB:lG8\t3IO(4tF,>t]l&6ck%C2U2jlYmtmT/.HU_0Ke_#Z<-nEijnbkuqajY4fn5$L,iJ%4EjU
%1CL8(Y:JJAB3H6BCfl$H@8l2[bs,4?P-;V3h/Q(#AAUr!dK2m@$naq8qj8j3Y:K$)iCfZ-7d3g.gJ5I?E+.K"\?f_j)GkiaW9uja
%Y'BE.Bl6bPiU-/gcOJF+9mqAb)a&+nAa<>45;QCHU,ka#Ldli"o]M4t;EdNK^7&5Xf\mS-^*pG<4FT<s1,]T?%]h3?LKBd3n*EDY
%1u&sQ3ECAl0hU1D:1iUti=eF(*T11)5SSk^mRAs!npJ!1gt%X0F3roSF4N8R=.7Bp#=ZY6!S)sjkN;BYoB;iaY#DUaD.U<;)lf)C
%QEF1GHt"NNc"`]_n7ah!TV0sUnr7AEpn988e/H2bJrHnN[0Ed-Ri`0(N*-7_%kH,onk/Q<SnW$QZ!hJq]&=U&j/?ZGGMTa-`K5a(
%b-VZ5\3#T,\hP4##uP#s7Stf9f;Ud[fh=08%c82712VJ&=>FItW'7:V2kO0O7gJF6m8RnH>H*W]XbQ)4.L-2&S5uX/5-`&dhrU-s
%3&U%p,mK.3EJuiR;5V]O5;S;+oHIeHED=97C%L@NOtg`;ojMFCq7JK=qe'.!6u5t0M/N*CBIH]3%FGWW8AYT,>)5X.l>o>"e#I+4
%d<,muha]U=%=nZE?Wu&"\.WY-4?,*.#M=E+M/GM\7/-\Kecl^*elJLa^*3@"9&hGL%A-5/:++7QGGokoE29cp%;EFTb[\Y4GVQDi
%_Sr:F3;'/$$dn[gSKhXp@-YSFF8'q@H$%@rekX/<[?]s1hhagQ0;jqdk`/FYTm1EVL@,&@0<Y]3'-;HORMkjo'KnD<5!ejZB"EOD
%e)n]'4_*&nlGH5:oD*OJHO"D/SVdkpO!f<mW%P>qOMd(CL/0AZ\f>/Z1Pc^4S8M:Ba9^SPGTi\'kV9K2+obI&"`"?EVTk/,8]L)s
%eV0:Pk4)(9kalL*&@#Y\-+`%SU/@6\.d\b6%A-2._/Dnj!RFOjQeNiL5[FE(Qk$d1?AVF9NLdOc*F+FZ59;'fZN_*[<hc)(/((,=
%p9Acb2QX#K2gdtLjYY+s'Ai89,h+3VQD#6tjY+j//()G(6"IsWFBqAtE6WaI&91AtYG)rDniV@^-o*[iW",mk2htJ+8+180SVIYg
%/'e[^n6A[ol*b/;n3g*'r(UM;D+)/]kA:GF>2@GgAUd=TdaX`+$,OKa@OoX^Vh6+%dt$`!b&VQJAU3pn[+8s$1U_>*n:kD%aRl`X
%h!g.BL9@[([OVW+^?r^5e=G9+/'/89`/f0KN[!Y/r`M;2^m/O'j$Ae^CI%Q$jgk3"niSsHT5(95_qW=U_`(O:W\_%\h=-7I6tiB=
%b_ERLI27L/g2Yt-i8J']p:LG#aKnY)r&T%@+klp?E+I02:jlH&(6;Oc8*:<*K8'hJ/'SO<dp/7%FnW=_ZXCg*8'!Yu,0(*5,5eeZ
%%3='K"C*8n!l]'6IsYiMU7Bir>6@s$c&XqZeuSo&LP=s[oBV;.%bg+"WS$_6Gf&WuC?QpQ#$IpCpr$&j0a4BW/>!F5+Ke\1<7apt
%D&u*f#OBa_c$9S'c-oAl=/sN+#><(<!S)sjlK7\1p#r&cY#DUaD5Fi&)lduYFQDJj1$n\R;N@-"Xp&>Yl>:%p1NV,cP9En=?2!l#
%kj,O3WPap<%:#kj59;?nZNaAN<iVY8/(LDIVR]"3L:<H5L2X"c?K0(.WZ+.,K\015r_6dRAtQ];4&@0hdX.N&c^tj8\P18AUg\B:
%p8`fre`Oo)-"GMVlGH5:o6I0YFO35):;qssQ0O*BW",a7\Y6Un'2&@0OOq$nFo@``D&83R7-AHOU1XmK==2"um&I\ZAQ!@&9""Kb
%@*+cnT_bljh0`P.*Z_W4FXf;^X].6,6a]FAPe4%]3^0h0j!Rfk?U-9pP#nY,b7jf%>-*X]ka*f'W'l!f0hoA>E2D:dGd(`&%^>c5
%;Vc_,W?*':bmc-\]WG-lHpb;?D:Y!;L<hEMMW4h+an5/u(!'76=+35tp'1Y!id<BG;=j)BbLG"VQ"opN_3-Ng5kSQ^](s!:4Z[8K
%Co:a[gIcV+pJG;!)K?IK1SfP4OC!u0-l&;sdd?f[nS6BI7^qCmA-*0l2Cbs8`F3EK'X<A<Zs[hm(#f%sB'VpjS@BTI4uDc6ptY@?
%iq:9T1lu,kj<V<8[^c]$^.ik<Lc*r!]]3l%c1&`^]Jt12,Zok&%2Ps*^/3X*b8una0:r2;@$81ZKkeO>Sfst<B!]QD8EVY4%gkL$
%T,$NN=thj"?.Kk_<"me(\)o$apbq*5,Epg3jW/7uhZe!l[+M_brq[.Tr550+rI7N@ocO51hd6?\cbKJHjeW$.qTjZjbHLs-Dh%a.
%Dnl;=O+6rJhuEVhJ,SKTJ,LlAM15Dqoq-^/bMRdIqu?Mj^]"#PhuER<r?!0WU](LJqU7\.VuQ8,5Q"ljM_il~>
%AI9_PrivateDataEnd
